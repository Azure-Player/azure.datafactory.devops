<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Services.WebApi</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Services.Invitation.Invitee">
            <summary>
            Invitation Data
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.Invitee.UserId">
            <summary>
            Type of Invitation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Invitation.SendInvitationsResponse">
            <summary>
            User invitation response
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.SendInvitationsResponse.Invitees">
            <summary>
            Batch users' invitation response
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Invitation.AccountInvitationEmailAttributes">
            <summary>
            Well known attributes of Account Invite Email that can be overridden
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Invitation.InvitationData">
            <summary>
            Invitation Data
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.InvitationData.InvitationType">
            <summary>
            Type of Invitation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.InvitationData.SenderId">
            <summary>
            Id of the Sender
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.InvitationData.Invitees">
            <summary>
            User Ids of invitation recipients
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Invitation.InvitationData.Attributes">
            <summary>
            Invitation Attributes
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Invitation.InvitationType">
            <summary>
            Enum value indicating type of invitation
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Invitation.InvitationType.AccountInvite">
            <summary>
            Send invitation to organization
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Invitation.InvitationType.DirectoryInvite">
            <summary>
            Send invitation to Directory
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Invitation.InvitationHttpClient.SendInvitationAsync(Microsoft.VisualStudio.Services.Invitation.InvitationData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Send Account Invitation to a user
            </summary>
            <param name="invitationData">optional Invitation Data</param>
            <param name="userId">IdentityId of the user</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Invitation.InvitationHttpClient.SendInvitationsAsync(Microsoft.VisualStudio.Services.Invitation.InvitationData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Send invitation to a batch of users Currently only support less than 1000 users
            </summary>
            <param name="invitationData">Invitation Data</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Invitation.InvitationCompatHttpClientBase.SendAccountInvitationAsync(Microsoft.VisualStudio.Services.Invitation.InvitationData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Send Account Invitation to a user
            </summary>
            <param name="invitationData">optional Invitation Data</param>
            <param name="userId">IdentityId of the user</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Invitation.InvitationCompatHttpClientBase.SendOrganizationInvitationAsync(Microsoft.VisualStudio.Services.Invitation.InvitationData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Send Account Invitation to a user
            </summary>
            <param name="invitationData">optional Invitation Data</param>
            <param name="userId">IdentityId of the user</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.N">
            <summary>Gets or sets the 'n' (RSA - Modulus).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.Kty">
            <summary>Gets the key type of key.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.Kid">
            <summary>Gets the key id of the given key.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.Alg">
            <summary>Gets or sets the 'alg' (KeyType).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.E">
            <summary>Gets or sets the 'e' (RSA - Exponent).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.Use">
            <summary>Gets or sets the 'use' (Public Key Use).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.X5c">
            <summary>Gets the 'x5c' collection (X.509 Certificate Chain).</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.X5t">
            <summary>Gets or sets the 'x5t' (X.509 Certificate SHA-1 thumbprint).</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.#ctor">
            <summary>Empty c-tor for deserialization</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse.#ctor(System.String,System.String)">
            <summary>
            Returns a new instance of JsonWebKeyResponse
            </summary>
            <param name="kid">A string that contains kid of the JsonWebKey.</param>
            <param name="kty">A string that contains key type of the JsonWebKey.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Oidc.VssOidcConstants">
            <summary>
            Provides constants used in token exchanges for OIDC
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Oidc.VssOidcConstants.IdToken">
            <summary>Id token Response Type for OIDC.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Oidc.VssOidcConstants.OpenId">
            <summary>Open ID Scope for OIDC.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Oidc.VssOidcConstants.Public">
            <summary>Subject Type Public for OIDC.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Oidc.VssOidcConstants.Pairwise">
            <summary>Subject Type Pairwise for OIDC.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Oidc.VssOidcJwksConfigurationResponse">
            <summary>
            Provides the properties for the response of a Jwks Configuration Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcJwksConfigurationResponse.Keys">
            <summary>Gets the Public Keys for the response.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.VssOidcJwksConfigurationResponse.#ctor">
            <summary>Empty c-tor for deserialization</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.VssOidcJwksConfigurationResponse.#ctor(System.Collections.Generic.IReadOnlyCollection{Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse})">
            <summary>
            Initializes a new <c>VssOidcJwksConfigurationResponse</c> instance with given values.
            </summary>
            <param name="keys">A List containing JsonWebKeys.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration">
            <summary>
            Provides the properties for the response of a token exchange in OAuth 2.0
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.Issuer">
            <summary>Gets the Issuer Uri for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.JwksUri">
            <summary>Gets the Jwks Uri for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.SubjectTypesSupported">
            <summary>Gets the Subject Types Supported for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.ResponseTypesSupported">
            <summary>Gets the Response Types Supported for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.ClaimsSupported">
            <summary>Gets the Claims Supported for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.IdTokenSigningAlgValuesSupported">
            <summary>Gets the ID Token Signing Alg Values Supported for the response.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.ScopesSupported">
            <summary>Gets the Scoped Supported for the response.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.#ctor">
            <summary>Empty c-tor for deserialization</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String},System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Initializes a new <c>VssOidcPublicConfiguration</c> instance.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.CommentBody">
            <summary>
            Body of the comment that was made on the commit
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.UpdatedAt">
            <summary>
            Timestamp of when the comment was last updated. We need to check to make sure that the comment happened after the most recent update to a PR
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.Id">
            <summary>
            Id of the entire comment.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.CommentedBy">
            <summary>
            User who made the comment and is responsible for kicking off the build process
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.Repo">
            <summary>
            Git repository of this push.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment.AdditionalProperties">
            <summary>
            Bucket for storing external data source related properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalAzureContainerRegistryPushEvent.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalAzureContainerRegistryPushEvent.PushData">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalAzureContainerRegistryPushEvent.RepositoryData">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalAzureContainerRegistryPushEvent.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.PublisherId">
            <summary>
            This string identifies the publisher that received the message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.SourceId">
            <summary>
            This string identifies the external source that sent the message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Id">
            <summary>
            Identifer of the build on the external system. External-system specific.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Name">
            <summary>
            Name of the build on the external system. External-system specific.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Status">
            <summary>
            The Status of the build (see BuildStatus)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Duration">
            <summary>
            The Duration of the build
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.StartTime">
            <summary>
            When the build started
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.StartedBy">
            <summary>
            Who started the build
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Details">
            <summary>
            Json blob containing the details of the external build
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.Unknown">
            <summary>
            Unknown status.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.InProgress">
            <summary>
            The build is currently in progress.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.Succeeded">
            <summary>
            The build has completed and succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.Failed">
            <summary>
            The build has completed and failed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.Canceled">
            <summary>
            The build was cancelled.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus.NotStarted">
            <summary>
            The build has not yet started.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent.PushData">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent.Repository">
            <summary>
            Name of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent.ProjectId">
            <summary>
            A TFS project ID
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.DockerHubPushData.PushedAt">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Id">
            <summary>
            Identifer of the push on the external system. External-system specific.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.GitRef">
            <summary>
            Full name of the ref that was pushed to. For example: refs/heads/master.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.BeforeSha">
            <summary>
            SHA of the branch prior to the push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.AfterSha">
            <summary>
            SHA of the branch after the push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Commits">
            <summary>
            Commits pushed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Repo">
            <summary>
            Git repository of this push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.PushedBy">
            <summary>
            User that pushed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.ProjectId">
            <summary>
            A TFS project ID -- TODO find a better way of sending this info to build
            Also used for identifying the Azure DevOps project associated with a GitHub check rerun event.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.DefinitionToBuild">
            <summary>
            Describes the definition that should be built when a GitHub check rerun is requested if we can't find the build by build id.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.BuildToRetry">
            <summary>
            Describes the build that should be retried when a GitHub check rerun is requested.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPushConstants.SkipCICheckInKeywords">
            Currently this list is being checked in the SimulateCodePushAction class to catch CI events using OAuth or PAT connections and in the
              GitHubSourceProvider to catch CI events coming from the GitHub app. If other source providers are moved to using an app connection, work 
              will need to be done to ensure that commits using these keywords are skipped.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Id">
            <summary>
            Identifer of the push or pull request on the external system. External-system specific.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Number">
            <summary>
            Pull request number in a repository on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Title">
            <summary>
            Pull request title.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Description">
            <summary>
            The description of the pull request
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Url">
            <summary>
            The url for the pull request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.WebUrl">
            <summary>
            The web url for the pull request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.MergeRef">
            <summary>
            Full name of the pull request merge branch. For example: refs/pull/5/merge
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.TargetRef">
            <summary>
            Full name of the target branch. For example: refs/heads/master
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.TargetSha">
            <summary>
            SHA of the targer branch.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.SourceRef">
            <summary>
            Full name of the source branch. For example: refs/heads/features/myfeature
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.SourceSha">
            <summary>
            SHA of the source branch.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.IsFork">
            <summary>
            Indicates whether the pull request is coming from a fork.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Draft">
            <summary>
            Indicates whether the pull request is a draft.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.State">
            <summary>
            Indicates whether the pull request is "closed" (merged or abandoned) or "open".
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.IsMergeable">
            <summary>
            Indicates whether the pull request is mergable, i.e.
            null  - the merge job has not finished yet creating the merge commit;
            false - the pull request has conflicts and the merge commit cannot be created;
            true  - the merge commit has been successfully created and the MergeCommitSha field contains a correct value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.MergeCommitSha">
            <summary>
            SHA of the merge commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.MergedAt">
            <summary>
            The time and date when the pull request was merged
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.UpdatedAt">
             <summary>
             The time and date when the PR was updated
            
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.CreatedAt">
             <summary>
             The time and date when the PR was created
            
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.ClosedAt">
             <summary>
             The time and date when the PR was closed
            
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Repo">
            <summary>
            Git repository of this push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.ProjectId">
            <summary>
            A TFS project ID -- TODO find a better way of sending this info to build
            Also used for identifying the Azure DevOps project associated with a GitHub check rerun event.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Sender">
             <summary>
             The sender who sent the pull request
            
             GitHub Note: The webhook payload includes both sender and pusher objects.
             Sender and pusher are the same user who initiated the push event, but the
             sender object contains more detail.
             </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Properties">
            <summary>
            Property bag.  Subscription publisher inputs are copied here.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.IsFromComment">
            <summary>
            Describes if the external git pull request originates from a comment event
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.DefinitionToBuild">
            <summary>
            Describes the definition that should be built if the pull request originates from a comment event. If all definitions should be built, it will be "all". If IsFromComment is false, this value won't be checked and can be set to null
            Also used to specify the definition to build when a GitHub check rerun is requested if we can't find the build by build id.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.BuildToRetry">
            <summary>
            Describes the build that should be retried when a GitHub check rerun is requested.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.LastHeadRefCommit">
            <summary>
            The last commit made to the head ref of the PR
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Commits">
            <summary>
            The commits that make up the pull request
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.Assignees">
            <summary>
            The assignees that are on the pull request
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.AdditionalProperties">
            <summary>
            Bucket for storing external data source related properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.AuthorAssociation">
            <summary>
            Association between the individual who created the PR and the target repo
            Examples: COLLABORATOR, OWNER, CONTRIBUTOR, MEMBER, FIRST_TIMER, FIRST_TIME_CONTRIBUTOR, NONE
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.DoesAuthorHaveWriteAccess">
            <summary>
            Indicates if the author of the PR has write access to the target repository
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest.AuthorIsRepoContributor">
            <summary>
            Indicates if the author are repository contributor
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Id">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Name">
            <summary>
            Name of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Url">
            <summary>
            Clone URL of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.WebUrl">
            <summary>
            Browser-viewable URL of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.IsPrivate">
            <summary>
            Is this repo private.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.DefaultBranch">
            <summary>
            The default branch of the repo.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.AdditionalProperties">
            <summary>
            Bucket for storing external data source related properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Sha">
            <summary>
            Identifer of the commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Message">
            <summary>
            User-supplied commit message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.CommitedDate">
            <summary>
            The date the commit was created
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.PushedDate">
            <summary>
            The date the commit was pushed
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Author">
            <summary>
            User that authored the commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Repo">
            <summary>
            Git repository of this commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.WebUrl">
            <summary>
            Browser-viewable URL of the commit.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.AdditionalProperties">
            <summary>
            Bucket for storing external data source related properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.Name">
            <summary>
            Name or login of the user depending on the source of the data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.Email">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.AvatarUrl">
            <summary>
            URL of the user's avatar image.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.AdditionalProperties">
            <summary>
            Bucket for storing external data source related properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.RepositoryOwner">
            <summary>
            Owner of the repository where the comment on the PR was made
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.PullRequestNumber">
            <summary>
            Pull request number in the repository where the comment originates from
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.AuthorAssociation">
            <summary>
            Association of the individual who created the comment
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.ProjectId">
            <summary>
            A TFS project ID
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.Command">
            <summary>
            Describes the command that was used when making the comments. Corresponds to some action that we should respond to
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent.PullRequest">
            <summary>
            The pull request that the comment was made on
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalCommentEventCommand.CommandKeyword">
            <summary>
            The keyword that is used to define the command
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalCommentEventCommand.RemainingParameters">
            <summary>
            Remaining comment body after the command keyword
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ExternalEvent.IExternalArtifact">
            <summary>
            This interface is used to group external artifacts.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ExternalEvent.IExternalGitEvent">
            <summary>
            This interface is used to group external Git events (push, pull request).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ExternalEvent.IExternalGitEvent.PipelineEventId">
            <summary>
            The Id of this external event. Can be used to tie all subsequent actions to this payload.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper">
            <summary>
            A helper class that implements a retry strategy for ACS requests.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the AcsRetryHelper class.
            </summary>
            <param name="maxRetries"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper.CanRetryOnException(System.Exception)">
            <summary>
            This method determines if request to ACS should be retried. 
            See http://msdn.microsoft.com/en-us/library/jj878112.aspx for more details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ResourceAreaAttribute">
            <summary>
            This attribute provides the location service area identifier in order to target the location service
            instance which has the service definitions for the HTTP resources in the specified service area.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute">
            <summary>
            Use in conjunction with JsonCompatConverter.  This attribute describes a model property or field change at a particular API version.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            This attribute describes a model property or field change at a particular API version.
            </summary>
            <param name="oldName">Old name of the serialized property.</param>
            <param name="majorApiVersion">The major version component of the max version of the api to support the old property name.</param>
            <param name="minorApiVersion">The minor version component of the max version of the api to support the old property name.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.OldName">
            <summary>
            Old name of the serialized property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.MaxApiVersion">
            <summary>
            The max version of the api to support the old property name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ClientResponseContentAttribute">
            <summary>
            This tells the client generator to set this property to the content of the repsonse 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ClientResponseHeaderAttribute">
            <summary>
            This tells the client generator to set this property to the header value from the response.  This should only be added to types of IEnumerable&lt;String&gt;
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ClientIncludeModelAttribute">
            <summary>
            Tells the client generator to create meta data for this model, even if it is not referenced directly or indirectly from the client.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ClientInternalUseOnlyAttribute">
            <summary>
            Marks a class, method or property for internal use only.  This attribute ensures the item
            does not show up in public documentation,  adds EditorBrowsableState.Never in C# clients
            to hide the item, and optionaly adds @internal in TypeScript clients which removes the
            item from the TypeScript declare (d.ts) file.  This does not exempt this API from the
            formal REST Api review process.  Our internal APIs must meet the same standards and
            guidelines as our public APIs.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ClientInternalUseOnlyAttribute.#ctor(System.Boolean)">
            <summary>
            Marks a class, method or property for internal use only.  This attribute ensures the item
            does not show up in public documentation,  adds EditorBrowsableState.Never in C# clients
            to hide the item, and optionaly adds @internal in TypeScript clients which removes the
            item from the TypeScript declare (d.ts) file.  This does not exempt this API from the
            formal REST Api review process.  Our internal APIs must meet the same standards and
            guidelines as our public APIs.
            </summary>
            <param name="omitFromTypeScriptDeclareFile">Default is true.  Set to false if you need the item to appear in the TypeScript declare (d.ts) file for use by extensions.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ClientInternalUseOnlyAttribute.OmitFromTypeScriptDeclareFile">
            <summary>
            Set to false if you need the item to appear in the TypeScript declare (d.ts) file for use by extensions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ClientCircuitBreakerSettingsAttribute.Timeout">
            <summary>
            Timeout in seconds
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ClientCircuitBreakerSettingsAttribute.ErrorPercentage">
            <summary>
            Percentage of failed commands
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ClientCircuitBreakerSettingsAttribute.MaxConcurrentRequests">
            <summary>
            Number of max concurrent requests
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ClientCancellationTimeoutAttribute.Timeout">
            <summary>
            Timeout in seconds for request cancellation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ClientSensitiveHeaderAttribute">
            <summary>
            Indicates which headers are considered to contain sensitive information by a particular HttpClient.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReactiveClientToThrottlingAttribute.#ctor(System.Boolean)">
            <summary>
            Indicates this class will react response headers added by ResourceUtilizationService. Ex: X-RateLimit-Limit, X-RateLimit-Delay 
            Note: This attribute is only effective on classes that inherit VssHttpClientBase.
            </summary>
            <param name="reactToThrottlingHeaders">Default is true.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ReactiveClientToThrottlingAttribute.ReactToThrottlingHeaders">
            <summary>
            Set to false if you don't need to look into HTTP response headers.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ConnectOptions">
            <summary>
                Enumeration of the options that can be passed in on Connect.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.None">
            <summary>
            Retrieve no optional data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.IncludeServices">
            <summary>
            Includes information about AccessMappings and ServiceDefinitions.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.IncludeLastUserAccess">
            <summary>
            Includes the last user access for this host.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.IncludeInheritedDefinitionsOnly">
            <summary>
            This is only valid on the deployment host and when true. Will only return
            inherited definitions.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.IncludeNonInheritedDefinitionsOnly">
            <summary>
            When true will only return non inherited definitions.
            Only valid at non-deployment host.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ContentValidationExternalId">
            <summary>
            Representation of ExternalId we send to CVS and use for tracing and validation.
            NOTE: CVS limits the size of this field to 2048 characters.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ContentValidationIdentity">
            <summary>
            Representation of ReporteeName we send to CVS and use for callback actions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ContentValidationIdentity.DisplayName">
            <summary>
            Display name of the user. Could be missing if it would cause us to exceed 128 characters in
            serialized length. <see cref="P:Microsoft.VisualStudio.Services.WebApi.ContentValidationIdentity.SubjectDescriptor"/> will always be set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ContentValidationIdentity.SubjectDescriptor">
            <remarks>Hint: this can be converted back into a VSID by:
            https://api.vstsusers.visualstudio.com/{subjectDescriptor}/storagekey
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.DataImportTestMilestones.StretchServiceLevel">
            Used for Stretch Tests
              The xxxServiceLevel constants are the actual database service levels.
              The xxxMilestone constants are the name of the package in the artifact store.
              By convention, the milestone constants are named for the released milestone, not the stretch milestone.
              Therefore, the ServiceLevel is one patch past the milestone name.  No matter what, the ServiceLevel
              constant should match the ServiceLevel of the databases in the milestone artifact package.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.DataImportSemaphore.RegistryBase">
            <summary>
            Used as property names while locking cleanup for DataImport during Parallel Imports
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest">
            <summary>
            Encapsulates the request parameters for updating a personal access token (PAT)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest.AuthorizationId">
            <summary>
            The authorizationId identifying a single, unique personal access token (PAT)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest.DisplayName">
            <summary>
            (Optional) The token name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest.Scope">
            <summary>
            (Optional) The token scopes for accessing Azure DevOps resources
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest.ValidTo">
            <summary>
            (Optional) The token expiration date
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest.AllOrgs">
            <summary>
            (Optional) True if this personal access token (PAT) is for all of the user's accessible organizations. False if otherwise (e.g. if the token is for a specific organization)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PagedList`1">
            <summary>
            A list that contains a single page of results from a query.
            </summary>
            <typeparam name="T">The type of the items contained in the list.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PagedList`1.ContinuationToken">
            <summary>
            A string that can be passed to the same endpoint that returned this PagedList in order to retrieve the next page of results.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1">
            <summary>
            Represents the JSON Patch Add operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1.Apply(`0)">
            <summary>
            Applies the Add patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1">
            <summary>
            The interface for the Patch Document
            </summary>
            <typeparam name="TModel">The type this patch document applies to.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1.Operations">
            <summary>
            The patch operations.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1.Apply(`0)">
            <summary>
            Applies the operations to the target object.
            </summary>
            <param name="target">The object to apply the operations to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1">
            <summary>
            The interface for the Patch Operation.
            </summary>
            <typeparam name="TModel">The type this patch document applies to.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Operation">
            <summary>
            The operation to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Path">
            <summary>
            The JSON path to apply on the model for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.EvaluatedPath">
            <summary>
            The JSON path split into segments 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.From">
            <summary>
            The path to copy/move from, applies only to the Copy/Move operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Value">
            <summary>
            The value to set with this patch operation.  Only applies to
            Add/Replace/Test.
            </summary>
            <returns>The strongly (best effort) typed representation of the value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Apply(`0)">
            <summary>
            Applies the operation to the target object.
            </summary>
            <param name="target">The object to have the operation applied to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplied">
            <summary>
            Event for when a patch operation has been applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventHandler">
            <summary>
            Event handler for patch operation applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplying">
            <summary>
            Event for when a patch operation is about to be applied
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventHandler">
            <summary>
            Event handler for patch operation applying.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument">
            <summary>
            The JSON model for JSON Patch Operations
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation">
            <summary>
            The JSON model for a JSON Patch operation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Operation">
            <summary>
            The patch operation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Path">
            <summary>
            The path for the operation.
            In the case of an array, a zero based index can be used to specify the position in the array (e.g. /biscuits/0/name). The "-" character can be used instead of an index to insert at the end of the array (e.g. /biscuits/-).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.From">
            <summary>
            The path to copy from for the Move/Copy operation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Value">
            <summary>
            The value for the operation.  
            This is either a primitive or a JToken.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchDocument`1.PatchOperationApplying">
            <summary>
            Event fired before applying a patch operation.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchDocument`1.PatchOperationApplied">
            <summary>
            Event fired after a patch operation has been applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1">
            <summary>
            PatchOperation represents a single JSON Patch operation.
            </summary>
            <typeparam name="TModel">The model to validate and apply the patch operation against.</typeparam>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.EndOfIndex">
            <summary>
            The JSON Patch representation of insertion at the end of a list.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PathSeparator">
            <summary>
            The JSON Patch path separator.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.serializer">
            <summary>
            The serializer that handles the object dictionary case.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.evaluatedPath">
            <summary>
            The path split into a string IEnumerable.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.#cctor">
            <summary>
            Static constructor to create the serializer once with the 
            ObjectDictionaryConverter which converts JObject to dictionary
            when the underlying type of the target is an object.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PatchOperationApplying">
            <summary>
            Event fired before applying a patch operation.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PatchOperationApplied">
            <summary>
            Event fired after a patch operation has been applied.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Operation">
            <summary>
            The operation to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Path">
            <summary>
            The JSON path to apply on the model for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.EvaluatedPath">
            <summary>
            The path to apply that has been converted to an IEnumerable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.From">
            <summary>
            The path to copy/move from, applies only to the Copy/Move operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Value">
            <summary>
            The value to set with this patch operation.  Only applies to
            Add/Replace/Test.
            </summary>
            <returns>The strongly (best effort) typed representation of the value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Apply(`0)">
            <summary>
            Applies the operation to the target object.
            </summary>
            <param name="target">The object to have the operation applied to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation from the json patch operation provided.
            </summary>
            <param name="operation">The json patch operation.</param>
            <returns>The strongly typed patch operation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidatePath(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the path for the operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateType(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the type for the operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateAndGetType(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates and returns the type for the operation.
            </summary>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateAndGetValue(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the path evaluates to a property on the model, and
            returns the strongly typed value for the model.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.GetType(System.Type,System.String)">
            <summary>
            Gets The type of the field the path maps to.
            </summary>
            <param name="type">The type of the parent object.</param>
            <param name="path">The path to evaluate.</param>
            <returns>The type of the field that path maps to.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.GetType(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets The type of the field the path maps to.
            </summary>
            <param name="type">The type of the parent object.</param>
            <param name="path">The path enumeration to evaluate.</param>
            <returns>The type of the field that path maps to.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.DeserializeValue(System.Type,System.Object)">
            <summary>
            Deserializes the json value.  
            </summary>
            <param name="type"></param>
            <param name="jsonValue">The json formatted value.</param>
            <returns>The strongly typed (best effort) value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.SplitPath(System.String)">
            <summary>
            Converts the string path into the evaluatable path.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Apply(System.Object,System.Action{System.Type,System.Object,System.String})">
            <summary>
            Evaluates the path on the target and applies an action to the result.
            </summary>
            <param name="target">The target object to apply the operation to.</param>
            <param name="actionToApply">The action to apply to the result of the evaluation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Apply(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Action{System.Type,System.Object,System.String})">
            <summary>
            Evaluates the path on the target and applies an action to the result.
            </summary>
            <param name="target">The target object to apply the operation to.</param>
            <param name="path">The path to evaluate.</param>
            <param name="actionToApply">The action to apply to the result of the evaluation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs">
            <summary>
            Event args for the applied patch operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs.Path">
            <summary>
            The current path.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs.Operation">
            <summary>
            The operation being applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs">
            <summary>
            Event args for the applying patch operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs.Path">
            <summary>
            The current path.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs.Operation">
            <summary>
            The operation about to be applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1">
            <summary>
            Represents the JSON Patch Remove operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1.Apply(`0)">
            <summary>
            Applies the Remove patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1">
            <summary>
            Represents the JSON Patch Replace operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1.Apply(`0)">
            <summary>
            Applies the Replace patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1">
            <summary>
            Represents the JSON Patch Test operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1.Apply(`0)">
            <summary>
            Applies the Test patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection">
            <summary>
            The class represents a property bag as a collection of key-value pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
            except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType and String preserve their type,
            other primitives are retuned as a String. Byte[] expected as base64 encoded string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Count">
            <summary>
            The count of properties in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Item(System.String)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.Item
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Keys">
            <summary>
            The set of keys in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Values">
            <summary>
            The set of values in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Add(System.String,System.Object)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.Add
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Clear">
            <summary>
            Implements ICollection&lt;KeyValuePair&lt;String, Object&gt;&gt;.Clear()
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.ContainsKey(System.String)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.ContainsKey()
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.ContainsValue(System.Object)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.ContainsValue()
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Remove(System.String)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.Remove()
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.TryGetValue(System.String,System.Object@)">
            <summary>
            Implements IDictionary&lt;String, Object&gt;.TryGetValue()
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PublicKey">
            <summary>
            Represents the public key portion of an RSA asymmetric key.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PublicKey.#ctor">
            <summary>
            Initializes a new <c>PublicKey</c> instance with empty exponent and modulus values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PublicKey.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new <c>TaskAgentPublicKey</c> instance with the specified exponent and modulus values.
            </summary>
            <param name="exponent">The exponent value of the key</param>
            <param name="modulus">The modulus value of the key</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PublicKey.Exponent">
            <summary>
            Gets or sets the exponent for the public key.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.PublicKey.Modulus">
            <summary>
            Gets or sets the modulus for the public key.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLink">
            <summary>
            The class to represent a REST reference link.
            
            RFC: http://tools.ietf.org/html/draft-kelly-json-hal-06
            
            The RFC is not fully implemented, additional properties are allowed on the
            reference link but as of yet we don't have a need for them.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks">
            <summary>
            The class to represent a collection of REST reference links.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.referenceLinks">
            <summary>
            The internal representation of the reference links.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.AddLink(System.String,System.String,Microsoft.VisualStudio.Services.WebApi.ISecuredObject)">
            <summary>
            Helper method to easily add a reference link to the dictionary.
            If the specified name has already been added, the subsequent calls
            to AddLink will create a list of reference links for the name.
            </summary>
            <param name="name">The name of the reference link.</param>
            <param name="href">The href the reference link refers to.</param>
            <param name="securedObject">The implementation for securedObject.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.AddLink(System.String,System.String)">
            <summary>
            Helper method to easily add a reference link to the dictionary.
            If the specified name has already been added, the subsequent calls
            to AddLink will create a list of reference links for the name.
            </summary>
            <param name="name">The name of the reference link.</param>
            <param name="href">The href the reference link refers to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.AddLinkIfIsNotEmpty(System.String,System.String)">
            <summary>
            Helper method to easily add a reference link to the dictionary if href is not null or empty value.
            If the specified name has already been added, the subsequent calls to AddLink will create a list of reference links for the name.
            </summary>
            <param name="name">The name of the reference link.</param>
            <param name="href">The href the reference link refers to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.Clone">
            <summary>
            Creates a deep copy of the ReferenceLinks.
            </summary>
            <returns>A deep copy of the ReferenceLinks</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.CopyTo(Microsoft.VisualStudio.Services.WebApi.ReferenceLinks)">
            <summary>
            Copies the ReferenceLinks to another ReferenceLinks.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.CopyTo(Microsoft.VisualStudio.Services.WebApi.ReferenceLinks,Microsoft.VisualStudio.Services.WebApi.ISecuredObject)">
            <summary>
            Copies the ReferenceLinks to another ReferenceLinks and secures using the specified object.
            </summary>
            <param name="target"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.Links">
            <summary>
            The readonly view of the links.  Because Reference links are readonly,
            we only want to expose them as read only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.ReferenceLinksConverter">
            <summary>
            The json converter to represent the reference links as a dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.ReferenceLinksConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Because ReferenceLinks is a dictionary of either a single 
            ReferenceLink or an array of ReferenceLinks, we need custom
            deserialization to correctly rebuild the dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SignedUrl">
            <summary>
            A signed url allowing limited-time anonymous access to private resources.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.SignedUrl.Url">
            <summary>
            The URL to allow access to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.SignedUrl.SignatureExpires">
            <summary>
            Timestamp when access expires.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.TraceFilter">
            <summary>
            This class describes a trace filter, i.e. a set of criteria on whether or not a trace event should be emitted
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.TraceFilter.Owner">
            <summary>
            Used to serialize additional identity information (display name, etc) to clients.
            Not set by default. Server-side callers should use <see cref="P:Microsoft.VisualStudio.Services.WebApi.TraceFilter.OwnerId"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Exceptions.TooManyRequestsException">
            <summary>
            Throw when there is any throttling happening
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Exceptions.AadThrottlingException">
            <summary>
            Throw when there is any throttling happening in the AAD Layer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Exceptions.ClientRequestThrottledException">
            <summary>
            Throw when there is any throttling happening in the VssClient Layer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.InvalidSourceExtendedPropertyValueException">
            <summary>
            An extended property in the dacpac or database is not allowed
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MissingSourceExtendedPropertyException">
            <summary>
            A required extended property was not found in the dacpac or database
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SqlPackageVersionNotSupportedException">
            <summary>
            The version of SQLPackage.exe used to create the dacpac is not supported
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MaxDacpacSizeExceededException">
            <summary>
            The size of customer dacpac exceeded threshold
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SourceIsNotADetachedDatabaseException">
            <summary>
            The Source is not a detached tfs database
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SourceIsTFSConfigurationDatabaseException">
            <summary>
            The Source is a configuration tfs database
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SourceIsMissingSnapshotTablesException">
            <summary>
            The Source does not have the snapshot tables
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.SourceContainsExportedDataException">
            <summary>
            The Source dacpac contains exported data, this is a BACPAC
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MilestoneNotSupportedException">
            <summary>
            The Source contains an unsupported milestone
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.UnableToExtractDacpacInformationException">
            <summary>
            The dacpac is not a detached tfs database
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PackageLocationNotSupportedException">
            <summary>
            The provided package location is not supported
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.EmptyImportSourceException">
            <summary>
            DacPac or database is empty (schema only)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.InvalidImportSourceConnectionStringException">
            <summary>
            thrown when the connection string for source Database appears invalid
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ImportSourceConnectionTimeoutException">
            <summary>
            thrown when timing out attempting to connect with the source Database
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ImportSourceDacPacTimeoutException">
            <summary>
            thrown when timing out DacPac operation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.WITNonRecoverableImportException">
            <summary>
            WIT Step Failed with non recoverable exception
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.DataImportClientVersionNotSupportedException">
            <summary>
            The version of the client is not supported
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.InvalidSASKeyExpirationException">
            <summary>
            thrown when the expiration date is set to an invalid value
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.DataImportUserErrorException">
            <summary>
            thrown when the servicing job encounter a failure identifiable as an error in the user's part
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PropertyCacheServiceNotAvailableException">
            <summary>
            Thrown when cache service is not available
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ServiceOperationNotAvailableException">
            <summary>
            Thrown when service operation is not available
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.MarkAsFatalServicingOrchestrationException(System.Exception)">
            <summary>
            Marks exception as fatal preventing ServicingOrchestration job to retry when this exception is thrown
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.AsFatalServicingOrchestrationException``1(``0)">
            <summary>
            Marks exception as fatal preventing ServicingOrchestration job to retry when this exception is thrown
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.IsFatalServicingOrchestrationException(System.Exception)">
            <summary>
            Checks whether exception is marked as fatal Orchestration exception
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.MarkAsBlockedServicingOrchestrationException(System.Exception)">
            <summary>
            Marks exception as Blocking Servicing, these exceptions should result in an unlimited number of retries, enforcing a timeout the responsibility of the marking the exception.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.AsBlockedServicingOrchestrationException``1(``0)">
            <summary>
            Marks exception as Blocking Servicing, these exceptions should result in an unlimited number of retries, enforcing a timeout the responsibility of the marking the exception.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.IsBlockedServicingOrchestrationException(System.Exception)">
            <summary>
            Checks whether exception is marked as a Blocking Servicing Orchestration exception
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.MarkAsUserErrorServicingOrchestrationException(System.Exception,System.String)">
            <summary>
            Marks exception as user error preventing ServicingOrchestration job to retry when this exception is thrown
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.AsUserErrorServicingOrchestrationException``1(``0,System.String)">
            <summary>
            Marks exception as user error preventing ServicingOrchestration job to retry when this exception is thrown
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.IsUserErrorServicingOrchestrationException(System.Exception)">
            <summary>
            Checks whether exception is marked as user error Orchestration exception
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.GetUserErrorServicingOrchestrationExceptionMessage(System.Exception)">
            <summary>
            Gets the user error exception null when the exception is not a user error exception
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions.CheckServicingOrchestrationExceptionForError(System.Exception,System.String)">
            <summary>
            Recursively try to find a specific error in the exception message
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssResourceNotFoundException">
            <summary>
            Exception thrown when the requested API resource location was not found on the server
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssResourceVersionException">
            <summary>
            Base exception class for api resource version exceptions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssVersionNotSupportedException">
            <summary>
            Exception thrown when the requested version of a resource is not supported on the server
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssVersionOutOfRangeException">
            <summary>
            Exception thrown when the requested version of a resource is greater than the latest api version the server supports.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssVersionNotSpecifiedException">
            <summary>
            Exception thrown when the api-version is not supplied for a particular type of request
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssInvalidPreviewVersionException">
            <summary>
            Exception thrown when the requested version of a resource is a "preview" api, but -preview is not supplied in the request's api-version
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssRequestContentTypeNotSupportedException">
            <summary>
            Exception thrown when a request body's contentType is not supported by a given controller.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssApiUnsafeCrossOriginRequestException">
            <summary>
            Exception thrown when a cross-origin request is made using cookie-based authentication from an unsafe domain.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.PatchAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent)">
            <summary>
            Performs a PATCH request to uri passing in the content.
            </summary>
            <param name="client">HttpClient being extended</param>
            <param name="uri">The target uri for the PATCH call</param>
            <param name="content">The message content</param>
            <returns>A Task which executes the PATCH call with a HttpResponseMessage result</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.PatchAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Performs a PATCH request to uri passing in the content.
            </summary>
            <param name="client">HttpClient being extended</param>
            <param name="uri">The target uri for the PATCH call</param>
            <param name="content">The message content</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns>A Task which executes the PATCH call with a HttpResponseMessage result</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Performs a DELETE request to uri passing in the content.
            </summary>
            <param name="client"></param>
            <param name="uri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DownloadFileFromTfsAsync(System.Net.Http.HttpClient,System.Uri,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Downloads the content of a file and copies it to the specified stream if the request succeeds.
            </summary>
            <param name="client">Http client.</param>
            <param name="stream">Stream to write file content to.</param>
            <param name="requestUri">Download uri.</param>
            <returns>Http response message.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DownloadStream">
            <summary>
            Wraps the download stream to provide hash calculation and content decompression.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpRetryHelper.#ctor(System.Int32,System.Func{System.Exception,System.Boolean})">
            <param name="maxAttempts">The total number of attempts to invoke the submitted action with. A value of 1 indicates that no retries will be attempted. Note that this was renamed from "maxRetries" to match the behavior of the parameter (i.e. maxRetries was previously behaving like maxAttempts).</param>
            <param name="canRetryDelegate">Evaluation function which returns true for a given exception if that exception is permitted to be retried.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpRetryHelper.Invoke(System.Action,System.Int32@)">
             <summary>
            
             </summary>
             <param name="action"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.UniqueName">
            <summary>
            Deprecated - use Domain+PrincipalName instead
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.DirectoryAlias">
            <summary>
            Deprecated - Can be retrieved by querying the Graph user referenced in the "self" entry of the IdentityRef "_links" dictionary
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.ProfileUrl">
            <summary>
            Deprecated - not in use in most preexisting implementations of ToIdentityRef
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.ImageUrl">
            <summary>
            Deprecated - Available in the "avatar" entry of the IdentityRef "_links" dictionary
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.IsContainer">
            <summary>
            Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.IsAadIdentity">
            <summary>
            Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.Inactive">
            <summary>
            Deprecated - Can be retrieved by querying the Graph membership state referenced in the "membershipState" entry of the GraphUser "_links" dictionary
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.DisplayNameForXmlSerialization">
            <summary>
            This property is for xml compat only.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.IdentityRef.UrlForXmlSerialization">
            <summary>
            This property is for xml compat only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService">
            <summary>
            The service responsible for providing a connection to a Team 
            Foundation Server as well as the locations of other services that
            are available on it.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService.GetLocationData(System.Guid)">
            <summary>
            Gets the provider of location data specified by the given location area guid.
            The provider could be local or remote depending on where the area data is hosted
            in the location hierarchy in relation to this service instance. Returns null if
            the area could not be found
            </summary>
            <param name="locationAreaIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService.GetLocationServiceUrl(System.Guid)">
            <summary>
            Gets the URL of the location service for the given location area guid and access mapping moniker.
            If the area could not be found this method will return null. This is useful for getting the
            base URL of service hosts, or of other service instances or resource areas.
            
            To find a specific service definition contained in the given location area and to formulate
            the proper URL for a specific resource in that location area, you would need to
            retrieve the location data for that area. This operation is simplified by calling GetLocationData
            </summary>
            <param name="locationAreaIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService.GetLocationServiceUrl(System.Guid,System.String)">
            <summary>
            Gets the URL of the location service for the given location area guid and access mapping moniker.
            If the area could not be found this method will return null. This is useful for getting the
            base URL of service hosts, or of other service instances or resource areas.
            
            To find a specific service definition contained in the given location area and to formulate
            the proper URL for a specific resource in that location area, you would need to
            retrieve the location data for that area. This operation is simplified by calling GetLocationData
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="accessMappingMoniker"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService.GetLocationDataAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the provider of location data specified by the given location area guid.
            The provider could be local or remote depending on where the area data is hosted
            in the location hierarchy in relation to this service instance. Returns null if
            the area could not be found
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationService.GetLocationServiceUrlAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the URL of the location service for the given location area guid and access mapping moniker.
            If the area could not be found this method will return null. This is useful for getting the
            base URL of service hosts, or of other service instances or resource areas.
            
            To find a specific service definition contained in the given location area and to formulate
            the proper URL for a specific resource in that location area, you would need to
            retrieve the location data for that area. This operation is simplified by calling GetLocationData
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="accessMappingMoniker"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider">
            <summary>
            The service responsible for providing a connection to a Team 
            Foundation Server as well as the locations of other services that
            are available on it.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.InstanceId">
            <summary>
            The unique identifier for this server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.InstanceType">
            <summary>
            The identifier of the type of server instance.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.ClientAccessMapping">
            <summary>
            The AccessMapping for the current connection to the server. Note, it is 
            possible that the current ClientAccessMapping is not a member of the 
            ConfiguredAccessMappings if the access point this client used to connect to 
            the server has not been configured on it. This will never be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.DefaultAccessMapping">
            <summary>
            The default AccessMapping for this location service. This will never be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.ConfiguredAccessMappings">
            <summary>
            All of the AccessMappings that this location service knows about. Because a 
            given location service can inherit AccessMappings from its parent these 
            AccessMappings may exist on this location service or its parent.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.FindServiceDefinition(System.String,System.Guid)">
            <summary>
            Finds the ServiceDefinition with the specified service type and service 
            identifier. If no matching ServiceDefinition exists, null is returned.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition 
                to find.
            </param>
            <returns>
                The ServiceDefinition with the specified service type and service identifier.
                If no matching ServiceDefinition exists, null is returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.FindServiceDefinitions(System.String)">
            <summary>
            Finds the ServiceDefinitions for all of the services with the 
            specified service type. If no ServiceDefinitions of this type 
            exist, an empty enumeration will be returned.
            </summary>
            <param name="serviceType">
                The case-insensitive string that identifies what type of service is being 
                requested. If this value is null, ServiceDefinitions for all services 
                registered with this location service will be returned.
            </param>
            <returns>
                ServiceDefinitions for all of the services with the specified service type.
                If no ServiceDefinitions of this type exist, an empty enumeration will be 
                returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForCurrentConnection(System.String,System.Guid)">
            <summary>
            Returns the location for the ServiceDefintion associated with the ServiceType
            and ServiceIdentifier that should be used based on the current connection. 
            If a ServiceDefinition with the ServiceType and ServiceIdentifier does not
            exist then null will be returned. If a ServiceDefinition with the ServiceType
            and ServiceIdentifier is found then a location will be returned if the 
            ServiceDefinition is well formed (otherwise an exception will be thrown).
            
            When determining what location to return for the ServiceDefinition and 
            current connection the following rules will be applied:
            
            1. Try to find a location for the ClientAccessMapping.
            2. Try to find a location for the DefaultAccessMapping.
            3. Use the first location in the LocationMappings list.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find the location for.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition to find the location for.
            </param>
            <returns>
                The location for the ServiceDefinition with the provided service type and 
                identifier that should be used based on the current connection.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForCurrentConnection(Microsoft.VisualStudio.Services.Location.ServiceDefinition)">
            <summary>
            Returns the location for the ServiceDefintion that should be used based on
            the current connection. This method will never return null or empty. If it
            succeeds it will return a targetable location for the provided 
            ServiceDefinition.
            
            When determining what location to return for the ServiceDefinition and 
            current connection the following rules will be applied:
            
            1. Try to find a location for the ClientAccessMapping.
            2. Try to find a location for the DefaultAccessMapping.
            3. Use the first location in the LocationMappings list.
            </summary>
            <param name="serviceDefinition">
                The ServiceDefinition to find the location for.
            </param>
            <returns>
                The location for the given ServiceDefinition that should be 
                used based on the current connection.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForAccessMapping(System.String,System.Guid,Microsoft.VisualStudio.Services.Location.AccessMapping)">
            <summary>
            Returns the location for the ServiceDefinition that has the specified
            service type and service identifier for the provided 
            AccessMapping. If this ServiceDefinition is FullyQualified and no 
            LocationMapping exists for this AccessMapping then null will be returned.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find the location for.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition to find the location for.
            </param>
            <param name="accessMapping">The AccessMapping to find the location for.</param>
            <returns>
                The location for the ServiceDefinition for the provided 
                AccessMapping. If this ServiceDefinition is FullyQualified and no 
                LocationMapping exists for this AccessMapping then null will be returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForAccessMapping(Microsoft.VisualStudio.Services.Location.ServiceDefinition,Microsoft.VisualStudio.Services.Location.AccessMapping)">
            <summary>
            Returns the location for the ServiceDefinition for the provided 
            AccessMapping. If this ServiceDefinition is FullyQualified and no 
            LocationMapping exists for this AccessMapping then null will be returned.
            </summary>
            <param name="serviceDefinition">
                The ServiceDefinition to find the location for.
            </param>
            <param name="accessMapping">The AccessMapping to find the location for.</param>
            <returns>
                The location for the ServiceDefinition for the provided 
                AccessMapping. If this ServiceDefinition is FullyQualified and no 
                LocationMapping exists for this AccessMapping then null will be returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetAccessMapping(System.String)">
            <summary>
            Gets the AccessMapping with the specified moniker. Returns null
            if an AccessMapping with the supplied moniker does not exist.
            </summary>
            <param name="moniker">
                The moniker for the desired AccessMapping. This value cannot be null or 
                empty.
            </param>
            <returns>
                The AccessMapping with the supplied moniker or null if one does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetResourceLocations">
            <summary>
            Get the API resource locations -- a collection of versioned URL paths that
            are keyed by a location identitifer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetInstanceIdAsync(System.Threading.CancellationToken)">
            <summary>
            The unique identifier for this server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetInstanceTypeAsync(System.Threading.CancellationToken)">
            <summary>
            The identifier of the type of server instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetClientAccessMappingAsync(System.Threading.CancellationToken)">
            <summary>
            The AccessMapping for the current connection to the server. Note, it is 
            possible that the current ClientAccessMapping is not a member of the 
            ConfiguredAccessMappings if the access point this client used to connect to 
            the server has not been configured on it. This will never be null.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetDefaultAccessMappingAsync(System.Threading.CancellationToken)">
            <summary>
            The default AccessMapping for this location service. This will never be null.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetConfiguredAccessMappingsAsync(System.Threading.CancellationToken)">
            <summary>
            All of the AccessMappings that this location service knows about. Because a 
            given location service can inherit AccessMappings from its parent these 
            AccessMappings may exist on this location service or its parent.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.FindServiceDefinitionAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Finds the ServiceDefinition with the specified service type and service 
            identifier. If no matching ServiceDefinition exists, null is returned.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition 
                to find.
            </param>
            <returns>
                The ServiceDefinition with the specified service type and service identifier.
                If no matching ServiceDefinition exists, null is returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.FindServiceDefinitionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Finds the ServiceDefinitions for all of the services with the 
            specified service type. If no ServiceDefinitions of this type 
            exist, an empty enumeration will be returned.
            </summary>
            <param name="serviceType">
                The case-insensitive string that identifies what type of service is being 
                requested. If this value is null, ServiceDefinitions for all services 
                registered with this location service will be returned.
            </param>
            <returns>
                ServiceDefinitions for all of the services with the specified service type.
                If no ServiceDefinitions of this type exist, an empty enumeration will be 
                returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForCurrentConnectionAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Returns the location for the ServiceDefintion associated with the ServiceType
            and ServiceIdentifier that should be used based on the current connection. 
            If a ServiceDefinition with the ServiceType and ServiceIdentifier does not
            exist then null will be returned. If a ServiceDefinition with the ServiceType
            and ServiceIdentifier is found then a location will be returned if the 
            ServiceDefinition is well formed (otherwise an exception will be thrown).
            
            When determining what location to return for the ServiceDefinition and 
            current connection the following rules will be applied:
            
            1. Try to find a location for the ClientAccessMapping.
            2. Try to find a location for the DefaultAccessMapping.
            3. Use the first location in the LocationMappings list.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find the location for.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition to find the location for.
            </param>
            <returns>
                The location for the ServiceDefinition with the provided service type and 
                identifier that should be used based on the current connection.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForCurrentConnectionAsync(Microsoft.VisualStudio.Services.Location.ServiceDefinition,System.Threading.CancellationToken)">
            <summary>
            Returns the location for the ServiceDefintion that should be used based on
            the current connection. This method will never return null or empty. If it
            succeeds it will return a targetable location for the provided 
            ServiceDefinition.
            
            When determining what location to return for the ServiceDefinition and 
            current connection the following rules will be applied:
            
            1. Try to find a location for the ClientAccessMapping.
            2. Try to find a location for the DefaultAccessMapping.
            3. Use the first location in the LocationMappings list.
            </summary>
            <param name="serviceDefinition">
                The ServiceDefinition to find the location for.
            </param>
            <returns>
                The location for the given ServiceDefinition that should be 
                used based on the current connection.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForAccessMappingAsync(System.String,System.Guid,Microsoft.VisualStudio.Services.Location.AccessMapping,System.Threading.CancellationToken)">
            <summary>
            Returns the location for the ServiceDefinition that has the specified
            service type and service identifier for the provided 
            AccessMapping. If this ServiceDefinition is FullyQualified and no 
            LocationMapping exists for this AccessMapping then null will be returned.
            </summary>
            <param name="serviceType">
                The service type of the ServiceDefinition to find the location for.
            </param>
            <param name="serviceIdentifier">
                The service identifier of the ServiceDefinition to find the location for.
            </param>
            <param name="accessMapping">The AccessMapping to find the location for.</param>
            <returns>
                The location for the ServiceDefinition for the provided 
                AccessMapping. If this ServiceDefinition is FullyQualified and no 
                LocationMapping exists for this AccessMapping then null will be returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.LocationForAccessMappingAsync(Microsoft.VisualStudio.Services.Location.ServiceDefinition,Microsoft.VisualStudio.Services.Location.AccessMapping,System.Threading.CancellationToken)">
            <summary>
            Returns the location for the ServiceDefinition for the provided 
            AccessMapping. If this ServiceDefinition is FullyQualified and no 
            LocationMapping exists for this AccessMapping then null will be returned.
            </summary>
            <param name="serviceDefinition">
                The ServiceDefinition to find the location for.
            </param>
            <param name="accessMapping">The AccessMapping to find the location for.</param>
            <returns>
                The location for the ServiceDefinition for the provided 
                AccessMapping. If this ServiceDefinition is FullyQualified and no 
                LocationMapping exists for this AccessMapping then null will be returned.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetAccessMappingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the AccessMapping with the specified moniker. Returns null
            if an AccessMapping with the supplied moniker does not exist.
            </summary>
            <param name="moniker">
                The moniker for the desired AccessMapping. This value cannot be null or 
                empty.
            </param>
            <returns>
                The AccessMapping with the supplied moniker or null if one does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider.GetResourceLocationsAsync(System.Threading.CancellationToken)">
            <summary>
            Get the API resource locations -- a collection of versioned URL paths that
            are keyed by a location identitifer
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager">
            <summary>
            This class is responsible for managing both the in-memory and disk cache
            for the location service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.#ctor(System.Guid,System.Guid,System.Uri)">
            <summary>
            Creates a new cache manager for the serverGuid passed in.
            </summary>
            <param name="serverGuid"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.LocalCacheAvailable">
            <summary>
            True if there is a cache on disk available for this server
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.CacheDataExpired">
            <summary>
            Whether or not the cached data has expired (and should be refreshed)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.RemoveServices(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Location.ServiceDefinition},System.Int32)">
            <summary>
            Removes services from both the in-memory cache and the disk cache.
            </summary>
            <param name="serviceDefinitions">The service definitions to remove.</param>
            <param name="lastChangeId">The lastChangeId the server returned when
            it performed this operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.GetAccessMapping(System.String)">
            <summary>
            Returns the access mapping for the provided moniker.
            </summary>
            <param name="moniker">The moniker of the access mapping to 
            return.</param>
            <returns>The access mapping for the provided moniker or null
            if an access mapping for the moniker doesn't exist..</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.TryFindService(System.String,System.Guid,Microsoft.VisualStudio.Services.Location.ServiceDefinition@)">
            <summary>
            Returns the service definition for the service with the 
            provided service type and identifier.  Null will be returned
            if there is no entry in the cache for this service.
            </summary>
            <param name="serviceType">The service type we are looking for.</param>
            <param name="serviceIdentifier">The identifier for the specific
            service instance we are looking for.</param>
            <returns>The service definition for the service with the 
            provided service type and identifier.  Null will be returned
            if there is no entry in the cache for this service.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.FindServices(System.String)">
            <summary>
            Finds all services with the provided service type.
            </summary>
            <param name="serviceType">The service type we are looking for.</param>
            <returns>All of the service definitions with the serviceType that
            are in the cache or null if none are in the cache.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.LoadServicesData(Microsoft.VisualStudio.Services.Location.LocationServiceData,System.Boolean)">
            <summary>
            Loads the service data into the in-memory cache and writes the values to disk.
            </summary>
            <param name="locationServiceData">The data to write to the cache.</param>
            <returns>Copies of the service definitions created by this load</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.AccessMappings">
            <summary>
            Returns the AccessMappings that this location service cache knows about.
            Note that each time this property is accessed, the list is copied and
            returned.  
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.RemoveAccessMapping(System.String)">
            <summary>
            Removes the access mapping with the provided access mapping moniker
            and all of the location mapping entries that have this access
            zone.
            </summary>
            <param name="moniker">The moniker of the access mapping to remove.
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.AddCachedMiss(System.String,System.Guid,System.Int32)">
            <summary>
            Adds a cached miss to the location service data, if the last change ID presented
            matches the current value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.GetLastChangeId">
            <summary>
            Returns the id of the last change that this cache is aware of.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.GetCacheExpirationDate">
            <summary>
            Returns the time of the cache expiration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.EnsureDiskCacheLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_fileSystemWatcher_Changed(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.WriteCacheToDisk">
            <summary>
            Writes the cache to disk.  Callers of this function should have a writer
            lock.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.ClientCacheTimeToLive">
            <summary>
            This setting controls the amount of time before the cache expires
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_services">
            <summary>
            This is the set of services available from this service location
            service.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_cachedMisses">
            <summary>
            This is the set of services that have been queried since our last update
            from the server that we know don't exist.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_accessMappings">
            <summary>
            Keeps track of all access mappings that have been given to us by the server.
            The key is their identifier.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_lastChangeId">
            <summary>
            Keeps track of the lastChangeId for the last change that was put in this cache.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_cacheExpirationDate">
            <summary>
            The time after which the local cache data is invalid. This is used to prematurely expire the client cache
            even if we don't know (yet) whether or not the server changed. By expiring the client cache we
            can ensure that clients will be forced to check for server updates periodically rather than relying on the
            client cache indefinitely in the degenerate case where no client tools ever explicitly call Connect() (such as tf.exe)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_accessLock">
            <summary>
            This is used to protect the services in-memory store.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.s_cacheMutex">
            <summary>
            Only let one process write to a cache at a time.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_cacheLocallyFresh">
            <summary>
            This object is used to keep track of whether or not our cache is fresh
            with respect to what we have on disk.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_cacheAvailable">
            <summary>
            This is true if we do not have access to the cache file
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_fileSystemWatcher">
            <summary>
            This is used to watch for others changing our cache so we can respond to 
            those changes
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.m_clientAccessMapping">
            <summary>
            The two calculated access mappings that this manager caches.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.s_cacheFileName">
            <summary>
            persistent cache file name values
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager.s_docStartElement">
            <summary>
            xml document related constants
            </summary>           
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData.#ctor(System.Guid,System.Guid)">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="serviceOwner"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData.ServerId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData.ServiceOwner">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.ReadServerLocation(System.Guid,System.Guid)">
            <summary>
            Finds the location for the specified guid.  If it is not found, null
            is returned.
            </summary>
            <param name="serverId">The server instance id associated with the
            desired location service url.</param>
            <returns>The location of the location service for this server or null
            if the guid is not found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.ReadServerData(System.String)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <returns>The guid for this location or Guid.Empty if the location
            does not have an entry.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.EnsureServerMappingExists(System.String,System.Guid,System.Guid)">
            <summary>
            If this call is not a change, nothing will be done.
            </summary>
            <param name="location"></param>
            <param name="serverId"></param>
            <param name="serviceOwner"></param>
            <returns>True if this is the first time the mapping was written.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.TryWriteMappingToDisk(System.String,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Writes the mapping to disk if the cache is available.
            </summary>
            <param name="location"></param>
            <param name="serverGuid"></param>
            <param name="isNew"></param>
            <returns>True if the write succeeded</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.s_cacheFreshLocally">
            <summary>
            This is used to keep track of whether or not our in-memory cache is fresh with regards
            to our persistent cache on disk.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache.s_cacheUnavailable">
            <summary>
            This is true if we do not have access to the cache file
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.LocationService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.Initialize(Microsoft.VisualStudio.Services.WebApi.VssConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationData(System.Guid)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationDataAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.ResolveLocationDataAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="currentProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationServiceUrl(System.Guid)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationServiceUrl(System.Guid,System.String)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="accessMappingMoniker"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationServiceUrlAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="locationAreaIdentifier"></param>
            <param name="accessMappingMoniker"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.CreateDataProviderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="location"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.LocationService.LocalDataProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.#ctor(System.Boolean)">
            <summary>
            This is to be used for reading in an xml file that contains service definitions that
            have to be loaded during install
            </summary>
            <param name="isClientCache">True if the parser is parsing xml from a client cache</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.ReadServices(System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.Location.AccessMapping})">
            <summary>
            Reads the service definitions from the provided document. 
            For a specification of what the xml should look like, see the 
            corresponding Write method.
            </summary>
            <param name="document">The document to read from.</param>
            <returns>A list of service definitions.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.ReadAccessMappings(System.Xml.XmlDocument)">
            <summary>
            Reads the access mappings from the provided document. 
            For a specification of what the xml should look like, see the 
            corresponding Write method.
            </summary>
            <param name="document">The document to read from.</param>
            <returns>A list of access mappings.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.ReadLastChangeId(System.Xml.XmlDocument)">
            <summary>
            Reads the last change id from the provided document. 
            For a specification of what the xml should look like, see the 
            corresponding Write method.
            </summary>
            <param name="document">The document to read from.</param>
            <returns>The last change id.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.WriteLastChangeId(System.Xml.XmlNode,System.Int32)">
            <summary>
            Writes the lastChangeId to the provided document in the form
            <LastChangeId>value</LastChangeId>
            </summary>
            <param name="documentNode">The document to write to.</param>
            <param name="lastChangeId">The value to write.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.WriteAccessMappings(System.Xml.XmlNode,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Location.AccessMapping})">
            <summary>
            Writes the access mapping information to the provided document in the form:
            <AccessMappings>
                <AccessMapping>
                    <Moniker>value</Moniker>
                    <Enabled>value</Enabled>
                    <DisplayName>value</DisplayName>
                    <VirtualDirectory>value</VirtualDirectory>
                </AccessMapping>
            </AccessMappings>        
            </summary>
            <param name="documentNode">The document to write to.</param>
            <param name="accessMappings">The values to write.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.WriteServices(System.Xml.XmlNode,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Location.ServiceDefinition})">
            <summary>
            Writes service definition information to the provided document in the form:
            <Services>
                <ServiceDefinition>
                    <ServiceType>value</ServiceType>
                    <Identifier>value</Identifier>
                    <DisplayName>value</DisplayName>
                    <DefaultAccessMapping>value</DefaultAccessMapping>
                    <RelativePath relativeTo="value">value</RelativePath>
                    <LocationMappings>
                        <LocationMapping>
                            <AccessMapping>value</AccessMapping>
                            <Location>value</Location>
                        </LocationMapping>
                        .
                        .
                        .
                    </LocationMappings>
                </ServiceDefinition>
                .
                .
                .
            </Services>
            </summary>
            <param name="documentNode">The document to write to.</param>
            <param name="serviceDefinitions">The values to write</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.GetLocationServiceUrl(System.String)">
            <summary>
            Gets the location service url for the access mapping moniker provided.
            This function should be used to retrieve location service urls for access
            zones that were loaded by this LocationXmlController instance.
            </summary>
            <param name="moniker">The access mapping moniker.</param>
            <returns>The location service url for this access mapping moniker.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.CheckXmlNodeNull(System.Xml.XmlNode,System.String,System.Xml.XmlNode)">
            <summary>
            Throws and exception if the node provided is null.
            </summary>
            <param name="node">The node to check.</param>
            <param name="nodeName">The name of the node to check.</param>
            <param name="parent">The parent node of the node we are checking.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.CheckXmlNodeNullOrEmpty(System.Xml.XmlNode,System.String,System.Xml.XmlNode)">
            <summary>
            Throws an exception if the xml node is null or empty.
            </summary>
            <param name="node">The node we are checking.</param>
            <param name="nodeName">The name of the node we are checking.</param>
            <param name="parent">The parent node of the node we are checking.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.CheckXmlAttributeNullOrEmpty(System.Xml.XmlAttribute,System.String,System.Xml.XmlNode)">
            <summary>
            Throws exception if the attribute provided is null or empty
            </summary>
            <param name="attribute">The attribute we are checking.</param>
            <param name="attributeName">The name of the attribute we are checking.</param>
            <param name="element">The node that contains this attribute.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator.m_accessMappingLocationServiceUrls">
            <summary>
            Maps access mapping monikers to location service urls
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider.HasConnected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider.GetAuthorizedIdentityAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider.GetAuthenticatedIdentityAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider.ConnectAsync(Microsoft.VisualStudio.Services.WebApi.ConnectOptions,System.Threading.CancellationToken)">
            <summary>
            Performs all of the steps that are necessary for setting up a connection
            with a TeamFoundationServer.  Specify what information should be 
            returned in the connectOptions parameter.
            
            Each time this call is made the username for the current user 
            will be returned as well as the client zone that this client is making 
            requests from.
            </summary>
            <param name="connectOptions">Specifies what information that should be 
            returned from the server.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider.DisconnectAsync(System.Threading.CancellationToken)">
            <summary>
            Reset the connection state back to disconnect
            The client must reconnect
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider">
            <summary>
            This class provides data about the server via the LocationService.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.HasConnected">
            <summary>
            Returns true if this object has successfully authenticated.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetAuthorizedIdentityAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the authorized user.  This function will authenticate with the server if it has
            not done so already.  Like any other regular method, it throws VssUnauthorizedException 
            if the server is contacted and authentication fails.
            </summary>
            <returns>The authenticated user.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetAuthenticatedIdentityAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the authenticated user.  This function will authenticate with the server if it has
            not done so already.  Like any other regular method, it throws VssUnauthorizedException 
            if the server is contacted and authentication fails.
            </summary>
            <returns>The authenticated user.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.InstanceId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.InstanceType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetInstanceIdAsync(System.Threading.CancellationToken)">
            <summary>
            The unique identifier for this server. This method will attempt to return
            a cached value, if possible.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetInstanceTypeAsync(System.Threading.CancellationToken)">
            <summary>
            The unique identifier for the service owner. This property will attempt to return
            a cached value, if possible.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetDefaultAccessMappingAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetClientAccessMappingAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetConfiguredAccessMappingsAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetAccessMappingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="moniker"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.LocationForAccessMappingAsync(Microsoft.VisualStudio.Services.Location.ServiceDefinition,Microsoft.VisualStudio.Services.Location.AccessMapping,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="serviceDefinition"></param>
            <param name="accessMapping"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.LocationForCurrentConnectionAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <param name="serviceIdentifier"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.FindServiceDefinitionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.FindServiceDefinitionAsync(System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <param name="serviceIdentifier"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetResourceLocationsAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.CheckForServerUpdatesAsync(System.Threading.CancellationToken)">
            <summary>
            Consults the server to see if any services from the filter array have 
            changed.  It updates the cache with the new values.
            </summary>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.EnsureConnectedAsync(Microsoft.VisualStudio.Services.WebApi.ConnectOptions,System.Threading.CancellationToken)">
            <summary>
            This function ensures that the connection data that is needed by the caller
            has been retrieved from the server.  This function does not use the 
            credentials provider if authentication fails.
            </summary>
            <param name="optionsNeeded">The options that designate the information the
            caller needs from the server.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.NeedToConnect(Microsoft.VisualStudio.Services.WebApi.ConnectOptions)">
            <summary>
            Returns true if we need to connect to the server.
            </summary>
            <param name="optionsNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.DisconnectAsync(System.Threading.CancellationToken)">
            <summary>
            Reset the connected state of the provider
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.m_connection">
            <summary>
            Passed in on construction. The Uris for the server we are connecting to.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.m_authenticatedIdentity">
            <summary>
            These are the values we are responsible for determining
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.m_locationClient">
            <summary>
            These handle talking to the web service and dealing with connection data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.m_locationDataCacheManager">
            <summary>
            This object manages the location data cache
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.m_resourceLocations">
            <summary>
            Cache of the resource locations
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract">
            <summary>
            Provided by the Azure marketplace. Do not change this.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.Type">
            <summary>
            Gets or sets the resource type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.AssetId">
            <summary>
            Gets or sets the asset id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.AssetVersion">
            <summary>
            Gets or sets the asset version
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.PlanId">
            <summary>
            Gets or sets the plan identifier if any.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.Operation">
            <summary>
            Gets or sets the asset version
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.CustomerSupportEmail">
            <summary>
            Gets or sets the customer support email
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.CustomerSupportPhoneNumber">
            <summary>
            Gets or sets the customer support phone number
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.IntegrationContactEmail">
            <summary>
            Gets or sets the integration contact email
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.IntegrationContactPhoneNumber">
            <summary>
            Gets or sets the integration contact phone number
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract.AssetDetails">
            <summary>
            Gets or sets the asset details
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject">
            <summary>
            Structure of the asset detail object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.OfferMarketingUrlIdentifier">
            <summary>
            Gets or sets the offer identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.PublisherNaturalIdentifier">
            <summary>
            Gets or sets the publisher identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.ServiceNaturalIdentifier">
            <summary>
            Gets or sets the service natural identifier which was assumed offer name ?
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.ProductTypeNaturalIdentifier">
            <summary>
            Gets or sets the product natural identifier which is assumed offer name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.PublisherId">
            <summary>
            Gets or sets the publisher id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.PublisherName">
            <summary>
            Gets or sets the publisher name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.OfferId">
            <summary>
            Gets or sets the resource id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.AnswersPerPlan">
            <summary>
            Gets or sets the Plan details
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.ServicePlansByMarket">
            <summary>
            Gets or sets the price details
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.Languages">
            <summary>
            Gets or sets the Language fields
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AssetDetailObject.Answers">
            <summary>
            Gets or sets the data inside Answers
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PlanDetails">
            <summary>
            The contents of each plan provided by marketplace.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.LangDetails">
            <summary>
            The contents of each Language elements in the asset details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.AnswersDetails">
            <summary>
            The contents of Answers inside the assetDetails
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AnswersDetails.VSMarketplacePublisherName">
            Gets or sets the publisher name
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.AnswersDetails.VSMarketplaceExtensionName">
            Gets or sets the extensionname
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType">
            <summary>
            The status of a REST Api request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.Preview">
            <summary>
            The operation is for preview (or stage for testing).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.Production">
            <summary>
            The operation is for production.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.Hide">
            <summary>
            The operation is for hide.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.Show">
            <summary>
            The operation is for unhide.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.DeletePreview">
            <summary>
            The operation is for delete previewed or staged assets.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType.DeleteProduction">
            <summary>
            The operation is for delete listed or live assets.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel.OperationId">
            <summary>
            Gets or sets the operation id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel.Status">
            <summary>
            Gets or sets the status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel.StatusMessage">
            <summary>
            Gets or sets the status message
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel.PercentageCompleted">
            <summary>
            Gets or sets the completed status percentage
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus">
            <summary>
            The status of a REST Api response status.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus.Completed">
            <summary>
            The operation is completed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus.Failed">
            <summary>
            The operation is failed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus.Inprogress">
            <summary>
            The operation is in progress.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus.Skipped">
            <summary>
            The operation is in skipped.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract2">
            <summary>
            Provided by the Azure marketplace. Do not change this.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.Preview">
            <summary>
            The operation is for preview (or stage for testing).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.Production">
            <summary>
            The operation is for production.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.Hide">
            <summary>
            The operation is for hide.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.Show">
            <summary>
            The operation is for unhide.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.DeletePreview">
            <summary>
            The operation is for delete previewed or staged assets.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2.DeleteProduction">
            <summary>
            The operation is for delete listed or live assets.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel2.OperationId">
            <summary>
            Gets or sets the operation id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel2.Status">
            <summary>
            Gets or sets the status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel2.StatusMessage">
            <summary>
            Gets or sets the status message
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel2.PercentageCompleted">
            <summary>
            Gets or sets the completed status percentage
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1">
            <summary>
            A JsonConverter that sets the value of a property or field to its type's default value if the value is not null
            and the ShouldClearValueFunction property is set and the ShouldClearValueFunction function returns true.  This
            can only be used on properties and fields. The converter will fail if used on at the class level.
            </summary>
            <typeparam name="T">The type of the property or field.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.EventType">
            <summary>
            This is the id of the type. 
            Constants that will be used by subscribers to identify/filter events being published on a topic.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.Publisher">
            <summary>
            This is the service that published this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.Resource">
            <summary>
            The resource object that carries specific information about the event. The object must have
            the ServiceEventObject applied for serialization/deserialization to work.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.ResourceVersion">
            <summary>
            This is the version of the resource. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.ResourceContainers">
            <summary>
            This dictionary carries the context descriptors along with their ids.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Publisher.Name">
            <summary>
            Name of the publishing service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Publisher.ServiceOwnerId">
            <summary>
            Service Owner Guid
            Eg. Tfs : 00025394-6065-48CA-87D9-7F5672854EF7
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult(System.Threading.Tasks.Task)">
            <summary>
            Blocks until the task has completed, throwing the remote exception if one was raised.
            </summary>
            <param name="task">The task to run synchronously</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Blocks until the task has completed, returning the result or throwing the remote exception if one was raised.
            </summary>
            <typeparam name="T">The type for the result</typeparam>
            <param name="task">The task to run synchronously</param>
            <returns>The result of the task</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResultConfigured(System.Threading.Tasks.Task)">
            <summary>
            Blocks until the task has completed, throwing the remote exception if one was raised.
            Configured not to continue on captured context (e.g.: in UI applications the main thread will not be blocked).
            </summary>
            <param name="task">The task to run synchronously</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResultConfigured``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Blocks until the task has completed, returning the result or throwing the remote exception if one was raised.
            Configured not to continue on captured context (e.g.: in UI applications the main thread will not be blocked).
            </summary>
            <typeparam name="T">The type for the result</typeparam>
            <param name="task">The task to run synchronously</param>
            <returns>The result of the task</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage})">
            <summary>
            Blocks until the task has completed, returning the result or throwing the remote exception if one was raised.
            </summary>
            <param name="task">The task to run synchronously</param>
            <returns>The result of the task</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Utilities.AsyncLock">
            <summary>
            From: http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/10266988.aspx
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Internal.ClientIgnoreAttribute">
            <summary>
            GenClient (SwaggerGenerator) will ignore controller methods, parameters, and classes that have this attribute.
            
            If the intent is to hide a single controller from Genclient, then use ClientPreproduction instead. ClientIgnore will
            completely erase a controller's methods from a client at a particular API level.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Internal.ClientIncludeAttribute">
            <summary>
            When a method or class has this attribute, we will only generate client methods for the specified languages.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Internal.ClientIncludeAttribute.#ctor(Microsoft.VisualStudio.Services.WebApi.Internal.RestClientLanguages)">
            <summary>
            
            </summary>
            <param name="languages">A list of languages to generate methods for.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Internal.ClientPreproductionAttribute">
            <summary>
            GenClient will treat any Controller marked with this attribute as though it doesn't exist. Controllers for previous API
            versions will still be generated, but methods on the controller marked with this attribute will have no effect on
            client generation. This allows a controller to be checked in for preproduction use without being exposed on our clients.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Internal.ClientDontGenerateTypeScriptEnumAsConst">
            <summary>
            Suppresses the default constant enum generation behavior in typescriptwebplatform clientgen. When using this attribute, and affected code generation will product a .ts file instead of a .d.ts file (non-constant enumerations should not be generated into .d.ts files).
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ISecuredObject">
            <summary>
            Any responses from public APIs must implement this interface. It is used to enforce that 
            the data being returned has been security checked.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId">
            <summary>
            The id of the namespace which secures this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions">
            <summary>
            The security bit to demand.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken">
            <summary>
            The token to secure this resource.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ISecuredObjectContainer">
            <summary>
            Containers of ISecuredObjects should implement this interface. If you implement this interface, all
            serializable properties must be of type ISecuredObject or IEnumerable of ISecuredObject. This will
            be enforced using a roslyn analyzer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.CommonMustacheHelpers">
            <summary>
            Static helper class for common mustache template helpers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommonMustacheHelpers.LogicalAndHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
             <summary>
             Helper that evaluates whether all of its arguments are "truthy" (e.g. is a non-zero numeric value, non-empty string, non-empty array, or non-empty object)
            
             Usage:
               {{#and arg1 arg2}}Yes, both arguments are truthy{{/and}}
            
             </summary>
             <param name="expression"></param>
             <param name="writer"></param>
             <param name="context"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommonMustacheHelpers.LogicalOrHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
             <summary>
             Helper that evaluates whether at least 1 of its arguments is "truthy" (e.g. is a non-zero numeric value, non-empty string, non-empty array, or non-empty object)
            
             Usage:
               {{#or arg1 arg2}}Yes, at least one of the arguments is truthy{{/or}}
            
             </summary>
             <param name="expression"></param>
             <param name="writer"></param>
             <param name="context"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers">
            <summary>
            Static helper class for handlebar default/builtin template helpers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockWithHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#with ...}} block helper sets context for the child expressions
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockIfHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#if ...}} block helper evaluates child expressions ONLY if the selected value is true
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockUnlessHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#unless ...}} block helper evaluates child expressions ONLY if the selected value is false
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockEachHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#each ...}} block helper evaluates child expressions once for every item in an array or object
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockLookupHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#lookup ../foo @index}} block helper allows for indexing into an object by @index or @key
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarPartialHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{> foo context }} helper looks for a partial template registered as 'foo' and evaluates it against 'context'
            Evaluates against the current context if 'context' is not given
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheException">
            <summary>
            Base exception for mustache parse and evaluation exceptions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheExpressionInvalidException">
            <summary>
            Exception thrown when parsing a mustache template that indicates it is an invalid expression
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationResultLengthException">
            <summary>
            Exception thrown when a mustache evaluation result exceeds the maximum length
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperMethod">
            <summary>
            Delegate for methods called during evaluation for registered helpers
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperWriter">
            <summary>
            Delegate for methods called during evaluation for registered helpers
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethod">
            <summary>
            Delegate for encoding values during evaluation.
            </summary>
            <param name="value">value to be encoded</param>
            <returns>the encoded value</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext">
            <summary>
            Context object used during the evaulation of a mustache template expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ReplacementObject">
            <summary>
            The replacement object used to evaluate expressions in this context
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ReplacementToken">
            <summary>
            The replacement object used to evaluate expressions in this context
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ParentContext">
            <summary>
            The context object for the parent expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.CurrentIndex">
            <summary>
            The current index of the parent expression's array (only applicable when the parent context is an array)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ParentItemsCount">
            <summary>
            The total number of items in the parent context (only applicable when the parent context is an array)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.CurrentKey">
            <summary>
            The current key of the parent expression's object (only applicable when the parent context is an each/object expression)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.PartialExpressions">
            <summary>
            The complete set of partial accessible from this context
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheOptions.CancellationToken">
            <summary>
            Gets or sets the cancellation token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheOptions.DisableInlinePartials">
            <summary>
            Gets or sets a value indicationg whether inline partials are disabled. When true, an exception will be thrown
            by the parser if an inline partial is defined.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheOptions.EncodeMethod">
            <summary>
            Gets or sets the delegate for encoding values during evaluation. Defaults to the method <see cref="M:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods.HtmlEncode(System.String)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheOptions.MaxDepth">
            <summary>
            Gets or sets the maximum depth. This number limits the maximum nest level at parse time. In the future,
            this setting will be applied at evaluation time as well. Until then, inline partials should also be disabled
            in order for a max depth to be enforced. Any number less than 1 is treated as Int32.MaxValue. An exception
            will be thrown when the threshold is exceeded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheOptions.MaxResultLength">
            <summary>
            Gets or sets the maximum string length for the evaluation result. Any number less than 1 is treated
            as Int32.MaxValue. Evaluation will throw an exception when the threshold is exceeded.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheExpression">
            <summary>
            Base class for mustache template expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.IsContextBased">
            <summary>
            Does this type of expression accept a context/replacement object during evaluation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.PartialExpressions">
            <summary>
            The complete set of partial accessible from this context
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Method called during the evaluation of an expression
            </summary>
            <param name="context"></param>
            <param name="writer"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression})">
            <summary>
            Evaluate the current expression using the given replacement object as context.
            </summary>
            <param name="replacementObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression},Microsoft.VisualStudio.Services.WebApi.MustacheOptions)">
            <summary>
            Evaluate the current expression using the given replacement object as context.
            </summary>
            <param name="replacementObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(System.IO.TextWriter,System.Object,Microsoft.VisualStudio.Services.WebApi.MustacheOptions,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression})">
            <summary>
            Evaluate the current expression using the given replacement object as context.
            </summary>
            <param name="replacementObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Parse(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperWriter},System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression},Microsoft.VisualStudio.Services.WebApi.MustacheOptions,System.Int32)">
            <summary>
            Parses a mustache-template expression
            </summary>
            <param name="template">mustache-style template</param>
            <param name="helpers">mustache template helper functions</param>
            <param name="blockHelpers">mustache block template helper functions</param>
            <param name="options">mustache options for parsing and evaluation</param>
            <param name="depth">current depth of the caller</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression">
            <summary>
            A text-only mustache expression (no {{ ... }} blocks)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression.Text">
            <summary>
            The raw text for this expression
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Get the text defined in this expression
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheLiteralExpression`1">
            <summary>
            A literal expression (i.e. string, boolean, number, true/false, null). Represents literal arguments for a helper expression.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheLiteralExpression`1.Value">
            <summary>
            Literal value
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression">
            <summary>
            A mustache expression which may contain child expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression.Helpers">
            <summary>
            Registered helper methods for single (non-block) expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression.BlockHelpers">
            <summary>
            Registered helper methods for Block expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression.TemplateHelpers">
            <summary>
            Template helpers
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression">
            <summary>
            A mustache expression which may contain child expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.ParentExpression">
            <summary>
            The parent expression which contains this expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.ChildExpressions">
            <summary>
            Expressions contained within this expression
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Get the resolved value from this and all child expressions
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.EvaluateChildExpressions(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Evaluate all child expressions with the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.EvaluateChildExpressions(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Evaluate all child expressions with the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.GetCurrentJToken(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Get the current token/replacement object for the given selector and context
            </summary>
            <param name="selector"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression">
            <summary>
            A templated mustache expression ({{ ... }}). May be a block or simple expression.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.RootExpression">
            <summary>
            The root expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Expression">
            <summary>
            The selector/expression context for this block
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.HelperName">
            <summary>
            The name of the helper method to invoke (if any)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.HelperArguments">
            <summary>
            Argument expressions for this expression (if any)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Encode">
            <summary>
            True to encode the result
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsBlockExpression">
            <summary>
            Is the expression a block expression ({{#...}})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsNegativeExpression">
            <summary>
            Is the expression a negative expression ({{^...}} or {{else}})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsElseBlock">
            <summary>
            Is this an else block
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.ElseSourceExpression">
            <summary>
            If this is an else block, this is the source (if) expression to compliment
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsComment">
            <summary>
            Is this a comment exception ({{!-- ... --}} or {{! ... }})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsContextBased">
            <summary>
            Templated expressions accept replacement context
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.GetCurrentToken(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Get the current token/replacement object for the given selector and context
            </summary>
            <param name="selector"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsTokenTruthy(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determine whether or not the token evaluates to a "truthy" value (non-null, non-empty string, non-zero, etc.)
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Evaluate the value of this expression using the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.EvaluateInternal(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter)">
            <summary>
            Evaluate the value of this expression using the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.GetRawHelperArgument(System.Int32)">
            <summary>
            For a templated expression using a Helper, this gets the raw string argument at the nth position.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.GetHelperArgument``1(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext,System.Int32,``0)">
            <summary>
            For a templated expression using a Helper, this gives the appropriate value for the nth argument to the helper.
            Non-quoted strings (which aren't valid literal values) are resolved as context selectors.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="index"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods">
            <summary>
            Common implementations to use for the delegate <see cref="T:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethod"/>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods.HtmlEncode(System.String)">
            <summary>
            Applies HTML encoding rules to the value.
            </summary>
            <param name="value">value to be encoded</param>
            <returns>the HTML-encoded value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods.JsonEncode(System.String)">
            <summary>
            Applies JSON-string encoding rules to the value. Note, the value is simply escaped and additional surrounding quotes are not added.
            </summary>
            <param name="value">value to be encoded</param>
            <returns>the JSON-string-encoded value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods.NoEncode(System.String)">
            <summary>
            Simply returns the string without applying any encoding rules.
            </summary>
            <param name="value">value to be encoded</param>
            <returns>the original value</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser">
            <summary>
            Utility class for working with mustache-style templates
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.Helpers">
            <summary>
            Template helpers to use when evaluating expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.BlockHelpers">
            <summary>
            Template block helpers to use when evaluating expressions
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.Partials" -->
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.#ctor(System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create a helper for parsing mustache templates
            </summary>
            <param name="useDefaultHandlebarHelpers">Register handlebar helpers (with, if, else, etc.)</param>
            <param name="useCommonHandlebarHelpers">Register common template helpers (equals, notequals, etc.)</param>
            <param name="partials">Register partial expressions</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Create a helper for parsing mustache templates
            </summary>
            <param name="useDefaultHandlebarHelpers">Register handlebar helpers (with, if, else, etc.)</param>
            <param name="useCommonHandlebarHelpers">Register common template helpers (equals, notequals, etc.)</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.#ctor(System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.VisualStudio.Services.WebApi.MustacheOptions)">
            <summary>
            Create a helper for parsing mustache templates
            </summary>
            <param name="useDefaultHandlebarHelpers">Register handlebar helpers (with, if, else, etc.)</param>
            <param name="useCommonHandlebarHelpers">Register common template helpers (equals, notequals, etc.)</param>
            <param name="partials">Register partial expressions</param>
            <param name="options">Options to use for parsing and evaluation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.RegisterHelper(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperMethod)">
            <summary>
            Register the helper with the specified name
            </summary>
            <param name="helperName"></param>
            <param name="helper"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.RegisterHelper(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperWriter)">
            <summary>
            Register the helper with the specified name
            </summary>
            <param name="helperName"></param>
            <param name="helper"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.ParseAndRegisterPartial(System.String,System.String)">
            <summary>
            Register a new partial template in string form with the template parser
            Overwrites an existing partial with the same name
            </summary>
            <param name="partialName"></param>
            <param name="partialExpression"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.RegisterPartial(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression)">
            <summary>
            Register a new partial template in mustache-expression-tree form with the template parser
            Overwrites an existing partial with the same name
            </summary>
            <param name="partialName"></param>
            <param name="partialExpression"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.ReplaceValues(System.String,System.Object)">
            <summary>
            Repace values in a mustache-style template with values from the given property bag.
            </summary>
            <param name="template">mustache-style template</param>
            <param name="replacementContext">properties to use as replacements</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.Parse(System.String)">
            <summary>
            Parse the given mustache template, resulting in a "compiled" expression that can
            be evaluated with a replacement context
            </summary>
            <param name="template">mustache-style template</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Xml.XmlSerializableDataContractExtensions">
            <summary>
            These extensions are intended to be used alongside the <see cref="T:System.Xml.Serialization.IXmlSerializable"/> interface
            to allow classes to leverage some of the functionality of DataContractSerializer,
            such as serialization of publicly immutable properties, while also supporting the conventional <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Xml.XmlSerializableDataContractExtensions.ToHashSet``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Creates a HashSet based on the elements in <paramref name="source"/>, using transformation
            function <paramref name="selector"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation">
            <summary>
            Information about the location of a REST API resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.Id">
            <summary>
            Unique Identifier for this location
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.Area">
            <summary>
            Area name for this resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ResourceName">
            <summary>
            Resource name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.RouteTemplate">
            <summary>
            This location's route template (templated relative path)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.RouteName">
            <summary>
            The name of the route (not serialized to the client)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ResourceVersion">
            <summary>
            The current resource version supported by this resource location
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MinVersion">
            <summary>
            Minimum api version that this resource supports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MinVersionString">
            <summary>
            Minimum api version that this resource supports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MaxVersion">
            <summary>
            Maximum api version that this resource supports (current server version for this resource)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MaxVersionString">
            <summary>
            Maximum api version that this resource supports (current server version for this resource)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ReleasedVersion">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ReleasedVersionString">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ToServiceDefinition(Microsoft.VisualStudio.Services.Location.InheritLevel)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.FromServiceDefinition(Microsoft.VisualStudio.Services.Location.ServiceDefinition)">
            <summary>
            
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection">
            <summary>
            Container for API resource locations
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.AddResourceLocation(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation)">
            <summary>
            Add a new API resource location
            </summary>
            <param name="location">API resource location to add</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.AddResourceLocations(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation})">
            <summary>
            Add new API resource locations
            </summary>
            <param name="locations">API resource locations to add</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.TryGetLocationById(System.Guid)">
            <summary>
            Get an API resource location by location id. Returns null if not found.
            </summary>
            <param name="locationId">Id of the registered resource location</param>
            <returns>ApiResourceLocation or null if not found</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetLocationById(System.Guid)">
            <summary>
            Get an API resource location by location id. Throws if not found.
            </summary>
            <param name="locationId">Id of the registered resource location</param>
            <returns>ApiResourceLocation or null if not found</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetAllLocations">
            <summary>
            Get all API resource locations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetAreaLocations(System.String)">
            <summary>
            Get all API resource locations under a given area
            </summary>
            <param name="area">Resource area name</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetResourceLocations(System.String,System.String)">
            <summary>
            Get all API resource locations for a given resource.
            </summary>
            <remarks>Note: There are multiple locations for a given resource when multiple routes are registered for that resource</remarks>
            <param name="area">Resource area name</param>
            <param name="resourceName">Resource name</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion">
            <summary>
            Represents version information for a REST Api resource
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.Double,System.Int32)">
            <summary>
            Construct a new API Version info
            </summary>
            <param name="apiVersion">Public API version</param>
            <param name="resourceVersion">Resource version</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor">
            <summary>
            Construct a new API resource Version
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.Version,System.Int32)">
            <summary>
            Construct a new API Version info
            </summary>
            <param name="apiVersion">Public API version</param>
            <param name="resourceVersion">Resource version</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.String)">
            <summary>
            Construct a new API Version info from the given version string
            </summary>
            <param name="apiResourceVersionString">Version string in the form: 
            {ApiMajor}.{ApiMinor}[-{stage}[.{resourceVersion}]]
            
            For example: 1.0 or 2.0-preview or 2.0-preview.3</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ApiVersion">
            <summary>
            Public API version. This is the version that the public sees and is used for a large
            group of services (e.g. the TFS 1.0 API)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ApiVersionString">
            <summary>
            String representation of the Public API version. This is the version that the public sees and is used 
            for a large group of services (e.g. the TFS 1.0 API)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ResourceVersion">
            <summary>
            Internal resource version. This is defined per-resource and is used to support
            build-to-build compatibility of API changes within a given (in-preview) public api version.
            For example, within the TFS 1.0 API release cycle, while it is still in preview, a resource's
            data structure may be changed. This resource can be versioned such that older clients will
            still work (requests will be sent to the older version) and new/upgraded clients will
            talk to the new version of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.IsPreview">
            <summary>
            Is the public API version in preview
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ToString">
            <summary>
            Returns the version string in the form:
            {ApiMajor}.{ApiMinor}[-{stage}[.{resourceVersion}]]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions">
            <summary>
            Extension methods for getting/setting API resource version information from requests and to responses
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion)">
            <summary>
            Generate version key/value pairs to use in the header, replacing any existing api-version value.
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Boolean)">
            <summary>
            Generate version key/value pairs to use in the header
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
            <param name="replaceExisting">If true, replace an existing header with the specified version. Otherwise no-op in that case</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Boolean,System.Boolean)">
            <summary>
            Generate version key/value pairs to use in the header
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
            <param name="replaceExisting">If true, replace an existing header with the specified version. Otherwise no-op in that case</param>
            <param name="useLegacyFormat">If true, use the legacy format of api-version combined with res-version</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssClientHttpRequestSettings">
            <summary>
            Provides access to common settings which control the behavior of requests for a <c>VssHttpClient</c> instance.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssClientHttpRequestSettings.Default">
            <summary>
            Gets the default request settings.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssClientHttpRequestSettings.ResetDefaultSettings">
            <summary>
            Reload the defaults from the Registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssClientHttpRequestSettings.ConstructDefaultSettings">
            <summary>
            Creates an instance of the default request settings.
            </summary>
            <returns>The default request settings</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssClientSettings">
            <summary>
            Helper for retrieving client settings which are environment-specific or retrieved from the Windows Registry
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssClientSettings.ClientCacheDirectory">
            <summary>
            Directory containing the client cache files which resides below the settings directory.
            
            This will look something like this:
            C:\Documents and Settings\username\Local Settings\Application Data\Microsoft\VisualStudio Services\[GeneratedVersionInfo.TfsProductVersion]\Cache
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssClientSettings.ClientSettingsDirectory">
            <summary>
            Directory containing the client settings files.
            
            This will look something like this:
            C:\Documents and Settings\username\Local Settings\Application Data\Microsoft\VisualStudio Services\[GeneratedVersionInfo.TfsProductVersion]
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.Disconnect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetService``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetServiceAsync``1(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient``1">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient``1(System.Guid)">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <param name="serviceIdentifier">Optional parameter. If supplied, the identifier will be used to resolve the
            base address for the HTTP client. Otherwise the base address will be resolved using the service identifier
            in the metadata of the requested client type (i.e. the ResourceArea attribute)</param>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient``1(System.Threading.CancellationToken)">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient``1(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <param name="serviceIdentifier">Optional parameter. If supplied, the identifier will be used to resolve the
            base address for the HTTP client. Otherwise the base address will be resolved using the service identifier
            in the metadata of the requested client type (i.e. the ResourceArea attribute)</param>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientAsync``1(System.Threading.CancellationToken)">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientAsync``1(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieves an HTTP client of the specified type.
            </summary>
            <typeparam name="T">The type of client to retrieve</typeparam>
            <param name="serviceIdentifier">Optional parameter. If supplied, the identifier will be used to resolve the
            base address for the HTTP client. Otherwise the base address will be resolved using the service identifier
            in the metadata of the requested client type (i.e. the ResourceArea attribute)</param>
            <returns>The client of the specified type</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.CreateAsync(System.String,Microsoft.VisualStudio.Services.Common.VssCredentials,System.Threading.CancellationToken)">
            <summary>
            Creates connection with the organization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.CreateAsync(System.String,Microsoft.VisualStudio.Services.Common.VssCredentials,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Threading.CancellationToken)">
            <summary>
            Creates connection with the organization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.CreateAsync(System.String,Microsoft.VisualStudio.Services.Common.VssHttpMessageHandler,System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler},System.Threading.CancellationToken)">
            <summary>
            Creates connection with the organization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient(System.Type)">
            <summary>
            
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientServiceImplAsync(System.Type,System.Guid,System.Func{System.Type,System.Guid,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Object}},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="requestedType"></param>
            <param name="getInstanceAsync"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientInstanceAsync(System.Type,System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="managedType"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientInstanceAsync(System.Type,System.Threading.CancellationToken,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])">
            <summary>
            
            </summary>
            <param name="managedType"></param>
            <param name="cancellationToken"></param>
            <param name="settings"></param>
            <param name="handlers"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientInstanceAsync(System.Type,System.Guid,System.Threading.CancellationToken,Microsoft.VisualStudio.Services.Common.VssHttpRequestSettings,System.Net.Http.DelegatingHandler[])">
            <summary>
            
            </summary>
            <param name="managedType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetServiceIdentifier(System.Type)">
            <summary>
            Gets the service and fallback identifiers from the [ResourceArea] attribute of the specified type
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetServiceInstanceAsync(System.Type,System.Guid,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="managedType"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.GetExtensibleType(System.Type)">
            <summary>
            
            </summary>
            <param name="managedType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.RegisterExtensibleType(System.String,System.Type)">
            <summary>
            Used for Testing Only
            </summary>
            <param name="typeName"></param>
            <param name="type"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnection.RegisterClientServiceInstance(System.Type,System.Object)">
            <summary>
            Used for Testing Only
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.Uri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.InnerHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.DelegatingHandlers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.Credentials">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.ServerId">
            <summary>
            The Guid that identifies the server associated with the <c>VssConnection</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.ServerType">
            <summary>
            The Guid that identifies the type of server associated with the <c>VssConnection</c>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.AuthorizedIdentity">
            <summary>
            The Id of the identity who the calls to the server are being made for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.AuthenticatedIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.HasAuthenticated">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.ParentConnection">
            <summary>
            The connection to the parent host for this VSS connection. If this connection is to a collection host,
            then this property will return a connection to the account/tenant host.
            The property will return null if a parent cannot be located for the current connection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssConnection.ServerDataProvider">
            <summary>
            Used for testing. Do not use for product code.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.IVssClientService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IVssClientService.Initialize(Microsoft.VisualStudio.Services.WebApi.VssConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssClientServiceImplementationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ExtensibleServiceTypeNotRegisteredException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ExtensibleServiceTypeNotValidException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper">
            <summary>
            Helper methods for connecting to VSTS resources.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper.GetOrganizationUrlAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the connection URL for the specified VSTS organization name.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper.GetOrganizationUrlAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the connection URL for the specified VSTS organization ID.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssEventId">
            <summary>Define event log id ranges</summary>
            This corresponds with values in Framework\Server\Common\EventLog.cs
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase">
            <summary>
            This class is used as the base class for all the REST client classes.
            It wraps a <c>System.Net.Http.HttpClient</c> and sets up standard defaults.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.BaseAddress">
            <summary>
            The base address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.LastResponseContext">
             <summary>
            
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Client">
            <summary>
            The inner client.
            </summary>
            <remarks>
            Note to implementers: You should not update or expose the inner client
            unless you instantiate your own instance of this class. Getting
            an instance of this class from method such as GetClient&lt;T&gt;
            a cached and shared instance.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Formatter">
            <summary>
            The media type formatter.
            </summary>
            <remarks>
            Note to implementers: You should not update or expose the media type formatter
            unless you instantiate your own instance of this class. Getting
            an instance of this class from method such as GetClient&lt;T&gt;
            a cached and shared instance.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.TranslatedExceptions">
             <summary>
            
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessage(System.Net.Http.HttpMethod,Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="location">API resource location</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessage(System.Net.Http.HttpMethod,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="location">API resource location</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.AddDateTimeToQueryParams(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.DateTime)">
            <summary>
            Ensures we are using a standard format for sending DateTime value as a query parameter (o: 2015-02-16T16:11:31.1398684Z)
            </summary>
            <param name="queryParams"></param>
            <param name="name"></param>
            <param name="localDateTime">local DateTime value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.AddDateTimeToQueryParams(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.DateTimeOffset)">
            <summary>
            Ensures we are using a standard format for sending DateTime value as a query parameter (o: 2015-02-16T16:11:31.1398684Z)
            </summary>
            <param name="queryParams"></param>
            <param name="name"></param>
            <param name="dateTimeOffset"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.AddDateTimeToHeaders(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.DateTimeOffset)">
            <summary>
            Ensures we are using a standard format (HTTP-date) for sending DateTime value as header
            (r: Wed, 1 Jan 2016 18:43:31 GMT) per W3C specification.
            </summary>
            <param name="queryParams"></param>
            <param name="name"></param>
            <param name="dateTimeOffset"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.NegotiateRequestVersionAsync(System.Guid,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Object,System.Threading.CancellationToken)">
            <summary>
            Negotiate the appropriate request version to use for the given api resource location, based on
            the client and server capabilities
            </summary>
            <param name="locationId">Id of the API resource location</param>
            <param name="version">Client version to attempt to use (use the latest VSS API version if unspecified)</param>
            <returns>Max API version supported on the server that is less than or equal to the client version. Returns null if the server does not support this location or this version of the client.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.NegotiateRequestVersion(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion)">
            <summary>
            Negotiate the appropriate request version to use for the given api resource location, based on
            the client and server capabilities
            </summary>
            <param name="location">Location of the API resource</param>
            <param name="version">Client version to attempt to use (use the latest VSS API version if unspecified)</param>
            <returns>Max API version supported on the server that is less than or equal to the client version. Returns null if the server does not support this location or this version of the client.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SetResourceLocations(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection)">
            <summary>
            Sets the ApiResourceLocationCollection for this VssHttpClientBase.
            If unset and needed, the data will be fetched through an OPTIONS request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.ExcludeUrlsHeader">
            <summary>
            Adds the excludeUrls=true accept header to the requests generated by this client.
            If respected by the server, urls will not be included in the responses.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.LightweightHeader">
            <summary>
            Add the lightWeight=true option to the accept header in the requests generated by this client.
            If respected by the server, light weight responses carrying only basic metadata information
            will be returned and urls will be excluded.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.GetResourceLocationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get information about an API resource location by its location id
            </summary>
            <param name="locationId">Id of the API resource location</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.HasResourceLocations">
            <summary>
            Internal for testing only.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.m_excludeUrlsHeader">
            <summary>
            Client option to suppress the generation of links in the responses for the requests made by this client.
            If set, "excludeUrls=true" will be appended to the Accept header of the request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.m_lightweightHeader">
            <summary>
            Client option to generate lightweight responses that carry only basic metadata information for the
            requests made by this client. Links should not be generated either.
            If set, "lightweight=true" will be appended to the Accept header of the request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.c_optionsRelativePath">
            <summary>
            This is only needed for the Options request that we are making right now. Eventually
            we will use the Location Service and the Options request will not be needed and we can remove this.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility.ReplaceRouteValues(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Replace values in a templated route with the given route values dictionary.
            </summary>
            <param name="routeTemplate"></param>
            <param name="routeValues"></param>
            <param name="escapeUri">Set true to escape the replaced route Uri string prior to returning it</param>
            <param name="appendUnusedAsQueryParams">Set true to append any unused routeValues as query parameters to the returned route</param>
            <param name="requireExplicitRouteParams">If set to true requires all the route parameters to be explicitly passed in routeParams</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility.ReplaceRouteValues(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.VisualStudio.Services.WebApi.RouteReplacementOptions)">
            <summary>
            Replace values in a templated route with the given route values dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility.ToRouteDictionary(System.Object,System.String,System.String)">
            <summary>
            Create a route values dictionary, and add the specified area and resource if they aren't present.
            </summary>
            <param name="routeValues"></param>
            <param name="area">Area name</param>
            <param name="resourceName">Resource name</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapperBase.Count">
            <summary>
            The number of serialized items.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapper`1">
            <summary>
            This class is used to serialize collections as a single JSON object on the wire.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapper`1.Value">
            <summary>
            The serialized item.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssJsonSerializationConstants">
            <summary>
            Constants related to JSON serialization customizations 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssJsonSerializationConstants.EnumsAsNumbersHeader">
            <summary>
            Header which indicates to serialize enums as numbers.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssJsonSerializationConstants.MsDateFormatHeader">
            <summary>
            Header which indicates to serialize dates using the Microsoft Ajax date format
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssJsonSerializationConstants.NoArrayWrapHeader">
            <summary>
            Header which indicates to return a root array in a JSON response rather than wrapping it in an object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bypassSafeArrayWrapping">This should typically be false.  A true value will cause the wrapping to be skipped which is neccesary when creating ObjectContent from arrays on client to prepare a request</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.#ctor(System.Net.Http.HttpRequestMessage,System.Boolean)">
            <summary>
            
            </summary>
            <param name="bypassSafeArrayWrapping">This should typically be false.  A true value will cause the wrapping to be skipped which is neccesary when creating ObjectContent from arrays on client to prepare a request</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.BypassSafeArrayWrapping">
            <summary>
            Whether or not to wrap a root array into an object with a "value" property equal to the array.
            This protects against an old browser vulnerability (Firefox 2.0) around overriding the 'Array'
            prototype and referencing a REST endpoint through in a script tag, and stealing the results
            cross-origin.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.EnumsAsNumbers">
            <summary>
            True if enums are serialized as numbers rather than user-friendly strings
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.UseMsDateFormat">
            <summary>
            True if dates are to be emitted using MSJSON format rather than ISO format.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Because JSON PATCH and JSON both use the JSON format, we explicitly are 
            blocking the default JSON formatter from being able to read the PATCH 
            format.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssJsonPatchMediaTypeFormatter">
            <summary>
            The media type formatter for json-patch.  It deserializes the incoming json
            into a JsonPatchDocument, and then calls PatchDocument.CreateFromJson
            which creates the strongly typed PatchDocument expected by the controller.
            
            This is done to ensure all semantic validation can occur before the controller
            gets the object model. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSecureJsonConverterHelper.Validate">
            <summary>
            The action to validate the object being converted.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials">
            <summary>
            Provides a contract for signing, and verifying signatures of, blobs of data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.CanSignData">
            <summary>
            Gets a value indicating whether or not this token may be used to sign data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.KeySize">
            <summary>
            Gets the size of the key, in bits, used for signing and verification.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.ValidFrom">
            <summary>
            Gets the date from which this signing token is valid.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.ValidTo">
            <summary>
            Gets the datetime at which this signing token expires.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.KeyId">
            <summary>
            Gets the keyId for this signing token if available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.SignatureAlgorithm">
            <summary>
            Gets the signature algorithm used by this signing token.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.SignData(System.Byte[])">
            <summary>
            Signs the <paramref name="input"/> array with the signing key associated with the token.
            </summary>
            <param name="input">The data which should be signed</param>
            <returns>A blob of data representing the signature of the input data</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the current instance cannot be used for signing</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.GetSignature(System.Byte[])">
            <summary>
            Signs the <paramref name="input"/> array with the signing key associated with the token.
            </summary>
            <param name="input">The data which should be signed</param>
            <returns>A blob of data representing the signature of the input data</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.VerifySignature(System.Byte[],System.Byte[])">
            <summary>
            Verifies the signature of the input data, returning true if the signature is valid.
            </summary>
            <param name="input">The data which should be signed</param>
            <param name="signature">The signature which should be verified</param>
            <returns>True if the provided signature matches the current signing token; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.Create(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Creates a new <c>VssSigningCredentials</c> instance using the specified <paramref name="certificate"/> instance
            as the signing key.
            </summary>
            <param name="certificate">The certificate which contains the key used for signing and verification</param>
            <returns>A new <c>VssSigningCredentials</c> instance which uses the specified certificate for signing</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.Create(System.Func{System.Security.Cryptography.RSA})">
            <summary>
            Creates a new <c>VssSigningCredentials</c> instance using the specified <paramref name="factory"/>
            callback function to retrieve the signing key.
            </summary>
            <param name="factory">The factory which creates <c>RSA</c> keys used for signing and verification</param>
            <returns>A new <c>VssSigningCredentials</c> instance which uses the specified provider for signing</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials.Create(System.Byte[])">
            <summary>
            Creates a new <c>VssSigningCredentials</c> instance using the specified <paramref name="key"/> as the signing
            key. The returned signing token performs symmetric key signing and verification.
            </summary>
            <param name="rsa">The key used for signing and verification</param>
            <returns>A new <c>VssSigningCredentials</c> instance which uses the specified key for signing</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WrappedException.UpdateExceptionAttributeMappingCache">
            <summary>
            Loop through all types in all loaded assemblies that we haven't looked at yet, and cache ExceptionMappingAttribute data
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WrappedException.DoesAssemblyQualify(System.Reflection.Assembly)">
            <summary>
            Checks Assembly to see if it has the possibility to contain an ExceptionMappingAttribute.  Does this by matching the Version and PublicKeyToken
            with the current executing assembly.
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.WrappedException.s_exceptionsWithAttributeMapping">
            <summary>
            Exception Attribute Mapping Cache. key = exception type name from a response, value = ExclusiveMaxApiVersion and the mapped Type for that type name
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountExists(System.Object)">
            <summary>
            The following organization already exists: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountMarkedForDeletionError(System.Object)">
            <summary>
            Operation not permitted. Organization with id {0} has been marked for deletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotFound">
            <summary>
            Organization not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotFoundByIdError(System.Object)">
            <summary>
            No organization found for accountId {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotMarkedForDeletion">
            <summary>
            Hosting account cannot be deleted. Organization is not marked EligibleForDeletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.MaxNumberOfAccountsExceptions">
            <summary>
            Maximum number of organizations reached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.MaxNumberOfAccountsPerUserException">
            <summary>
            Maximum number of organizations for user reached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotMarkedForDeletionError(System.Object)">
            <summary>
            Operation not permitted. Organization with id {0} has not been marked for deletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountHostmappingNotFoundById(System.Object)">
            <summary>
            No organization host mapping found for hostId {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountServiceLockDownModeException">
            <summary>
            Organization Service is currently in lock down mode.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountUserNotFoundException(System.Object,System.Object)">
            <summary>
            User with userId={0} is not a member of accountId={1}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.RegionExists(System.Object)">
            <summary>
            TF1510000 :The following region already exists: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNameReserved(System.Object)">
            <summary>
            The specified organization name is reserved: &apos;{0}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountServiceUnavailableException">
            <summary>
            Organization Service is temporarily not available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNameTemporarilyUnavailable">
            <summary>
            The organization URL is not available. Please try again later.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountMustBeUnlinkedBeforeDeletion">
            <summary>
            You must first remove billing before deleting your organization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.UnsupportedSubscriptionTypeExceptionMessage">
            <summary>
            The subscription type is unsupported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.UserIsNotSubscriptionAdmin">
            <summary>
            User is not a subscription administrator or co-administrator of the Azure subscription.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.UserNotAccountAdministrator(System.Object,System.Object)">
            <summary>
            User &quot;{0}&quot; is not the organization owner of &quot;{1}&quot;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CommerceResources.OfferMeterNotFoundExceptionMessage(System.Object)">
            <summary>
            No offer meter found for name or galleryItemId: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.SourceIsNotDetachedDatabase">
            <summary>
            VS403250: The dacpac or source database is not a detached Azure DevOps Server Collection database. Please refer to the troubleshooting documentation for more details; https://aka.ms/AzureDevOpsImportTroubleshooting
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.ImportInvalidSourceExtendedPropertyValue(System.Object,System.Object,System.Object)">
             <summary>
             {0} is the property name, {1} is the expected property value, {2} is the actual property value
            
             The dacpac or source database contains an extended property with an invalid value: Name:&apos;{0}&apos;, Expected Value:{1}, Actual Value:{2}.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.MissingSourceExtendedProperty(System.Object)">
             <summary>
             {0} is the list of missing extended properties
            
             The dacpac or database does not contain the following extended properties:{0}.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.UnsupportedCollectionMilestone(System.Object)">
             <summary>
             {0} is the database service level
            
             VS403265: The collection&apos;s Azure DevOps Server milestone is not supported by the data migration tool: {0}. Please upgrade your Azure DevOps Server to one of the supported versions. The data migration guide has the latest supported versions: https://aka.ms/AzureDevOpsImport
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.SourceIsTFSConfigurationDatabase">
            <summary>
            VS403286: The dacpac or source database is from an Azure DevOps Server Configuration database. You must use a detached Azure DevOps Server collection database. Please refer to the troubleshooting documentation for more details; https://aka.ms/AzureDevOpsImportTroubleshooting
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.UnableToExtractDacpacInformation">
            <summary>
            VS403301: An unexpected error was encountered while attempting to read the dacpac. Please check the logs for more information and refer to https://aka.ms/AzureDevOpsImportTroubleshooting
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.SourceDatabaseIsMissingSnapshotTable">
            <summary>
            VS403351: The dacpac or source database is missing an expected table. It&apos;s possible that the database was not correctly detached from Azure DevOps Server. See our troubleshooting documentation for more details https://aka.ms/AzureDevOpsImportTroubleshooting
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.TfsMigratorVersionIsNotSupported">
             <summary>
             This Message may be shown when performing the validation or prepare command
            
             VS403375: The version of the data migration tool you are using is no longer supported. Please download the latest version from https://aka.ms/DownloadAzureDevOpsMigrator
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.TfsMigratorVersionIsNotSupportedForPepare">
             <summary>
             This message may be shown when performing and import but the prepared import.json is too old, after downloading the new version they will need to run prepare
            
             VS403393: The version of the data migration tool you are using is no longer supported. Please download the latest version from https://aka.ms/DownloadAzureDevOpsMigrator and regenerate the import specification file.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.TfsMigratorVersionIsNotSupportedForImport">
             <summary>
             This message may be shown when performing and import but the version of the data migration tool is too old, after downloading the new version they do not need to run prepare
            
             VS403394: The version of the data migration tool you are using is no longer supported to queue an import. Please download the latest version from https://aka.ms/DownloadAzureDevOpsMigrator and try to queue your import again. There is no need to regenerate the import specification file.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.SourceDatabaseContainsExtractedData">
            <summary>
            VS403386: The specified dacpac file is actually a BACPAC file. BACPACs are not supported for importing a collection into Azure DevOps. See our documentation for generating a dacpac for more details https://aka.ms/CreateAzureDevOpsDACPAC
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.SqlPackageVersionNotSupportedException">
            <summary>
            VS403401: The version of SqlPackage.exe used to create your dacpac is not supported. Please download the latest version from https://aka.ms/ImportSQLPackage and recreate the dacpac.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.MaxDacpacSizeExceededException(System.Object,System.Object)">
             <summary>
             {0} is the size of the dacpac, {1} is the size of the threshold
            
             VS403402: The size of the provided dacpac is {0} GB, exceeding the maximum allowable size of {1} GB. Your collection will need to be imported using the large collection import method - https://aka.ms/AzureDevOpsImportLargeCollection
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ArtifactUriNotSupportedException(System.Object)">
            <summary>
            The artifact Uri {0} is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerNotFoundException(System.Object)">
            <summary>
            The container {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemNotFoundException(System.Object,System.Object)">
            <summary>
            The item {0} in container {1} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemWithDifferentTypeExists(System.Object,System.Object)">
            <summary>
            The items could not be created because an item with type {0} already exists at {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.PendingUploadNotFoundException(System.Object)">
            <summary>
            The pending upload {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemDoesNotExist(System.Object,System.Object)">
            <summary>
            The item {0} of type {1} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopySourcePendingUpload(System.Object)">
            <summary>
            The source item {0} is in the pending upload state.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopyTargetChildOfSource(System.Object,System.Object)">
            <summary>
            The target folder {0} of the copy operation is a child of the source folder {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopyDuplicateTargets(System.Object)">
            <summary>
            The target location {0} is specified for two or more sources.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerAlreadyExists(System.Object)">
            <summary>
            Container with artifact {0} already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.UnexpectedContentType(System.Object,System.Object)">
            <summary>
            Requested content type {0} but got back content type {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.NoContentReturned">
            <summary>
            The request returned no content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GzipNotSupportedOnServer">
            <summary>
            The server does not support gzipped content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.BadCompression">
            <summary>
            The file length passed in is less than or equal to the compressed stream length.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ChunksizeWrongWithContentId(System.Object)">
            <summary>
            The chunk size must be a multiple of {0} bytes when specifying a contentId.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContentIdCollision(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            There was a contentId collision for file {0} with length {1} and file {2} with length {3}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.FieldReadOnly(System.Object)">
            <summary>
            {0} is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPCREATIONERROR(System.Object,System.Object)">
            <summary>
            TF50624: A group named {0} already exists in scope {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDMEMBERCYCLICMEMBERSHIPERROR(System.Object,System.Object)">
            <summary>
            TF50233: A cyclic group containment error occurred when adding a group member. The group {1} already has the group {0} as a contained member.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPSCOPECREATIONERROR(System.Object)">
            <summary>
            TF50620: The Azure DevOps group scope {0} already exists
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDMEMBERIDENTITYALREADYMEMBERERROR(System.Object,System.Object)">
            <summary>
            TF50235: The group {0} already has a member {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEGROUPMEMBERNOTMEMBERERROR(System.Object)">
            <summary>
            TF50632: An error occurred removing the group member. There is no group member with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEADMINGROUPERROR">
            <summary>
            TF50633: This group cannot be removed. Azure DevOps requires the existence of this Administrators group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEEVERYONEGROUPERROR">
            <summary>
            TF50634: This group cannot be removed. Azure DevOps requires the existence of this Valid Users group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVESERVICEGROUPERROR">
            <summary>
            TF50635: This group cannot be removed. Azure DevOps requires the existence of this Service Accounts group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVESPECIALGROUPERROR">
            <summary>
            TF50636: This group cannot be removed. Azure DevOps requires the existence of this group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.FINDGROUPSIDDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF50258: An error occurred finding the group. There is no group with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPRENAMEERROR(System.Object)">
            <summary>
            TF50616: Error renaming group, a group named {0} already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPSCOPEDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF50620: The Azure DevOps identity scope {0} does not exist
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundMessage(System.Object)">
            <summary>
            TF14045: The identity with type &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundWithDescriptor(System.Object,System.Object)">
            <summary>
            TF14045: The identity with type &apos;{0}&apos; and identifier &apos;{1}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundSimpleMessage">
            <summary>
            TF14045: The identity could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundWithTfid(System.Object)">
            <summary>
            TF14045: The identity with TeamFoundationId {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundWithName(System.Object)">
            <summary>
            TF14045: The identity with name {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundInCollection(System.Object)">
            <summary>
            The identity with name {0} is not in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameAlreadyInUseError(System.Object)">
            <summary>
            TF400815: The identity account name &apos;{0}&apos; is already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameCollisionRepairFailedError(System.Object)">
            <summary>
            TF402001: Support will be required to repair this account. An attempt to repair an account name collision for identity &apos;{0}&apos; failed and cannot be completed automatically.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameCollisionRepairUnsafeError(System.Object)">
            <summary>
            TF402002: Support will be required to repair this account. An attempt to repair an account name collision for identity &apos;{0}&apos; is unsafe and cannot be completed automatically.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAliasAlreadyInUseError(System.Object)">
            <summary>
            The identity alias &apos;{0}&apos; is already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidNameNotRecognized(System.Object)">
            <summary>
            TF200041: You have specified a name, {0}, that contains character(s) that are not recognized. Specify a name that only contains characters that are supported by the database collation setting and try again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityMapReadOnlyException">
            <summary>
            TF401012: The identity map cannot be accessed while the collection is detached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNamesAlreadyInUseError(System.Object,System.Object)">
            <summary>
            TF400816: {0} identity account names including &apos;{1}&apos; are already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidServiceIdentityName(System.Object)">
            <summary>
            TF400325: Service identities are limited to a maximum of 200 characters, and may only contain alpha numeric, dash, and space characters. The name &apos;{0}&apos; is not a valid service identity name.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.AccountPreferencesAlreadyExist">
            <summary>
            TF400843: Organization preferences have already been set. You can only set the preferences for language, culture, and time zone when the organization is created, and these preferences cannot be changed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDGROUPMEMBERILLEGALINTERNETIDENTITY(System.Object)">
            <summary>
            TF400448: Internet identities cannot be added to this server. Unable to add {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDGROUPMEMBERILLEGALWINDOWSIDENTITY(System.Object)">
            <summary>
            TF400447: Windows users cannot be added to this server. Unable to add {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDPROJECTGROUPTPROJECTMISMATCHERROR(System.Object,System.Object)">
            <summary>
            TF50375: Project group &apos;{1}&apos; cannot be added to group &apos;{0}&apos;, it is from a different project.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.CANNOT_REMOVE_SERVICE_ACCOUNT">
            <summary>
            TF50248: You cannot remove the service account from the Service Accounts group.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITYDOMAINDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF246076: No Azure DevOps identity domain exists with the following security identifier (SID): {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITYDOMAINMISMATCHERROR(System.Object,System.Object)">
            <summary>
            TF50621: The Azure DevOps group that you wish to manage is not owned by service host {0}, it is owned by {1}. Please target your request at the correct host.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityProviderUnavailable(System.Object,System.Object)">
            <summary>
            TF246104: The identity provider for type {0}, identifier {1} is unavailable.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITY_SYNC_ERROR(System.Object)">
            <summary>
            Sync error for identity: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IllegalIdentityException(System.Object)">
            <summary>
            TF10158: The user or group name {0} contains unsupported characters, is empty, or too long.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.MODIFYEVERYONEGROUPEXCEPTION">
            <summary>
            TF50618: The Azure DevOps Valid Users group cannot be modified directly.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.NOT_APPLICATION_GROUP">
            <summary>
            TF56044: The identity you are attempting to edit is not an application group.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.NOT_A_SECURITY_GROUP(System.Object)">
            <summary>
            TF50619: The group {0} is not a security group and cannot be added to Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVENONEXISTENTGROUPERROR(System.Object)">
            <summary>
            TF50265: An error occurred removing the group. There is no group with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.RemoveSelfFromAdminGroupError(System.Object)">
            <summary>
            TF400571: You cannot remove yourself from the Administrators group. This is a safeguard to prevent an enterprise locking themselves out of a deployment or project collection. Please have another administrator remove your membership. Alternatively you can disable the safeguard by setting {0} to false in the TF registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDPROJECTGROUPTOGLOBALGROUPERROR(System.Object,System.Object)">
            <summary>
            TF400031: You cannot add the project group {0} to the global group {1}. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.DynamicIdentityTypeCreationNotSupported">
            <summary>
            TF50645: Dynamic creation of identity types is no longer supported. Please check that the type of the identity you are trying to create is supported. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.TooManyResultsError">
            <summary>
            TF400048: The query was aborted because it returned too many results. Please apply additional filters to reduce the size of the resultset returned.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IncompatibleScopeError(System.Object,System.Object)">
            <summary>
            TF400049: Group cannot be created in the requested scope {1} since the requested scope is not within the root scope {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidIdentityIdTranslations">
            <summary>
            VS401248: New translations have a record that may corrupt the existing translation data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.MultipleIdentitiesFoundError(System.Object,System.Object)">
            <summary>
            Multiple identities found matching &apos;{0}&apos;. Please specify one of the following identities:{1}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityIdTranslationsAreMigrated">
            <summary>
            Identity id translations are migrated to collection partition.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidGetDescriptorRequestWithLocalId(System.Object)">
            <summary>
            Input parameter &apos;{0}&apos; is not a valid local id.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityMaterializationFailedMessage(System.Object)">
            <summary>
            VS403283: Could not add user &apos;{0}&apos; at this time.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityDescriptorNotFoundWithMasterId(System.Object)">
            <summary>
            Identity descriptor for master id &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityDescriptorNotFoundWithLocalId(System.Object)">
            <summary>
            Identity descriptor for local id &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.TooManyRequestedItemsError">
            <summary>
            TF400049: The request was aborted because it contained too many requested items.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.TooManyRequestedItemsErrorWithCount(System.Object,System.Object)">
            <summary>
            TF400049: The request was aborted because it contained too many requested items {0}, maximum allowed is {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidIdentityKeyMaps">
            <summary>
            VS401249: New identity key maps have a record that may corrupt the existing key map data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvitationPendingMessage(System.Object,System.Object)">
             <summary>
             {0} = account name, {1} = AAD organization name
            
             VS403318: {0} has not accepted the invitation to the {1} organization.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ShouldBePersonalAccountMessage">
            <summary>
            VS403362: Your work or school account does not have access to this resource, but your personal account does.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ShouldCreatePersonalAccountMessage">
            <summary>
            VS403408: The VSTS account you are trying to access only allows Microsoft Accounts. Please create a Microsoft Account with a different email address and ask your administrator to invite the new Microsoft Account.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ShouldBeWorkAccountMessage">
            <summary>
            VS403363: Your personal account does not have access to this resource, but your work or school account does.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundInCurrentDirectory">
            <summary>
            The identity could not be found in the current directory.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidIdentityIdException(System.Object)">
            <summary>
            The identity ID is invalid for identity: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidIdentityDescriptorException(System.Object)">
            <summary>
            The identity descriptor is invalid for identity: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.RestoreGroupScopeValidationError(System.Object)">
            <summary>
            Restore group scope validation error: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.AccountOwnerCannotBeRemovedFromGroup(System.Object)">
            <summary>
            Current account owner is not allowed to be removed from {0} group. Please change the account owner and try again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ProjectCollectionAdministrators">
            <summary>
            Project Collection Administrators
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.CannotEditChildrenOfNonGroup(System.Object)">
            <summary>
            VS403339: Cannot add or remove child from graph subject with descriptor &apos;{0}&apos; because it is not a group.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.EmptySubjectDescriptorNotAllowed(System.Object)">
            <summary>
            VS403350: The empty subject descriptor is not a valid value for parameter &apos;{0}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.WellKnownSidNotAllowed(System.Object)">
            <summary>
            VS403350: Well-known SIDs are not valid for the parameter &apos;{0}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.GraphMembershipNotFound(System.Object,System.Object)">
            <summary>
            VS403328: The graph membership for member descriptor &apos;{0}&apos; and container descriptor &apos;{1}&apos; could not be found. You may need to create this membership in the enclosing enterprise or organization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.GraphSubjectNotFound(System.Object)">
            <summary>
            VS403325: The graph subject with descriptor &apos;{0}&apos; could not be found. You may need to create the subject in the enclosing enterprise, or add organization-level memberships to make a subject in the enterprise visible in the enclosing organization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.InvalidGraphLegacyDescriptor(System.Object)">
            <summary>
            VS860018: The provided legacy descriptor &apos;{0}&apos; is not a valid legacy descriptor for this end point.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.InvalidGraphMemberCuid(System.Object)">
            <summary>
            VS403323: Cannot find graph member storage key for cuid: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.InvalidGraphMemberStorageKey(System.Object)">
            <summary>
            VS403324: Cannot find graph member cuid for storage key {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.InvalidGraphSubjectDescriptor(System.Object)">
            <summary>
            VS860021: The provided descriptor &apos;{0}&apos; is not a valid graph subject descriptor for this end point.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.StorageKeyNotFound(System.Object)">
            <summary>
            VS403369: The storage key for descriptor &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.SubjectDescriptorNotFoundWithIdentityDescriptor(System.Object)">
            <summary>
            VS403370: The subject descriptor for identity descriptor &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.SubjectDescriptorNotFoundWithStorageKey(System.Object)">
            <summary>
            VS403368: The subject descriptor for storage key &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.IdentifierLengthOutOfRange">
            <summary>
            Given identifier length is out of range of valid values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.GraphResources.SubjectTypeLengthOutOfRange">
            <summary>
            Given subject type length is out of range of valid values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ActorValidationException">
            <summary>
            The ActorToken within the JsonWebToken is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.DeserializationException">
            <summary>
            Failed to deserialize the JsonWebToken object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.DigestUnsupportedException(System.Object,System.Object)">
            <summary>
            JsonWebTokens support only the {0} Digest, but the signing credentials specify {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.EncodedTokenDataMalformed">
            <summary>
            The encoded data in the JsonWebToken is malformed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidAudienceException">
            <summary>
            The audience of the token is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidClockSkewException">
            <summary>
            The value supplied for ClockSkewInSeconds is invalid. It must be a positive integer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidIssuerException">
            <summary>
            The issuer of the JsonWebToken is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidSignatureAlgorithm">
            <summary>
            The signature algorithm in the JsonWebToken header is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidValidFromValueException">
            <summary>
            The ValidFrom value in not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidValidToValueException">
            <summary>
            The ValidTo value is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ProviderTypeUnsupported(System.Object)">
            <summary>
            JsonWebTokens do not support crypto provider of type {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SerializationException">
            <summary>
            Failed to serialize the JsonWebToken object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureAlgorithmUnsupportedException(System.Object)">
            <summary>
            JsonWebTokens do not support the supplied signature algorithm: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureNotFound">
            <summary>
            The JsonWebToken is not signed, or the signature has not been found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureValidationException">
            <summary>
            The signature is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SymmetricSecurityKeyNotFound">
            <summary>
            The supplied Signing Credential is not a SymmetricSigningCredential and does not match the Signature Algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenExpiredException">
            <summary>
            The token is expired.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenNotYetValidException">
            <summary>
            The token is not yet valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ValidFromAfterValidToException">
            <summary>
            The time represented by the ValidFrom value come after the time represented by the ValidTo value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SigningTokenExpired">
            <summary>
            The supplied signing token has expired.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SigningTokenNoPrivateKey">
            <summary>
            The signing token has no private key and cannot be used for signing.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SigningTokenKeyTooSmall">
            <summary>
            The key size of the supplied signing token is too small. It must be at least 2048 bits.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenScopeNotAuthorizedException">
            <summary>
            The token scope is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.CannotChangeParentDefinition(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF401225: Cannot change parent definition. Service type {0}, identifier {1}, parent service type {2}, identifier {3}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.ParentDefinitionNotFound(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF401226: Cannot save service definition with type {0} identifier {1} because parent definition with type {2} identifier {3} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.MultiplePrimaryNameResolutionEntriesError(System.Object)">
            <summary>
            The name resolution entry update contains multiple IsPrimary entries for Value: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.NameResolutionResources.NameResolutionEntryAlreadyExistsError(System.Object,System.Object,System.Object)">
            <summary>
            A name resolution entry already exists for the Name but with a different Value. Name: {0}. Value: {1}. ConflictingValue: {2}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PartitioningResources.PartitionContainerMustBeOfflineError(System.Object)">
            <summary>
            The partition container with Id &apos;{0}&apos; must be offline before deleting.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.CannotReplaceNonExistantValue(System.Object)">
            <summary>
            Attempted to replace a value that does not exist at path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.IndexOutOfRange(System.Object)">
            <summary>
            Index out of range for path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InsertNotSupported(System.Object)">
            <summary>
            {0} does not support insert.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidOperation">
            <summary>
            Unrecognized operation type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidValue(System.Object,System.Object)">
            <summary>
            Value {0} does not match the expected type {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.MoveCopyNotImplemented">
            <summary>
            Move/Copy is not implemented.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.NullOrEmptyOperations">
            <summary>
            At least one operation is required for Apply.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathCannotBeNull">
            <summary>
            Path cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathInvalidEndValue">
            <summary>
            Path cannot end with /.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathInvalidStartValue">
            <summary>
            Path is required to start with a / or be &quot;&quot;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TargetCannotBeNull">
            <summary>
            Evaluated target should not be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestFailed(System.Object,System.Object,System.Object)">
            <summary>
            Test Operation for path {0} failed, value {1} was not equal to test value {2}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestNotImplementedForDictionary">
            <summary>
            Test is not implemented for Dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestNotImplementedForList">
            <summary>
            Test is not implemented for List.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.UnableToEvaluatePath(System.Object)">
            <summary>
            Unable to evaluate path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.ValueCannotBeNull">
            <summary>
            Value cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.ValueNotNull">
            <summary>
            Remove requires Value to be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.JsonPatchNull">
            <summary>
            You must pass a valid patch document in the body of the request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidFieldName(System.Object)">
            <summary>
            Replace requires {0} to have existing value. Try Add operation instead.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.InvalidAclStoreException(System.Object,System.Object)">
            <summary>
            The ACL store with identifier &apos;{1}&apos; was not found in the security namespace &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.InvalidPermissionsException(System.Object,System.Object)">
             <summary>
             {0}: NamespaceId; {1}: SystemBitMask
            
             VS403284: Invalid operation. Unable to set bits &apos;{1}&apos; in security namespace &apos;{0}&apos; as it is reserved by the system.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.UnsupportedContentType(System.Object)">
            <summary>
            The server returns content type {0}, which is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.DownloadCorrupted">
            <summary>
            The download file is corrupted. Get the file again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.SerializingPhrase">
            <summary>
            being serialized
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.DeserializationCorrupt">
            <summary>
            The data presented for deserialization to the PropertiesCollection is corrupt.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ClientResourceVersionNotSupported(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The server does not support resource {0} at API version {1}. The minimum supported version on {2} is {3}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ResourceNotFoundOnServerMessage(System.Object,System.Object)">
            <summary>
            API resource location {0} is not registered on {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ResourceNotRegisteredMessage(System.Object)">
            <summary>
            API resource location {0} is not registered on this server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ContainerIdMustBeGreaterThanZero">
            <summary>
            The container ID must be greater than zero.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.FullyQualifiedLocationParameter">
            <summary>
            The value of the location parameter cannot be null if the RelativeToSetting is &apos;FullyQualified&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.RelativeLocationMappingErrorMessage">
            <summary>
            TF205038: You cannot add location mappings to service definitions that are not part of the FullyQualified type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidAccessMappingLocationServiceUrl">
            <summary>
            TF205035: The access mapping is not valid and cannot be registered. The location service URL cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ServiceDefinitionDoesNotExist(System.Object,System.Object)">
            <summary>
            The service definition with service type &apos;{0}&apos; and identifier &apos;{1}&apos; does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ServiceDefinitionWithNoLocations(System.Object)">
            <summary>
            TF205046: The service with the following type does not have a location mapping: {0}. You must provide at least one location in order to configure locations for an external service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.JsonParseError(System.Object)">
            <summary>
            Unable to parse JSON in: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MissingRequiredParameterMessage(System.Object)">
            <summary>
            A required parameter {0} was not specified for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ProxyAuthenticationRequired">
            <summary>
            SP324097: Your network proxy requires authentication.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidApiVersionStringMessage(System.Object)">
            <summary>
            Invalid api version string: &quot;{0}&quot;. Api version string must be in the format: {{Major}}.{{Minor}}[-preview[.{{ResourceVersion}}]].
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ApiResourceDuplicateIdMessage(System.Object)">
            <summary>
            The following location id has already been registered: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ApiResourceDuplicateRouteNameMessage(System.Object)">
            <summary>
            The following route name has already been registered: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.RequestContentTypeNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            The request indicated a Content-Type of &quot;{0}&quot; for method type &quot;{1}&quot; which is not supported. Valid content types for this method are: {2}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidReferenceLinkFormat">
            <summary>
            ReferenceLinks is a dictionary that contains either a single ReferenceLink or an array of ReferenceLinks.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.PreviewVersionNotSuppliedMessage(System.Object)">
            <summary>
            The requested version &quot;{0}&quot; of the resource is under preview. The -preview flag must be supplied in the api-version for such requests. For example: &quot;{0}-preview&quot;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.VersionNotSuppliedMessage(System.Object)">
            <summary>
            No api-version was supplied for the &quot;{0}&quot; request. The version must be supplied either as part of the Accept header (e.g. &quot;application/json; api-version=1.0&quot;) or as a query parameter (e.g. &quot;?api-version=1.0&quot;).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidEndBlock(System.Object)">
            <summary>
            Unexpected end block &apos;{0}&apos; before any start block
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateMissingBlockHelper(System.Object,System.Object)">
            <summary>
            Block Helper &apos;{0}&apos; not found for expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateMissingHelper(System.Object,System.Object)">
            <summary>
            Helper &apos;{0}&apos; not found for expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateNonMatchingEndBlock(System.Object,System.Object)">
            <summary>
            End block &apos;{0}&apos; does not match start block &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateBraceCountMismatch(System.Object)">
            <summary>
            The expression &apos;{0}&apos; is invalid due to mismatching start and end brace count.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidEndBraces(System.Object,System.Object)">
            <summary>
            Invalid end braces before start braces at position &apos;{0}&apos; of template &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidStartBraces(System.Object,System.Object,System.Object)">
            <summary>
            Invalid start braces within template expression &apos;{0}&apos; at position {1} of template &apos;{2}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidEscapedStringLiteral(System.Object,System.Object)">
            <summary>
            Invalid escape character in string literal &apos;{0}&apos; within template expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateUnterminatedStringLiteral(System.Object,System.Object)">
            <summary>
            Unterminated string literal &apos;{0}&apos; within template expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidNumericLiteral(System.Object,System.Object)">
            <summary>
            Invalid numeric literal &apos;{0}&apos; within template expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationNotFoundException(System.Object)">
            <summary>
            Failed to find operation &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationPluginNotFoundException(System.Object)">
            <summary>
            Failed to find operation plugin &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationPluginWithSameIdException(System.Object)">
            <summary>
            Found several plugins for the id &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationPluginNoPermission(System.Object,System.Object)">
            <summary>
            The operation &apos;{1}&apos; for the plugin &apos;{0}&apos; doesn&apos;t have permission.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationUpdateException(System.Object)">
            <summary>
            Operation update for operation &apos;{0}&apos; did not complete successfully.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.CollectionDoesNotExistException(System.Object)">
            <summary>
            VS402844: Collection with name {0} does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MissingCloseInlineMessage">
            <summary>
            Missing close expression for inline content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MissingEndingBracesMessage(System.Object)">
            <summary>
            No ending braces for expression &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.NestedInlinePartialsMessage">
            <summary>
            An inline partial cannot contain another inline partial
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GetServiceArgumentError(System.Object)">
            <summary>
            TF400776: &apos;{0}&apos; must be a non-abstract class with a public parameterless or default constructor in order to use it as parameter &apos;T&apos; in GetService&lt;T&gt;().
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ExtensibleServiceTypeNotRegistered(System.Object)">
            <summary>
            The service type &apos;{0}&apos; does not have a registered implementation or default implementation attribute.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ExtensibleServiceTypeNotValid(System.Object,System.Object)">
            <summary>
            &apos;{1}&apos; does not extend or implement the service type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ServerDataProviderNotFound(System.Object)">
            <summary>
            The server data provider for service owner {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ClientCertificateMissing(System.Object)">
            <summary>
            No certificate capable of client authentication was found in the certificate store with thumbprint {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.SmartCardMissing(System.Object)">
            <summary>
            The smart card containing the private key for the certificate with thumbprint {0} is not available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ClientCertificateNoPermission(System.Object)">
            <summary>
            The certificate with thumbprint {0} could not be used for client authentication. The current user may not have permission to use the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ClientCertificateErrorReadingStore(System.Object)">
            <summary>
            An exception occurred while loading client authentication certificates from the certificate store: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.CannotAuthenticateAsAnotherUser(System.Object,System.Object)">
            <summary>
            We were unable to establish the connection because it is configured for user {0} but you attempted to connect using user {1}. To connect as a different user perform a switch user operation. To connect with the configured identity just attempt the last operation again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidPartialReference(System.Object)">
            <summary>
            Invalid partial reference: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.CannotGetUnattributedClient(System.Object)">
            <summary>
            The current VssConnection does not support calling GetClient for this client type: &apos;{0}&apos;. Instead, use the GetClient overload which accepts a serviceIdentifier parameter to specify the intended target service for the given client.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.UnknownEntityType(System.Object)">
            <summary>
            Unknown entityType {0}. Cannot parse.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GraphGroupMissingRequiredFields">
            <summary>
            Must have exactly one of originId, principlaName or displayName set.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GraphUserMissingRequiredFields">
            <summary>
            Must have exactly one of originId or principlaName set.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GraphServicePrincipalMissingRequiredFields">
            <summary>
            VS860015: OriginId must be set.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheEvaluationResultLengthExceeded(System.Object)">
            <summary>
            The maximum evaluation result length has been exceeded. The maximum allowed length is {0:N0} characters.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInlinePartialsNotAllowed">
            <summary>
            Inline partial expressions are not allowed
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateMaxDepthExceeded(System.Object)">
             <summary>
             This limits the depth that expressions can be nested within expressions.
            
             The maximum expression depth has been exceeded. The maximum allowed expression depth is {0}.
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.UnexpectedTokenType">
            <summary>
            Unexpected token type. Only JObject, JArrays, Guid, String and Boolean are supported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ApiVersionOutOfRange(System.Object,System.Object)">
            <summary>
            The requested REST API version of {0} is out of range for this server. The latest REST API version this server supports is {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ApiVersionOutOfRangeForRoute(System.Object,System.Object)">
            <summary>
            The request matched route {1}, but the requested REST API version {0} was outside the valid version range for this route.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ApiVersionOutOfRangeForRoutes(System.Object,System.Object)">
            <summary>
            The following routes matched, but the requested REST API version {0} was outside the valid version ranges: {1}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.UnsafeCrossOriginRequest(System.Object)">
            <summary>
            A cross-origin request from origin &quot;{0}&quot; is not allowed when using cookie-based authentication. An authentication token needs to be provided in the Authorization header of the request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.AppSessionTokenException(System.Object)">
             <summary>
             {0} = Error type
            
             Error issuing app session token: {0}
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.SessionTokenException(System.Object)">
             <summary>
             {0} = Error type
            
             Error issuing session token: {0}
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.BlobCopyRequestNotFoundException(System.Object)">
            <summary>
            The blob copy with id &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.DatabaseMigrationNotFoundException(System.Object)">
            <summary>
            The migration with id &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountId">
            <summary>
            Identifier for an Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.NamespaceId">
            <summary>
            Namespace for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountUri">
            <summary>
            Uri for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountName">
            <summary>
            Name for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.OrganizationName">
            <summary>
            Organization that created the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountType">
            <summary>
            Type of account: Personal, Organization
            </summary>
            Emit default value because it is an enum...
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountOwner">
            <summary>
            Owner of account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.CreatedBy">
            <summary>
            Who created the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.CreatedDate">
            <summary>
            Date account was created
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountStatus">
            <summary>
            Current account status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.StatusReason">
            <summary>
            Reason for current status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.LastUpdatedBy">
            <summary>
            Identity of last person to update the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.Revision">
            <summary>
            Current revision of the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.Properties">
            <summary>
            Extended properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.LastUpdatedDate">
            <summary>
            Date account was last updated
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Account.Account.GetProperty(System.String)">
            <summary>
            Property accessor. Will throw if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Account.Account.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountEqualityComparer">
            <summary>
            IEqualityComparer for Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountNameAvailability.StatusReason">
            <summary>
            Reason for current status
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountRegion">
            <summary>
            Account region metadata
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountRegion.LocationName">
            <summary>
            Azure location name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountRegion.DisplayName">
            <summary>
            Display name of the account region
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountRegion.IsDefault">
            <summary>
            Whether the region is default or not
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.AccountId">
            <summary>
            Identifier for an Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.UserId">
            <summary>
            The user identity to be associated with the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.CreationDate">
            <summary>
            Date account was created
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.UserStatus">
            <summary>
            Current account status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.LicenseSource">
            <summary>
            What is the license for this user MSDN, VSPro, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.LastUpdated">
            <summary>
            Date account was last updated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.ServiceRights">
            <summary>
            What are the users service rights
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Enabled">
            <summary>
            This hosting account is active and assigned to a customer.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Disabled">
            <summary>
            This hosting account is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Deleted">
            <summary>
            This account is part of deletion batch and scheduled for deletion.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Moved">
            <summary>
            This account is not mastered locally and has physically moved.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Active">
            <summary>
            User has signed in at least once to the VSTS account 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Disabled">
            <summary>
            User cannot sign in; primarily used by admin to temporarily remove a user due to absence or license reallocation
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Deleted">
            <summary>
            User is removed from the VSTS account by the VSTS account admin 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Pending">
            <summary>
            User is invited to join the VSTS account by the VSTS account admin, but has not signed up/signed in yet 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Expired">
            <summary>
            User can sign in; primarily used when license is in expired state and we give a grace period
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.PendingDisabled">
            <summary>
            User is disabled; if reenabled, they will still be in the Pending state
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountLicenseSource.None">
            <summary>
            The following correspond to various license sources
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountLicenseSource.VsEarlyAdopter">
            <summary>
            Early adopters may get a special license
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountServiceRights">
            <summary>
            the defined service rights that can be granted to a user.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotFoundException">
            <summary>
            An exception thrown when an account could not be found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountMarkedForDeletionException">
            <summary>
            An exception thrown when an account has been marked for deletion
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotMarkedForDeletionException">
            <summary>
            An exception thrown when an account has not been marked for deletion
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountHostMappingNotFoundException">
            <summary>
            An exception thrown when an account could not be found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountUserNotFoundException">
            <summary>
            thrown when trying to remove a user license that does not exist from an account
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountAlreadyLinkedException">
            <summary>
            Thrown when attempting to link an account to an AAD tenant when the account is already linked.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotLinkedException">
            <summary>
            Thrown when attempting to unlink an account that is not linked to any tenant.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountStateNotValidException">
            <summary>
            Thrown when attempting to link/unlink an account that is not in a valid state as per IMS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.UnableToDeleteAzureLinkedAccountException">
            <summary>
            Thrown when an account a users attempts to softdelete an account that is linked to an azure subscription.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AadTenantNotFoundException">
            <summary>
            Thrown when the target AAD tenant does not exist
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient.TranslatedExceptions">
            <summary>
            Exceptions for account errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Audit.AuditScopeType">
            <summary>
            The type of scope from where the event is originated
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Audit.AuditScopeType.Unknown">
            <summary>
            The scope is not known or has not been set
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Audit.AuditScopeType.Deployment">
            <summary>
            Deployment
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Audit.AuditScopeType.Enterprise">
            <summary>
            Enterprise
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Audit.AuditScopeType.Organization">
            <summary>
            Organization
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Audit.AuditScopeType.Project">
            <summary>
            Project
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.#ctor(Microsoft.VisualStudio.Services.Audit.AuditLogEntry)">
            <summary>
            Creates a new AuditLogEntry
            </summary>
            <param name="entry">AuditLogEntry</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.Id">
            <summary>
            EventId, should be unique
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.CorrelationId">
            <summary>
            This allows us to group things together, like one user action that caused a cascade of event entries (project creation).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActivityId">
            <summary>
            ActivityId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActorCUID">
            <summary>
            The Actor's CUID
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActorUserId">
            <summary>
            The Actor's User Id (if actor is a user)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActorClientId">
            <summary>
            The Actor's Client Id (if actor is a service principal)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActorUPN">
            <summary>
            The Actor's UPN
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.AuthenticationMechanism">
            <summary>
            Type of authentication used by the author
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.Timestamp">
            <summary>
            The time when the event occurred in UTC
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ScopeType">
            <summary>
            The type of the scope (Organization is only scope currently supported)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ScopeId">
            <summary>
            The organization Id (Organization is the only scope currently supported)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ProjectId">
            <summary>
            When specified, the id of the project this event is associated to
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.IPAddress">
            <summary>
            IP Address where the event was originated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.UserAgent">
            <summary>
            The user agent from the request
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ActionId">
            <summary>
            The action if for the event, i.e Git.CreateRepo, Project.RenameProject
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.Data">
            <summary>
            External data such as CUIDs, item names, etc.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Audit.AuditLogEntry.ToString">
            <summary>
            Returns a string representation of the object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Aad.AadGroup">
            <summary>
            Immutable data transfer object for AAD group details.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadGroup.Description">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadGroup.MailNickname">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadGroup.Mail">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadGroup.OnPremisesSecurityIdentifier">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Aad.AadGroup.Factory">
            <summary>
            Creates immutable <see cref="T:Microsoft.VisualStudio.Services.Aad.AadGroup"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Aad.AadGroup.Factory.Create">
            <summary>
            Creates an <see cref="T:Microsoft.VisualStudio.Services.Aad.AadGroup"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Aad.AadObject">
            <summary>
            Immutable data transfer object for AAD objects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadObject.DisplayName">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Aad.AadUser">
            <summary>
            Immutable data transfer object for AAD user details.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.Mail">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.OtherMails">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.MailNickname">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.UserPrincipalName">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.SignInAddress">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.HasThumbnailPhoto">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.JobTitle">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.Department">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.PhysicalDeliveryOfficeName">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.Manager">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.DirectReports">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.UserType">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.UserState">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.Surname">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.OnPremisesSecurityIdentifier">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.TelephoneNumber">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.Country">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Aad.AadUser.UsageLocation">
            <summary>
            This could be null.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Aad.AadUser.Factory">
            <summary>
            Creates immutable <see cref="T:Microsoft.VisualStudio.Services.Aad.AadUser"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Aad.AadUser.Factory.Create">
            <summary>
            Creates an <see cref="T:Microsoft.VisualStudio.Services.Aad.AadUser"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationHttpContext.ClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationHttpContext.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.IdentityId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.MessageReceiver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.PrefetchCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.MaxRetriesCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.UseAmqpTransportType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ReceiveOperationTimeoutInMinutes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceBusRetryDelayMilliSecounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceBusLongRetryDelayMilliSecounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureTokenExpiration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileAttributeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileCoreAttributeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.UserUpdate">
            <summary>
            User metadata update
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext.IdentityId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationException.IsRetryable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ClientNotification.Client.ClientNotificationHttpClientBase.GetSubscriptionAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition">
            <summary>
            Encapsulates Azure specific plan structure, using a publisher defined publisher name, offer name, and plan name.
            These are all specified by the publisher and can vary from other meta data we store about the extension internally
            therefore need to be tracked separately for purposes of interacting with Azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.MeterId">
            <summary>
            The meter id which identifies the offer meter this plan is associated with
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.PlanId">
            <summary>
            The id of the plan, which is usually in the format "{publisher}:{offer}:{plan}"
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.Publisher">
            <summary>
            The publisher of the plan as defined by the publisher in Azure
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.OfferName">
            <summary>
            The offer / product name as defined by the publisher in Azure
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.OfferId">
            <summary>
            The offer / product name as defined by the publisher in Azure
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.PlanName">
            <summary>
            The plan name as defined by the publisher in Azure
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.PlanVersion">
            <summary>
            The version string which optionally identifies the version of the plan
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.Quantity">
            <summary>
            The number of users associated with the plan as defined in Azure
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.IsPublic">
            <summary>
            Determines whether or not this plan is visible to all users
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.PublisherName">
            <summary>
            get/set publisher name
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition.Equals(Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition,System.Boolean)">
            <summary>
            Determines whether the specified <see cref="T:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition"/> is equal to the current <see cref="T:Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition"/>.
            </summary>
            <param name="plan">The object to compare with the current object.</param>
            <param name="compareForUpdate">Whether to compare for the purposes of updating an existing AzureOfferPlanDefinition. If false, all properties are compared.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AzureRegion">
            <summary>
            Represents an azure region, used by ibiza for linking accounts
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.Id">
            <summary>
            Unique Identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.DisplayName">
            <summary>
            Display Name of the azure region. Ex: North Central US.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.RegionCode">
            <summary>
            Region code of the azure region. Ex: NCUS.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.AzureRegion.GetHashCode">
            <summary>
            Returns unique hash code associated with this object. Calls base object.GetHashCode().
            </summary>
            <returns>Unique integer</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.AzureRegion.Equals(System.Object)">
            <summary>
            Returns true if all fields of the target AzureRegion are equal to this AzureRegion object
            </summary>
            <param name="obj">Target Azure Region</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.CommittedQuantity">
            <summary>
            Quantity for current billing cycle
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.CurrentQuantity">
            <summary>
            Quantity for next billing cycle
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.PreviousQuantity">
            <summary>
            Previous quantity in case of upgrade/downgrade
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.BilledQuantity">
            <summary>
            Billed quantity (prorated) passed to Azure commerce
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.IncludedQuantity">
            <summary>
            Quantity available for free
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CommerceEvent.Environment">
            <summary>
            Onpremise or hosted
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.SubscriptionId">
            <summary>
            The id of the subscription used for purchase
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.AccountName">
            <summary>
            Hosted AccountName associated with the connected server
            NOTE: As of S112, this is now the collection name. Not changed as this is exposed to client code.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.AccountId">
            <summary>
            Hosted AccountId associated with the connected server
            NOTE: As of S112, this is now the CollectionId. Not changed as this is exposed to client code.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.ServerId">
            <summary>
            OnPrem server id associated with the connected server
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.ServerName">
            <summary>
            OnPrem server associated with the connected server
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.TargetId">
            <summary>
            OnPrem target host associated with the connected server.  Typically the
            collection host id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.TargetName">
            <summary>
            OnPrem target associated with the connected server.  
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.SpsUrl">
            <summary>
            SpsUrl of the hosted account that the onrepm server has been connected to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServer.Authorization">
            <summary>
            Object used to create credentials to call from OnPrem to hosted service.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization">
            <summary>
            Provides data necessary for authorizing the connecter server using OAuth 2.0 authentication flows.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization.#ctor">
            <summary>
            Initializes a new <c>ConnectedSeverAuthorization</c> instance with default values.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization.AuthorizationUrl">
            <summary>
            Gets or sets the endpoint used to obtain access tokens from the configured token service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization.ClientId">
            <summary>
            Gets or sets the client identifier for this agent.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization.PublicKey">
            <summary>
            Gets or sets the public key used to verify the identity of this connected server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization.Clone">
            <summary>
            Creates a deep copy of the authorization data.
            </summary>
            <returns>A new <c>ConnectedServerAuthorization</c> instance copied from the current instance</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey">
            <summary>
            Represents the public key portion of an RSA asymmetric key.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey.#ctor">
            <summary>
            Initializes a new <c>ConnectedServerPublicKey</c> instance with empty exponent and modulus values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new <c>TaskAgentPublicKey</c> instance with the specified exponent and modulus values.
            </summary>
            <param name="exponent">The exponent value of the key</param>
            <param name="modulus">The modulus value of the key</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey.Exponent">
            <summary>
            Gets or sets the exponent for the public key.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey.Modulus">
            <summary>
            Gets or sets the modulus for the public key.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceStatusReason">
            <summary>
            Reason for disabled resource.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceName">
            <summary>
            Various metered resources in VSTS
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionStatus">
            <summary>
            Azure subscription status
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.VisualStudio.Services.Commerce.SubscriptionSpendingLimit" -->
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionSpendingLimit.On">
            <summary>
            The spending limit is on.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionSpendingLimit.Off">
            <summary>
            The spending limit is off.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionSpendingLimit.CurrentPeriodOff">
            <summary>
            The spending limit is off for the current period.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionAuthorizationSource.Unauthorized">
            <summary>
            User has no administrative permissions on the subscription.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionAuthorizationSource.AdminOrCoAdmin">
            <summary>
            User has administrative permissions on the subscription granted through classic admin/co-admin status.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionAuthorizationSource.Rbac">
            <summary>
            User has administrative permissions on the subscription granted through role-based access control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.SubscriptionAuthorizationSource.SpecializedLocalPermission">
            <summary>
            Has Special purchase permissions in VSTS.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.VisualStudio.Services.Commerce.SubscriptionRolebasedAccessControlSource" -->
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AzureOfferType">
            <summary>
            These are known offer types to VSTS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace">
            <summary>
            The subscription account namespace.
            Denotes the 'category' of the account.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterGroupType">
            <summary>
            Atrribute to group meters under buckets. 
            This is attribute in MeteredResource and ISubscriptionResource
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceBillingMode">
            <summary>
            The resource billing mode.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterRenewalFrequecy">
            <summary>
            Describes the Renewal frequncy of a Meter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterCategory">
            <summary>
            Defines meter categories.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OfferScope">
            <summary>
            The offer scope.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterBillingState">
            <summary>
            The meter billing state.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterState">
            <summary>
            The meter state.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OfferMeterAssignmentModel">
            <summary>
            The offer meter assignment model.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OfferMeterAssignmentModel.Explicit">
            <summary>
            Users need to be explicitly assigned.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OfferMeterAssignmentModel.Implicit">
            <summary>
            Users will be added automatically. 
            All-or-nothing model.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup">
            <summary>
            The resource renewal group.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.BillingProvider">
            <summary>
            The responsible entity/method for billing.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel.None">
            <summary>
            No service rights. The user cannot access the account
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel.Express">
            <summary>
            Default or minimum service level
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel.Advanced">
            <summary>
            Premium service level - either by purchasing on the Azure portal or by purchasing the appropriate MSDN subscription
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel.AdvancedPlus">
            <summary>
            Only available to a specific set of MSDN Subscribers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel.Stakeholder">
            <summary>
            Stakeholder service level
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.CommerceReportingEventType">
            <summary>
            Commerce event type for reporting.  
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.PurchaseRequestResponse">
            <summary>
            Type of purchase request response
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.DefaultAccessLevel">
            <summary>
            Default access level
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ICommerceEvent.CommittedQuantity">
            <summary>
            Quantity for current billing cycle
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ICommerceEvent.CurrentQuantity">
            <summary>
            Quantity for next billing cycle
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ICommerceEvent.PreviousQuantity">
            <summary>
            Previous quantity in case of upgrade/downgrade
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ICommerceEvent.BilledQuantity">
            <summary>
            Billed quantity (prorated) passed to Azure commerce
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ICommerceEvent.Environment">
            <summary>
            Onpremise or hosted
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ICommercePackage">
            <summary>
            Encapsulates the state of offer meter definitions and purchases
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MeterId">
            <summary>
            Gets or sets the meter identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingMode">
            <summary>
            Gets or sets the billing mode.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingState">
            <summary>
            Gets or sets the state of the billing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Category">
            <summary>
            Gets or sets the category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.CommittedQuantity">
            <summary>
            Gets or sets the committed quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.CurrentQuantity">
            <summary>
            Gets or sets the current quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.GalleryId">
            <summary>
            Gets or sets the gallery identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.IncludedQuantity">
            <summary>
            Gets or sets the included quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MaximumQuantity">
            <summary>
            Gets or sets the maximum quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.AbsoluteMaximumQuantity">
            <summary>
            Gets or sets the absolute maximum quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.OfferScope">
            <summary>
            Gets or sets the offer scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.PlatformMeterId">
            <summary>
            Gets or sets the platform meter identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.RenewalFrequency">
            <summary>
            Gets or sets the renewal frequency.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.TrialCycles">
            <summary>
            Gets or sets the trial cycles.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Unit">
            <summary>
            Gets or sets the unit.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.AssignmentModel">
            <summary>
            Gets or sets the user assignment model.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingStartDate">
            <summary>
            Gets or sets the billing start date.
            If TrialDays + PreviewGraceDays > then, on 'BillingStartDate' it starts the preview Grace and/or trial period.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.TrialDays">
            <summary>
            Gets or sets the trial days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.PreviewGraceDays">
            <summary>
            Gets or sets the preview grace days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingEntity">
            <summary>
            Gets or sets the responsible entity/method for billing. Determines how this meter is handled in the backend.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MinimumRequiredAccessLevel">
            <summary>
            Gets or sets the minimum required access level for the meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.IncludedInLicenseLevel">
            <summary>
            Gets or sets the Min license level the offer is free for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.FixedQuantityPlans">
            <summary>
            Gets or sets the map of named quantity varied plans, plans can be purchased that vary only in the number of users included.
            Null if this offer meter does not support named fixed quantity plans.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.IsFirstParty">
            <summary>
            Flag to identify whether the meter is First Party or Third Party
            </summary>
             <Value> 
             <c>true</c> indicates its a First Party Extension
             <c>false</c> indicates its a Third Party Extension
             </Value> 
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.AutoAssignOnAccess">
            <summary>
            Indicates whether users get auto assigned this license type duing first access.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.MeterName">
            <summary>
            The meter Name which identifies the offer meter this plan is associated with
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.PlanName">
            <summary>
            Name of the plan, which is usually in the format "{publisher}:{offer}:{plan}"
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.Region">
            <summary>
            Region price is for
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.CurrencyCode">
            <summary>
            Currency code
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.Quantity">
            <summary>
            Plan Quantity 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice.Price">
            <summary>
            Plan Price
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.OfferMeter">
            <summary>
            Gets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.RenewalGroup">
            <summary>
            Gets the renewal group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.CommittedQuantity">
            <summary>
            Quantity committed by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource.
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionId">
            <summary>
            The azure subscription id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionName">
            <summary>
            The azure subscription name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionState">
            <summary>
            The azure subscription state
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsTrialOrPreview">
            <summary>
            Gets or sets a value indicating whether this instance is trial or preview.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsPreview">
            <summary>
            Gets or sets a value indicating whether this instance is in preview.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsPurchaseCanceled">
            <summary>
            Gets the value indicating whether the puchase is canceled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsPurchasedDuringTrial">
            <summary>
            Gets the value indicating whether current meter was purchased while the meter is still in trial
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.TrialExpiryDate">
            <summary>
            Gets or sets the trial expiry date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.StartDate">
            <summary>
            Gets or sets the start date for this resource. First install date in any state.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AutoAssignOnAccess">
            <summary>
            Indicates whether users get auto assigned this license type duing first access.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.IPurchasableOfferMeter">
            <summary>
            The Purchasable offer meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IPurchasableOfferMeter.OfferMeterDefinition">
            <summary>
            Gets or sets the offer meter definition.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IPurchasableOfferMeter.MeterPricing">
            <summary>
            Gets or sets the meter pricing (GraduatedPrice)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IPurchasableOfferMeter.EstimatedRenewalDate">
            <summary>
            Gets or sets the estimated renewal date.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount">
            <summary>
            The subscription account.
            Add Sub Type and Owner email later.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountId">
            <summary>
            Gets or sets the account identifier. Usually a guid.
            </summary>
            <value>
            The account identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountHostType">
            <summary>
            Gets or sets the account host type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountName">
            <summary>
            Gets or sets the name of the account.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionId">
            <summary>
            Gets or sets the subscription identifier.
            </summary>
            <value>
            The subscription identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionStatus">
            <summary>
            Gets or sets the subscription status.
            </summary>
            <value>
            The subscription status.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ResourceGroupName">
            <summary>
            Gets or sets the resource group.
            </summary>
            <value>
            The resource group.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.GeoLocation">
            <summary>
            Gets or sets the geo location.
            </summary>
            <value>
            The geo location.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.Locale">
            <summary>
            Gets or sets the subscription locale
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.RegionDisplayName">
            <summary>
            Gets or sets the subscription address country display name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ServiceUrls">
            <summary>
            A dictionary of service urls, mapping the service owner to the service owner url
            </summary>
            <value>
            Urls which can be used to access account apis
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountTenantId">
            <summary>
            Gets or sets the account tenantId.
            </summary>
            <value>
            If the account is not linked to a tenant this willl be Guid.Empty
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsAccountOwner">
            <summary>
            Gets or sets a value indicating whether the calling user identity owns or is a PCA of the account.
            </summary>
            <value>
              <c>true</c> if user owns or is a PCA of the account otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ResourceName">
            <summary>
            Gets or sets the azure resource name.
            </summary>
            <value>
            The resource name representing the link between an account and subscription.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionName">
            <summary>
            Gets or sets the azure subscription name
            </summary>
            <value>
            This represent display name of azure subscription
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsEligibleForPurchase">
            <summary>
            Gets or set the flag to enable purchase via subscription. 
            </summary>
            <value>
            Flag indicate if purchase can be happen against billing entity for given (gallery) item
            This is run time property 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsPrepaidFundSubscription">
            <summary>
            get or set IsPrepaidFundSubscription
            </summary>
            <value>
            Flag indicates if pre paid fund warning message needs to display for subscription 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsPricingAvailable">
            <summary>
            get or set IsPricingPricingAvailable
            </summary>
            <value>
            Flag indicates if meter pricing needs to display for subscription 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionOfferCode">
            <summary>
            get or set subscription offer code
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.OfferType">
            <summary>
            Gets or sets the Offer Type of this subscription.
            A value of null means, this value has not been evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionTenantId">
             <summary>
            get or set tenant id of subscription 
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionObjectId">
             <summary>
            get or set object id of subscruption admin 
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.FailedPurchaseReason">
             <summary>
            get or set purchase Error Reason
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.Name">
            <summary>
            Gets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.CommittedQuantity">
            <summary>
            Quantity committed by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate">
            <summary>
            Represents the aggregated usage of a resource over a time span
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.StartTime">
            <summary>
            Gets or sets start time of the aggregated value, inclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.EndTime">
            <summary>
            Gets or sets end time of the aggregated value, exclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.Resource">
            <summary>
            Gets or sets resource that the aggregated value represents
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.Value">
            <summary>
            Gets or sets quantity of the resource used from start time to end time
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MeterId">
            <summary>
            Meter Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.PlatformMeterId">
            <summary>
            Gets or sets the identifier representing this meter in commerce platform
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.GalleryId">
            <summary>
            Gets or sets Gallery Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Name">
            <summary>
            Name of the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.RenewalFrequency">
            <summary>
            Gets or sets the Renewak Frequency.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingMode">
            <summary>
            Gets or sets the billing mode of the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Category">
            <summary>
            Category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.OfferScope">
            <summary>
            Gets or sets the offer scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingState">
            <summary>
            Gets or sets the state of the billing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Unit">
            <summary>
            Measuring unit for this meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.AssignmentModel">
            <summary>
            Gets or sets the user assignment model.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingStartDate">
            <summary>
            Gets or sets the billing start date.
            If TrialDays + PreviewGraceDays > then, on 'BillingStartDate' it starts the preview Grace and/or trial period.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.TrialDays">
            <summary>
            Gets or sets the trial days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.PreviewGraceDays">
            <summary>
            Gets or sets the preview grace days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.CurrentQuantity">
            <summary>
            Quantity used by the user, when resources is pay as you go or commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.CommittedQuantity">
            <summary>
            Quantity committed by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MaximumQuantity">
            <summary>
            Gets or sets the value of maximum quantity for the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.AbsoluteMaximumQuantity">
            <summary>
            Gets or sets the value of absolute maximum quantity for the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.TrialCycles">
            <summary>
            Gets or sets the trial cycles.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.AutoAssignOnAccess">
            <summary>
            Indicates whether users get auto assigned this license type duing first access.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingEntity">
            <summary>
            Gets or sets the responsible entity/method for billing. Determines how this meter is handled in the backend.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MinimumRequiredAccessLevel">
            <summary>
            Gets or sets the minimum required access level for the meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.IncludedInLicenseLevel">
            <summary>
            Gets or sets the Min license level the offer is free for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.FixedQuantityPlans">
            <summary>
            Gets or sets the map of named quantity varied plans, plans can be purchased that vary only in the number of users included.
            Null if this offer meter does not support named fixed quantity plans.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.IsFirstParty">
            <summary>
            Flag to identify whether the meter is First Party or Third Party based on BillingEntity
            If the BillingEntity is SelfManaged, the Meter is First Party otherwise its a Third Party Meter
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.MeterName">
            <summary>
            The meter Name which identifies the offer meter this plan is associated with
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.PlanName">
            <summary>
            The Name of the plan, which is usually in the format "{publisher}:{offer}:{plan}"
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.Region">
            <summary>
            Region price is for
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.CurrencyCode">
            <summary>
            Currency code
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.Quantity">
            <summary>
            Plan Quantity 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice.Price">
            <summary>
            Plan Price
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OfferSubscription">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.OfferMeter">
            <summary>
            Gets or sets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.RenewalGroup">
            <summary>
            Gets the renewal group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.CommittedQuantity">
            <summary>
            Quantity committed by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionId">
            <summary>
            The azure subscription id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.OfferSubscriptionId">
            <summary>
            The unique identifier of this offer subscription
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionName">
            <summary>
            The azure subscription name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionState">
            <summary>
            The azure subscription state
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsTrialOrPreview">
            <summary>
            Gets or sets a value indicating whether this instance is trial or preview.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsPreview">
            <summary>
            Gets or sets a value indicating whether this instance is in preview.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsPurchaseCanceled">
            <summary>
            Gets the value indicating whether the puchase is canceled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsPurchasedDuringTrial">
            <summary>
            Gets the value indicating whether current meter was purchased while the meter is still in trial
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.TrialExpiryDate">
            <summary>
            Gets or sets the trial expiry date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.StartDate">
            <summary>
            Gets or sets the start date for this resource. First install date in any state.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AutoAssignOnAccess">
            <summary>
            Indicates whether users get auto assigned this license type duing first access.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter">
            <summary>
            The Purchasable offer meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter.OfferMeterDefinition">
            <summary>
            Gets or sets the offer meter definition.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter.MeterPricing">
            <summary>
            Gets or sets the meter pricing (GraduatedPrice)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter.EstimatedRenewalDate">
            <summary>
            Gets or sets the estimated renewal date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter.CurrencyCode">
            <summary>
            Currency code for meter pricing 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter.LocaleCode">
            <summary>
            Locale for azure subscription
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.PurchaseRequest">
            <summary>
            Represents a purchase request for requesting purchase by a user who does not have authorization to purchase.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchaseRequest.OfferMeterName">
            <summary>
            Name of the offer meter
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchaseRequest.Quantity">
            <summary>
            Quantity for purchase
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchaseRequest.Reason">
            <summary>
            Reason for the purchase request
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.PurchaseRequest.Response">
            <summary>
            Response for this purchase request by the approver
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount">
            <summary>
            The subscription account.
            Add Sub Type and Owner email later.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountId">
            <summary>
            Gets or sets the account identifier. Usually a guid.
            </summary>
            <value>
            The account identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountHostType">
            <summary>
            Gets or sets the account host type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountName">
            <summary>
            Gets or sets the name of the account.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionId">
            <summary>
            Gets or sets the subscription identifier.
            </summary>
            <value>
            The subscription identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionStatus">
            <summary>
            Gets or sets the subscription status.
            </summary>
            <value>
            The subscription status.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ResourceGroupName">
            <summary>
            Gets or sets the resource group.
            </summary>
            <value>
            The resource group.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.GeoLocation">
            <summary>
            Gets or sets the geo location.
            </summary>
            <value>
            The geo location.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.Locale">
            <summary>
            Gets or sets the subscription address country code
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.RegionDisplayName">
            <summary>
            Gets or sets the subscription address country display name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ServiceUrls">
            <summary>
            A dictionary of service urls, mapping the service owner to the service owner url
            </summary>
            <value>
            Urls which can be used to access account apis
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountTenantId">
            <summary>
            Gets or sets the account tenantId.
            </summary>
            <value>
            If the account is not linked to a tenant this willl be Guid.Empty
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsAccountOwner">
            <summary>
            Gets or sets a value indicating whether the calling user identity owns or is a PCA of the account.
            </summary>
            <value>
              <c>true</c> if user owns or is a PCA of the account otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ResourceName">
            <summary>
            Gets or sets the azure resource name.
            </summary>
            <value>
            The resource name representing the link between an account and subscription.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionName">
            <summary>
            Gets or sets the azure subscription name
            </summary>
            <value>
            This represent display name of azure subscription
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsEligibleForPurchase">
            <summary>
            Gets or set the flag to enable purchase via subscription. 
            </summary>
            <value>
            Flag indicate if purchase can be happen against billing entity for given (gallery) item
            This is run time property 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsPrepaidFundSubscription">
            <summary>
            get or set IsPrepaidFundSubscription
            </summary>
            <value>
            Flag indicates if pre paid fund warning message needs to display for subscription 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsPricingAvailable">
            <summary>
            get or set IsPricingPricingAvailable
            </summary>
            <value>
            Flag indicates if meter pricing needs to display for subscription 
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionOfferCode">
            <summary>
            get or set subscription offer code
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.OfferType">
            <summary>
            Gets or sets the Offer Type of this subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionTenantId">
            <summary>
            tenant id of subscription 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionObjectId">
            <summary>
            object id of subscription admin 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.FailedPurchaseReason">
            <summary>
            Purchase Error Reason
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.Name">
            <summary>
            Gets or sets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.CommittedQuantity">
            <summary>
            Quantity committed by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.UsageEvent">
            <summary>
            Class that represents common set of properties for a raw usage event reported by TFS services.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.MeterName">
            <summary>
            Meter Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.EventId">
            <summary>
            Unique event identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AccountName">
            <summary>
            Account name associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AssociatedUser">
            <summary>
            User GUID associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.Quantity">
            <summary>
            Quantity of the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.BillableDate">
            <summary>
            Timestamp when this billing event is billable
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.EventTimestamp">
            <summary>
            Receiving Timestamp of the billing event by metering service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.EventUniqueId">
            <summary>
            Gets or sets the event unique identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.ServiceIdentity">
            <summary>
            Service context GUID associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.ResourceBillingMode">
            <summary>
            Gets or sets the billing mode for the resource involved in the usage
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.SubscriptionId">
            <summary>
            Gets or sets subscription guid of the associated account of the event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.SubscriptionAnniversaryDay">
            <summary>
            Gets or sets subscription anniversary day of the subscription
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.PartitionId">
            <summary>
            Partition id of the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AccountId">
            <summary>
            Gets or sets account id of the event. Note: This is for backward compat with BI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.StartTime">
            <summary>
            Gets or sets start time of the aggregated value, inclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.EndTime">
            <summary>
            Gets or sets end time of the aggregated value, exclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.Resource">
            <summary>
            Gets or sets resource that the aggregated value represents
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.Value">
            <summary>
            Gets or sets quantity of the resource used from start time to end time
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountResource">
            <summary>
            The response to an account resource GET request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResource.properties">
            <summary>
            Resource properties.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountResourceListResult">
            <summary>
            The response to an account resource list GET request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceListResult.Value">
            <summary>
            Array of resource details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest">
            <summary>
            The body of a PUT request to modify a Visual Studio account resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.Location">
            <summary>
            The Azure instance location.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.Tags">
            <summary>
            The custom tags of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.Properties">
            <summary>
            The custom properties of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.OperationType">
            <summary>
            The type of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.Upn">
            <summary>
            The UPN.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.AccountName">
            <summary>
            The account name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest.RequestSource">
            <summary>
            Source of the request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountTagRequest">
            <summary>
            The body of a PATCH request to save tags for Visual Studio account resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AccountTagRequest.Tags">
            <summary>
            The custom tags of the resource.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType">
            <summary>
            Operation types for account resource PUT request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType.Unknown">
            <summary>
            The operation is unknown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType.Create">
            <summary>
            A new account will be created.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType.Update">
            <summary>
            An existing account will be updated.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType.Link">
            <summary>
            Links an existing account to an Azure subscription.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityParameter">
            <summary>
            The body of a POST request to check name availability.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityParameter.ResourceType">
            <summary>
            The type of resource to check availability for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityParameter.ResourceName">
            <summary>
            The name of the resource to check availability for.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityResult">
            <summary>
            The response to a name availability request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityResult.NameAvailable">
            <summary>
            The value which indicates whether the provided name is available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityResult.Message">
            <summary>
            The message describing the detailed reason.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest">
            <summary>
            Put call content is deserialized to this object.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.QuotaIdKey">
            <summary>
            Identifies the quota id in the properties.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.FreeTierQuotaIdentifiers">
            <summary>
            Free tier quota identifier identifying that a subscription is from free tier.
            This array could include more quota id's in future to identify new free tier subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.State">
            <summary>
            Gets or sets the subscription state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.RegistrationDate">
            <summary>
            Gets or sets the subscription registration date.
            </summary>
            <value>
            The registration date.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.SubscriptionId">
            <summary>
            Gets or sets the subscription identifier.
            </summary>
            <value>
            The subscription identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.Properties">
            <summary>
            Gets or sets a collection of extended properties for the request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.QuotaId">
            <summary>
            Gets or sets the quota identifier for the subscription
            </summary>
            <value>
            The quota identifier of the offer from azure billing. Ex: DreamSpark_2015-02-01.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.Source">
            <summary>
            Identifies the source of the subscription
            </summary>
            <value>
            One of the enumeration values indicating whether subscription is Enterprise Agreement, Internal, Free Tier or Normal.
            </value>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.AdjustData">
            <summary>
            Adjust received data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.IsValid">
            <summary>
            Check whether receieved status is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            This is done so that we can trace the values passed.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionResource.properties">
            <summary>
            Resource properties.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionResourceListResult.Value">
            <summary>
            Array of subscription resource details.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Unknown">
            <summary>
            The unknown state, invalid data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Registered">
            <summary>
            The subscription registered, updated or enabled back from suspended state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Unregistered">
            <summary>
            The all resource types have been unregistered.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Suspended">
            <summary>
            The Subscription in suspended state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Deleted">
            <summary>
            The subscription was deleted.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState.Warned">
            <summary>
            The subscription will be suspended.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ExtensionResource">
            <summary>
            The response to an extension resource GET request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResource.properties">
            <summary>
            Resource properties.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResource.plan">
            <summary>
            The extension plan that was purchased.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceListResult">
            <summary>
            The response to an extension resource list GET request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceListResult.Value">
            <summary>
            Array of extension resource details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan">
            <summary>
            Plan data for an extension resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan.name">
            <summary>
            Name of the plan.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan.publisher">
            <summary>
            Name of the extension publisher.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan.product">
            <summary>
            Product name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan.promotionCode">
            <summary>
            Optional: the promotion code associated with the plan.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan.version">
            <summary>
            A string that uniquely identifies the plan version.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest">
            <summary>
            The body of an extension resource PUT request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest.Location">
            <summary>
            The Azure region of the Visual Studio account associated with this request (i.e 'southcentralus'.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest.Tags">
            <summary>
            A dictionary of user-defined tags to be stored with the extension resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest.Properties">
            <summary>
            A dictionary of extended properties. This property is currently unused.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest.Plan">
            <summary>
            Extended information about the plan being purchased for this extension resource.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OperationListResult">
            <summary>
            Container for a list of operations supported by a resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OperationListResult.value">
            <summary>
            A list of operations supported by a resource provider.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Operation">
            <summary>
            Properties of an operation supported by the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Operation.name">
            <summary>
            The name of the resource operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Operation.display">
            <summary>
            The properties of the resource operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OperationProperties">
            <summary>
            Properties of an operation supported by the resource provider.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OperationProperties.provider">
            <summary>
            The provider name.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OperationProperties.resource">
            <summary>
            The resource name.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OperationProperties.operation">
            <summary>
            The operation name.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.OperationProperties.description">
            <summary>
            The description of the resource operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Resource">
            <summary>
            A generic Azure Resource Manager resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Resource.id">
            <summary>
            Unique identifier of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Resource.name">
            <summary>
            Resource name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Resource.type">
            <summary>
            Resource type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Resource.location">
            <summary>
            Resource location.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.Resource.tags">
            <summary>
            Resource tags.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourcesMoveRequest">
            <summary>
            Defines the request for moving resources across resource groups.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ResourcesMoveRequest.TargetResourceGroup">
            <summary>
            The target resource group id to move the resources to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ResourcesMoveRequest.Resources">
            <summary>
            The collection of resources to move to the target resource group.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetResourceUsage(System.String,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about the specified resource.
            </summary>
            <param name="offerMeterName">Unique name of the resource</param>
            <param name="renewalGroup">The renewal group.</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetResourceUsage(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about the specified resource.
            </summary>
            <param name="offerMeterName">Unique name of the resource</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetResourceUsage(System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts for each resource.
            </summary>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetAllOfferSubscriptionsForUser(System.Boolean,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="validateAzuresubscription">Flag to validate associated azure subscriptions for usage</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetOfferSubscriptionsForGalleryItem(System.Guid,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="azureSubscriptionId">Azure subscription Id</param>
            <param name="galleryItemId">Gallery item id</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.SetAccountQuantity(System.String,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource.
            </summary>
            <param name="offerMeterName"></param>
            <param name="renewalGroup">The renewal group.</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.SetAccountQuantity(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="offerMeterName"></param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.TogglePaidBilling(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="offerMeterName"></param>
            <param name="paidBillingStatus"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.CreateOfferSubscription(System.String,System.Guid,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Int32,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="offerMeterName"></param>
            <param name="azureSubscriptionId"></param>
            <param name="renewalGroup"></param>
            <param name="quantity"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <param name="billingTarget"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.EnableTrialOrPreviewOfferSubscription(System.String,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Object,System.Threading.CancellationToken)">
            <summary>
            Enables the trial or preview offer subscription.
            </summary>
            <param name="offerMeterName">Name of the offer meter.</param>
            <param name="renewalGroup">The renewal group.</param>
            <param name="userState">State of the user.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.EnableTrialOfferSubscriptionExtension(System.String,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            Extends the trial for a given offer subscription
            </summary>
            <param name="offerMeterName"></param>
            <param name="renewalGroup"></param>
            <param name="endDate"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.DecreaseResourceQuantity(System.String,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Int32,System.Boolean,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            Decreases resource quantity.
            If <paramref name="shouldBeImmediate"/> is true, the update is immediate; otherwise, the update
            will happen on the next reset (i.e. billing period).
            
            If called at the deployment level for bundle purchases, an <paramref name="azureSubscriptionId"/>
            must be passed to resolve the container of resouces associated with the subscription. Otherwise, if
            called the collection level, this is assumed to be the case for extensions (which are associated
            with a collection). Any other level results in an error.
            </summary>
            <param name="offerMeterName">The offer meter name.</param>
            <param name="renewalGroup">The renewal group.</param>
            <param name="quantity">The new quantity.</param>
            <param name="shouldBeImmediate">If false, updates only current quantity; otherwise, it also updates committed quantity.</param>
            <param name="azureSubscriptionId">Optional Azure subscription Id except at the deployment level.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.CreatePurchaseRequest(Microsoft.VisualStudio.Services.Commerce.PurchaseRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a request to purchase an extensions/resource for a given quantity to subscription administrators who are also PCA's.
            </summary>
            <param name="request">Details of the purchase request including offer meter, quantity, and description</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.UpdatePurchaseRequest(Microsoft.VisualStudio.Services.Commerce.PurchaseRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a request with response from the approver
            </summary>
            <param name="request">Details of the purchase request including offer meter, quantity, and description</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient.GetCommercePackage(System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the package of offer subscriptions and meter
            </summary>
            <returns>A package of signed offer meters and subscriptions</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient.GetCommercePackage(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the package of offer subscriptions and meter
            </summary>
            <returns>A package of signed offer meters and subscriptions</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.ConnectedServerHttpClient.CreateConnectedServer(Microsoft.VisualStudio.Services.Commerce.ConnectedServer,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.CsmHttpClient.Accounts_CreateAsync(Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest,System.Guid,System.String,System.String,Microsoft.VisualStudio.Services.Identity.Identity,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates a Azure DevOps Services account resource.
            </summary>
            <param name="requestData">The request data.</param>
            <param name="subscriptionId">The Azure subscription identifier.</param>
            <param name="resourceGroupName">Name of the resource group.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.CsmHttpClient.Accounts_CreateAsync(Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest,System.Guid,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates a Azure DevOps Services account resource.
            </summary>
            <param name="requestData">The request data.</param>
            <param name="subscriptionId">The Azure subscription identifier.</param>
            <param name="resourceGroupName">Name of the resource group.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetResourceStatus(System.Nullable{Microsoft.VisualStudio.Services.Commerce.ResourceName},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetResourceStatus(System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.SetAccountQuantity(Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="name">Name of the resource</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.TogglePaidBilling(Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="paidBillingStatus"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.ReportUsage(System.Guid,Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Int32,System.String,System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends usage information to billing pipeline. 
            Note that this method requires the request context to
            be at the application level with user identity.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="quantity">Quantity used in the billing event</param>
            <param name="eventId">Unique human readable identifier for the billing event</param>
            <param name="billingEventDateTime">Timestamp at which the event started</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetUsage(System.DateTime,System.DateTime,System.TimeSpan,Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the aggregate resource usage over the specified time range
            </summary>
            <param name="startTime">Start of the time range to retrieve, inclusive</param>
            <param name="endTime">End of the time range to retrieve, exclusive</param>
            <param name="timeSpan">Interval of the time to retrieve, should be in a multiple of hour or day</param>
            <param name="resource">Resource name</param>
            <returns>An enumerable of aggregated resource data, one for each timespan</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.GetMeterFromGalleryId(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.GetMeterFromMeterName(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource ( meterName)
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.GetMeters(System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about all resources
            </summary>
            <returns>Enumerable of Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.CreateOfferMeterDefinition(Microsoft.VisualStudio.Services.Commerce.IOfferMeter,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create offer meter definition entry in the table
            <param name="offerMeter"></param>
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient.GetOfferMeterPrice(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Return IOfferMeterPrice for each region available
            </summary>
            <returns>Enumerable IOfferMeterPrice for each region available</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient.s_translatedExceptions">
            <summary>
            The translated exceptions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.ReportingHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.ReportingHttpClient.GetCommerceEvents(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns commerce reporting events within time range.
            </summary>
            <param name="startTime">Start time of events range</param>
            <param name="endTime">End time of events range</param>
            <param name="filter">OData filter on event properties (optional)</param>
            <returns>Commerce events</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAzureSubscriptions(System.Collections.Generic.List{System.Guid},Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Threading.CancellationToken)">
            <summary>
            Gets the accounts by subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAccounts(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Threading.CancellationToken)">
            <summary>
            Gets the accounts by subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAccounts(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the accounts owned by identity.
            </summary>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="memberId">The member identifier.</param>
            <param name="queryOnlyOwnerAccounts">if set to <c>true</c> [query for owners only].</param>
            <param name="inlcudeDisabledAccounts">if set to <c>true</c> [inlcude disabled accounts].</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.CreateSubscription(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Int32,Microsoft.VisualStudio.Services.Commerce.SubscriptionStatus,Microsoft.VisualStudio.Services.Commerce.SubscriptionSource,System.Threading.CancellationToken)">
            <summary>
            Creates the subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="anniversaryDay">The anniversary day.</param>
            <param name="status">The status.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.LinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Links the account.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.LinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Links the account.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="hydrate">Specifies whether or not to trigger hydration of the account into CSM for Ibiza</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.UnlinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Unlinks an account from the subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.UnlinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Unlinks an account from the subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            /// <param name="hydrate">Specifies whether or not to trigger dehydration of the account into CSM for Ibiza</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetSubscriptionAccount(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets subscription account for a given accountId
            </summary>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAzureSubscriptionForPurchase(System.Guid,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get list of azure subscription where user is admin- co-admin under tenant or valid azure subscriptions for purchase (passing accountId to get this information for AAD calls)
            </summary>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="galleryItemId">Fully qualified gallery item id</param>
            <param name="accountId">The account identifier.</param>
            <returns>List of Subscriptions</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAzureSubscriptionForUser(System.Nullable{System.Guid},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns azure subscriptions across tenants.
            </summary>
            <param name="requestContext">Deployment Request Context</param>
            <param name="subscriptionId">Azure subscription id</param>
            <param name="queryAcrossTenants">Query across multiple tenants if the logged in user is member of multiple tenants</param>
            <remarks>Query across tenants only works if the current user token can be used to retrieve token for other tenants, otherwise method only returns subscriptions for current logged in tenant</remarks>
            <returns>List of subscriptions</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.ChangeSubscriptionAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Links the account.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="hydrate">Specifies whether or not to trigger hydration of the account into CSM for Ibiza</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.s_translatedExceptions">
            <summary>
            The translated exceptions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_CreateOrUpdateAsync(Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="requestData"></param>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="resourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_DeleteAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="resourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_GetAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="resourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_UpdateAsync(Microsoft.VisualStudio.Services.Commerce.AccountTagRequest,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="requestData"></param>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="resourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_ListByResourceGroupAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Operations_ListAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Extensions_CreateAsync(Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="requestData"></param>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="accountResourceName"></param>
            <param name="extensionResourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Extensions_DeleteAsync(System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="accountResourceName"></param>
            <param name="extensionResourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Extensions_GetAsync(System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="accountResourceName"></param>
            <param name="extensionResourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Extensions_UpdateAsync(Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="requestData"></param>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="accountResourceName"></param>
            <param name="extensionResourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Extensions_ListByAccountAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="accountResourceName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.Accounts_CheckNameAvailabilityAsync(Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityParameter,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="request"></param>
            <param name="subscriptionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.MoveResourcesAsync(Microsoft.VisualStudio.Services.Commerce.ResourcesMoveRequest,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="resourcesMoveRequest"></param>
            <param name="subscriptionId"></param>
            <param name="resourceGroupName"></param>
            <param name="operationName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.HandleNotificationAsync(Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="requestData"></param>
            <param name="subscriptionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase.SubscriptionResources_ListAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subscriptionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Common.SubjectDescriptor.FromCommaSeperatedStrings(System.String)">
            <summary>
            Parses a string of comma separated subject descriptors into a enumerable list of <see cref="T:Microsoft.VisualStudio.Services.Common.SubjectDescriptor"/> objects.
            </summary>
            <returns>empty enumerable if parameter 'descriptors' is null or empty</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Common.SubjectDescriptorConverter">
            <summary>
            Converter to support data contract serialization.
            </summary>
            <remarks>
            This class should only be used to convert a descriptor string from the client back into a string
            tuple SubjectDescriptor type on the server. The client should be unaware that this tuple relationship exists
            and this should not permit that relationship to leak to the client.
            
            Specifically, this is provided so that the MVC router can convert a string => SubjectDescriptor so
            that we can use the  [ClientParameterType(typeof(string))] SubjectDescriptor userDescriptor) convenience in each
            controller method.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Common.SocialDescriptor.FromCommaSeperatedStrings(System.String)">
            <summary>
            Parses a string of comma separated social descriptors into a enumerable list of <see cref="T:Microsoft.VisualStudio.Services.Common.SocialDescriptor"/> objects.
            </summary>
            <returns>empty enumerable if parameter 'descriptors' is null or empty</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Common.SocialDescriptorConverter">
            <summary>
            Converter to support data contract serialization.
            </summary>
            <remarks>
            This class should only be used to convert a descriptor string from the client back into a string
            tuple SocialDescriptor type on the server. The client should be unaware that this tuple relationship exists
            and this should not permit that relationship to leak to the client.
            
            Specifically, this is provided so that the MVC router can convert a string => SocialDescriptor so
            that we can use the  [ClientParameterType(typeof(string))] SocialDescriptor socialDescriptor) convenience in each
            controller method.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.AccountRightsValidation.Volatile">
            <summary>
            Flag to mark the state as unfit for long caching or persisting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.RedirectUri">
            <summary>
            Gets the redirect Uri object for resolving the external user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.ErrorMessage">
            <summary>
            Gets the error message while trying resolve the external user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.HasError">
            <summary>
            Is true if an error occurred while resolving the external user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport.HostId">
            <summary>
            Id of the account to report which might get taken down after the validation process (i.e. collection)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport.ContainerId">
            <summary>
            Id of the source container (like project in TFS case).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport.ContentUrl">
            <summary>
            Url of the content to be reported to Content Validation Service (AVERT).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport.ViolationCategory">
            <summary>
            Category of the content violation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport.AdditionalDetails">
            <summary>
            Additional details about the offensive content.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReportResult.Id">
            <summary>
            Id of the result coming from Avert.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReportResult.Status">
            <summary>
            Status of the report.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Unset">
            <summary>
                Value is unset. Do not use.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Child">
            <summary>
                Child endangerment or exploitation.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.ContentInfringement">
            <summary>
                Content infringement.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Nudity">
            <summary>
                Offensive content.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Terrorism">
            <summary>
                Terrorism or terrorist activities.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Harassment">
            <summary>
                Threats, Cyberbullying or Harassment.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Spam">
            <summary>
                Virus Spyware and/or Malware.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.Other">
            <summary>
                Other category.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory.None">
            <summary>
                No abusive category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.AppTokenSecretPair.AppToken">
            <summary>
            This class is used while exchanging an app session token with oauth2 
            user token with API call.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions.Active">
            <summary>
            Token is active (e.g. has not been revoked and has not expired).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions.Revoked">
            <summary>
            Token has been revoked and is no longer usable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions.Expired">
            <summary>
            Token has expired and is no longer usable unless updated with a new expiration date.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions.All">
            <summary>
            Includes all tokens.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken">
            <summary>
            Represents a personal access token (PAT) used to access Azure DevOps resources
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.DisplayName">
            <summary>
            The token name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.ValidTo">
            <summary>
            The token expiration date
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.Scope">
            <summary>
            The token scopes for accessing Azure DevOps resources
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.TargetAccounts">
            <summary>
            The organizations for which the token is valid; null if the token applies to all of the user's accessible organizations
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.ValidFrom">
            <summary>
            The token creation date
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.AuthorizationId">
            <summary>
            Unique guid identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken.Token">
            <summary>
            The unique token string generated at creation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest">
            <summary>
            Encapsulates the request parameters for creating a new personal access token (PAT)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest.DisplayName">
            <summary>
            The token name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest.Scope">
            <summary>
            The token scopes for accessing Azure DevOps resources
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest.ValidTo">
            <summary>
            The token expiration date
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest.AllOrgs">
            <summary>
            True, if this personal access token (PAT) is for all of the user's accessible organizations. False, if otherwise (e.g. if the token is for a specific organization)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenResult">
            <summary>
            Contains the resulting personal access token (PAT) and the error (if any) that occurred during the operation
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenResult.PatToken">
            <summary>
            The resulting personal access token (PAT)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenResult.PatTokenError">
            <summary>
            The error (if any) that occurred
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedPatTokens">
            <summary>
            Returned by the List method; contains a list of personal access tokens (PATs) and the continuation token to get the next page of results
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedPatTokens.ContinuationToken">
            <summary>
            Used to access the next page of results in successive API calls to list personal access tokens (PATs)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedPatTokens.PatTokens">
            <summary>
            The list of personal access tokens (PATs)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedSessionTokens.EncodeContinuationToken(System.Int32)">
            <summary>
            Turn a row number into a contiuation token string. Returns an empty string
            if nextRowNumber is not a positive integer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedSessionTokens.DecodeContinuationToken(System.String)">
            <summary>
            Turn a contiuation token string into a row number
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration.PublicKey">
            <summary>
            Raw cert data string from public key. This will be used for authenticating medium trust clients.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken">
            <summary>
            Represents a session token used to access Azure DevOps resources
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken.Token">
            <summary>
            This is computed and not returned in Get queries
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken.AlternateToken">
            <summary>
            This is populated when user requests a compact token. The alternate token value is self describing token.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions.DisplayName">
            <summary>
            Sort by display name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions.DisplayDate">
            <summary>
            Sort by display date
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions.Status">
            <summary>
            Sort by status
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DelegatedAuthorization.SshPublicKey">
            <summary>
            Used to transmit an SSH public key in the RemovePublicKey API
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient.CreatePatAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a new personal access token (PAT) for the requesting user.
            </summary>
            <param name="patTokenCreateRequest"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient.GetPatAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single personal access token (PAT).
            </summary>
            <param name="authorizationId">The authorizationId identifying a single, unique personal access token (PAT)</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient.ListPatsAsync(System.Nullable{Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions},System.Nullable{Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a paged list of personal access tokens (PATs) created in this organization. Subsequent calls to the API require the same filtering options to be supplied.
            </summary>
            <param name="displayFilterOption">(Optional) Refers to the status of the personal access token (PAT)</param>
            <param name="sortByOption">(Optional) Which field to sort by</param>
            <param name="isSortAscending">(Optional) Ascending or descending</param>
            <param name="continuationToken">(Optional) Where to start returning tokens from</param>
            <param name="top">(Optional) How many tokens to return, limit of 100</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient.RevokeAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Revokes a personal access token (PAT) by authorizationId.
            </summary>
            <param name="authorizationId">The authorizationId identifying a single, unique personal access token (PAT)</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient.UpdatePatAsync(Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates an existing personal access token (PAT) with the new parameters. To update a token, it must be valid (has not been revoked).
            </summary>
            <param name="patTokenUpdateRequest"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.AuthorizeAsync(System.Guid,Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.AuthorizeAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetAuthorizationsAsync(System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.InitiateAuthorizationAsync(System.Guid,Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.InitiateAuthorizationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.RevokeAuthorizationAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="authorizationId"></param>
             <param name="userId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.AuthorizeHostAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="clientId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetHostAuthorizationsAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="hostId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.RevokeHostAuthorizationAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="clientId"></param>
            <param name="hostId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.CreateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.CreateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.DeleteRegistrationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationsAsync(System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.UpdateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.UpdateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetSecretAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.RotateSecretAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.ExchangeAccessTokenKeyAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="accessTokenKey"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.GetAccessTokenAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="key"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.IssueAppSessionTokenAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="clientId"></param>
            <param name="userId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.ExchangeAppTokenAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.AppTokenSecretPair,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="appInfo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.CreateSessionTokenAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken,System.Nullable{Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="sessionToken"></param>
            <param name="tokenType"></param>
            <param name="isPublic"></param>
            <param name="isRequestedByTfsPatWebUI"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.GetSessionTokenAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="authorizationId"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.GetSessionTokensAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="isPublic"></param>
            <param name="includePublicData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.GetSessionTokensPageAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions,Microsoft.VisualStudio.Services.DelegatedAuthorization.CreatedByOptions,Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions,System.Boolean,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="displayFilterOption"></param>
            <param name="createdByOption"></param>
            <param name="sortByOption"></param>
            <param name="isSortAscending"></param>
            <param name="startRowNumber"></param>
            <param name="pageSize"></param>
            <param name="pageRequestTimeStamp"></param>
            <param name="isPublic"></param>
            <param name="includePublicData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.RemovePublicKeyAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.SshPublicKey,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publicData"></param>
            <param name="remove"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.RevokeAllSessionTokensOfUserAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient.RevokeSessionTokenAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="authorizationId"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Directories.DirectoryEntity">
            <summary>
            Read-write base class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.DirectoryEntityResult.EntityState">
            <summary>
            The <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryEntityState"/> of this result. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.DirectoryEntityResult.Status">
            <summary>
            The <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryStatus"/> of this result.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.DirectoryEntityResult.Exception">
            <summary>
            The exception associated with this result.
            This property will be null when <see cref="P:Microsoft.VisualStudio.Services.Directories.DirectoryEntityResult.Status"/> is <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.Success"/>,
            and may or may not be set otherwise.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityState.LocalFetch">
            <summary>
            Returned when an entity has been retrieved from VSTS.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityState.LocalCreate">
            <summary>
            Returned when an entity has been retrieved from outside VSTS and created in VSTS.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityState.RemoteFetch">
            <summary>
            Returned when an entity has been retrieved from outside VSTS without being created in VSTS.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.User">
            <summary>
            This concrete type implies that the directory entity represents a user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.Group">
            <summary>
            This concrete type implies that the directory entity represents a group.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.ServicePrincipal">
            <summary>
            This concrete type implies that the directory entity represents a service principal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.Any">
            <summary>
            This supertype is used in directory entity descriptors and search requests to select any of the possible concrete types.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.AzureActiveDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.ActiveDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.WindowsMachineDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.MicrosoftAccount">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.GitHub">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.SourceDirectory">
            <summary>
            This is a virtual directory that represents the current request context's source directory.
            <para>At the deployment level, this directory is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.Any"/>.</para>
            <para>At the application level or below this directory has the following interpretations:</para>
            <para>In an on-prem environment, this is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory"/>.</para>
            <para>In a hosted environment with an MSA-backed account, this is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory"/>.</para>
            <para>In a hosted environment with an AAD-backed account, this is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.AzureActiveDirectory"/>.</para> 
            <para>In a hosted environment with accounts created by GitHub users, this is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.GitHub"/>.</para> 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.Any">
            <summary>
            This is a virtual directory that represents any source.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.AadReadFailed">
            <summary>
            Returned when we failed to read AAD objects
            because we couldn't communicate with AAD or because AAD returned an invalid response,
            i.e. when AadService.Get(Users/Groups) fails.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.AadGetTokenFailed">
            <summary>
            Returned when a request fails because an access token could not be acquired silently.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.AadReadTypeUnrecognized">
            <summary>
            Returned when the type of entity returned from AAD does not match a known type such as AadUser or AadGroup.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ConvertFailed">
            <summary>
            Returned when we received a valid response from one backing directory but were unable to convert it to the format required by the target directory.
            For example, occurs when we cannot convert an AAD user to the corresponding VSD identity.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdConflict">
            <summary>
            Returned when we cannot assign the requested local ID because it would cause a conflict with the ID of a preexisting identity.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationConflict">
            <summary>
            Returned when we cannot create an identity ID translation
            because there is a conflict with a preexisting identity in the same account scope.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationFailed">
            <summary>
            Returned when we failed to create an identity ID translation due to an unexpected error.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.UpdateStorageKeysFailed">
            <summary>
            Returned when we failed to update storage key translation due to an unexpected error.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.SetMasterIdFailed">
            <summary>
            Returned when we failed to set master id due to an unexpected error.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.StorageKeyAssignmentResultCountMismatch">
            <summary>
            Returned when the number of identities that we expected to assigned storage key is not the same as the number that were actually assigned.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.StorageKeyAssignmentResultNull">
            <summary>
            Returned when an identity read returned null after we attempted to assign storage key,
            which indicates that the storage key assignment was not done successfully.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.StorageKeyAssignmentLocalIdMismatch">
            <summary>
            Returned when we attempted to assign storage key but the resulting local ID did not match the expected value.
            Indicates an internal assign storage key failure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.StorageKeyAssignmentMasterIdMismatch">
            <summary>
            Returned when we attempted to assign storage key but the resulting master ID did not match the expected value.
            Indicates an internal assign storage key failure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.GetOrCreateIdForCuidFailed">
            <summary>
            Returned when we failed to get or create storage key translation due to an unexpected error.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationLocalIdMismatch">
            <summary>
            Returned when we attempted to create an identity ID translation but the resulting local ID did not match the expected value.
            Indicates an internal ID translation failure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationMasterIdMismatch">
            <summary>
            Returned when we attempted to create an identity ID translation but the resulting master ID did not match the expected value.
            Indicates an internal ID translation failure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationNotAllowed">
            <summary>
            Returned when we attempted to create an identity ID translation for an identity for which ID translation is not allowed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationResultCountMismatch">
            <summary>
            Returned when the number of identities that we expected to translate is not the same as the number that were actually translated.
            Indicates an internal ID translation failure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.IdTranslationResultNull">
            <summary>
            Returned when an identity read returned null after we attempted to create an identity ID translation,
            which indicates that the translation was not created successfully.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidHostType">
            <summary>
            Returned when we are trying to perform an operation on an unsupported host type.
            For example, AAD operations require an application host or lower and will return this error at the deployment level.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidLicenseType">
            <summary>
            Returned when the license string passed in by the caller is not a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryUserLicenseType"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidLocalDescriptor" -->
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidPermissionsProperty">
            <summary>
            Returned when the permissions object passed in by the caller does not match the expected object structure.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidProfileState">
            <summary>
            Returned when the profile string passed in by the caller is not a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryUserProfileState"/>.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.InvalidRequestEntity">
            <summary>
            Returned when the request entity passed in by the caller cannot be parsed as some known implementation of IDirectoryEntityDescriptor.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.LicenseNotAvailable">
            <summary>
            Returned when no licenses of the requested type are available,
            such as when the backing account has already used up its quota of purchased licenses.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.LicenseTargetHostAmbiguous">
            <summary>
            Returned when we failed to assign a license because we are targetting an organization host that has multiple or no child collection hosts.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.LicenseWriteFailed">
            <summary>
            Returned when we failed to assign a license for a reason other than <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.LicenseNotAvailable"/>.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.LocalGroupWriteFailed">
            <summary>
            Returned when we failed to assign a local group membership.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.MsaReadFailed">
            <summary>
            Returned when we failed to read MSA users
            because we couldn't communicate with MSA or because MSA returned an invalid response,
            i.e. when MsaUserService calls fail.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.NoResults">
            <summary>
            Returned when there was no result matching the request parameters across all backing directories.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.NotInScope">
            <summary>
            Returned when the requested entity is not effectively in scope,
            i.e. does not have an ancestor which is already a member of the account.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.PermissionsNamespaceNotFound">
            <summary>
            Returned when one of the security namespace IDs passed in the permissions property
            cannot be resolved to a security namespace.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.PermissionsWriteFailed">
            <summary>
            Returned when we failed to set access control entries.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ProfileWriteFailed">
            <summary>
            Returned when we failed to create a profile.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ProtectedIdentityConflict">
            <summary>
            Returned when the request properties conflict with but do not exactly match a protected identity, for which an exact match is required.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ResultCountMismatch">
            <summary>
            Returned when the number of results returned by a directory such as VSD or AAD.
            does not match the number of request members that we sent to that directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ResultMapFailed">
            <summary>
            Returned when we received a result but hit an error when trying to map that result back to the original request entity.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.RootIdentitiesFailed">
            <summary>
            Returned when we cannot root identities to make sure they are visible, even if only as inactive, in the target scope.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.ScopeNotDeterminable">
            <summary>
            Returned when we cannot verify whether the requested entity is effectively in scope.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.Success">
            <summary>
            Returned when the request member was successfully discovered and added to the current scope
            with the request profile, license, and group memberships.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.TooManyResults">
            <summary>
            Returned when we expected a single result from a backing directory such as VSD or AAD,
            but we received more than one result.
            Can occur when performing operations using potentially non-unique keys such as the principal name.
            Should never occur which using unique keys like the VSID or object ID.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.VsdReadFailed">
            <summary>
            Returned when we failed to read VSD identities
            because we couldn't communicate with VSD or because VSD returned an invalid response,
            i.e. when IdentityService.ReadIdentities fails.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.VsdWriteFailed">
            <summary>
            Returned when we failed to write VSD identities
            because we couldn't communited with VSD or because VSD returned an invalid response
            i.e. when IdentityService.UpdateIdentities fails.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.UserServiceWriteFailed">
            <summary>
            Returned when we failed to create users in user service
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryStatus.GitHubReadFailed">
            <summary>
            Returned when we failed to read GitHub objects
            because we couldn't communicate with GitHub or because GitHub returned an invalid response,
            i.e. when GitHubHttpClient.GetAnyUserById fails.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity">
            <summary>
            <para>
            This is a partial view of a known directory entity at a point in time.
            Two views of the same logical directory entity may contain different properties.
            </para>
            <para>
            All directory entities implement this read-only interface.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.EntityId">
            <summary>
            <para>
            This is an opaque identifier for this directory entity.
            </para>
            <para>
            If two identifiers are equal, then they reference the same logical directory entity.
            If entity 1 has identifier "x" and entity 2 has identifier "x", then the entitys are views of the same directory entity.
            </para>
            <para>
            If two identifiers are not equal, then they may reference different logical directory entitys or the same logical directory entity.
            In most cases, if entity 1 has identifier "x" and entity 2 has identifier "y", then the entitys are views of different directory entitys.
            However, in some cases, such as when the format of the identifier changes, then the entitys are views of the same directory entity.
            </para>
            <para>
            The format of this identifier is subject to change without notice and clients should not attempt to parse it.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.EntityType">
            <summary>
            This is the type of this directory entity.
            Must be a concrete <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType"/>.
            If <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.User"/>, implies that this entity is an <see cref="T:Microsoft.VisualStudio.Services.Directories.IDirectoryUser"/>.
            If <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.Group"/>, implies that this entity is an <see cref="T:Microsoft.VisualStudio.Services.Directories.IDirectoryGroup"/>.
            This property should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.EntityOrigin">
            <summary>
            This is the origin directory of entity. For an MSA backed org, this could
            be MSA or AAD, depending on which verson of identity it represents.
            Must be a concrete <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.OriginDirectory">
            <summary>
            This is the directory that originated this directory entity.
            Must be a concrete <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            This property should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.OriginId">
            <summary>
            This is the origin directory's identifier for this directory entity.
            This property should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.LocalDirectory">
            <summary>
            This is the directory that stores VSTS's view of this directory entity.
            Must be a concrete <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            This property should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.LocalId">
            <summary>
            This is the local directory's identifier for this directory entity.
            This property may be null depending on whether the entity has been added to VSTS.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.PrincipalName">
            <summary>
            Returns this entity's principal name.
            This property may or may not be set depending on the query that was used to produce this entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.DisplayName">
            <summary>
            Returns this entity's display name.
            This property may or may not be set depending on the query that was used to produce this entity.
            </summary>        
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.ScopeName">
            <summary>
            Returns this entity's scope name.
            <para>For an entity that originates from VSD, the scope name is the account name.</para>
            <para>For an entity that originates from AAD, the scope name is the tenant name.</para>
            <para>This property may or may not be set depending on the query that was used to produce this entity.</para>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.LocalDescriptor">
            <summary>
            Returns this entity's local identity descriptor which gives its identity type and security identifier.
            <para>This property may or may not be set depending on the query that was used to produce this entity.</para>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.SubjectDescriptor">
            <summary>
            Returns this entity's identity subject descriptor which gives its subject type and identifier.
            <para>This property may or may not be set depending on the query that was used to produce this entity.</para>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity.Active">
            <summary>
            Returns this entity's active status in the directory.
            </summary>
            <remarks>
            This is equivalent to <code>this["Active"] as bool?</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor">
            <summary>
            This a view that describes an entity which may or may not exist in a backing directory.
            For the interface that gives a partial view of a known directory entity, see <see cref="T:Microsoft.VisualStudio.Services.Directories.IDirectoryEntity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.EntityType">
            <summary>
            This is the type of the target directory entity.
            Must be a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.EntityOrigin">
            <summary>
            This is the source directory of entity. For an MSA backed org, this could
            be MSA or AAD, depending on which verson of identity it represents.
            Must be a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.OriginDirectory">
            <summary>
            This is the directory that originated the target directory entity.
            Must be a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.OriginId">
            <summary>
            This is the origin directory's identifier for the target directory entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.LocalDirectory">
            <summary>
            This is the directory that stores VSTS's view of the target directory entity.
            Must be a <see cref="T:Microsoft.VisualStudio.Services.Directories.DirectoryName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.LocalId">
            <summary>
            This is the local directory's identifier for the target directory entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.PrincipalName">
            <summary>
            This is the principal name of the target directory entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.DisplayName">
            <summary>
            This is the display name of the target directory entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor.Item(System.String)">
            <summary>
            This gives additional property name value pairs for the target directory name.
            Returns null for unknown/unset properties.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Directories.IDirectoryGroup">
            <summary>
            All directory groups implement this read-only interface.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryGroup.Description">
            <summary>
            Returns this group's description.
            </summary>
            <remarks>
            This is equivalent to <code>this["Description"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryGroup.Mail">
            <summary>
            Returns this group's mail address.
            </summary>
            <remarks>
            This is equivalent to <code>this["Mail"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryGroup.MailNickname">
            <summary>
            Returns this group's mail nickname.
            </summary>
            <remarks>
            This is equivalent to <code>this["MailNickname"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryServicePrincipal.AppId">
            <summary>
            Returns the application ID of service principal.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Directories.IDirectoryUser">
            <summary>
            All directory users implement this read-only interface.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.Department">
            <summary>
            Returns this user's department.
            </summary>
            <remarks>
            This is equivalent to <code>this["Department"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.Guest">
            <summary>
            Returns this user's guest status.
            </summary>
            <remarks>
            This is equivalent to <code>this["Guest"] as bool?</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.JobTitle">
            <summary>
            Returns this user's job title.
            </summary>
            <remarks>
            This is equivalent to <code>this["JobTitle"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.Mail">
            <summary>
            Returns this user's mail address.
            </summary>
            <remarks>
            This is equivalent to <code>this["Mail"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.MailNickname">
            <summary>
            Returns this user's mail nickname.
            </summary>
            <remarks>
            This is equivalent to <code>this["MailNickname"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.PhysicalDeliveryOfficeName">
            <summary>
            Returns this user's physical delivery office name.
            </summary>
            <remarks>
            This is equivalent to <code>this["PhysicalDeliveryOfficeName"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.SignInAddress">
            <summary>
            Returns this user's sign-in address.
            </summary>
            <remarks>
            This is equivalent to <code>this["SignInAddress"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Directories.IDirectoryUser.Surname">
            <summary>
            Returns this user's surname.
            </summary>
            <remarks>
            This is equivalent to <code>this["Surname"] as string</code>.
            This property may or may not be set depending on the query that was used to produce this object.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch">
            <summary>
            This is passed to the FeatureFlagController to edit the status of a feature flag
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetAllFeatureFlagsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a listing of all feature flags and their current states
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetAllFeatureFlagsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a listing of all feature flags and their current states for a user
            </summary>
            <param name="userEmail">The email of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="checkFeatureExists">Check if feature exists</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserEmailAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userEmail">The email of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserEmailAsync(System.String,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userEmail">The email of the user to check</param>
            <param name="checkFeatureExists">Check if feature exists</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserIdAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userId">The id of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserIdAsync(System.String,System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userId">The id of the user to check</param>
            <param name="checkFeatureExists">Check if feature exists</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.UpdateFeatureFlagAsync(Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Change the state of an individual feature flag
            </summary>
            <param name="state">State that should be set</param>
            <param name="name">The name of the feature to change</param>
            <param name="checkFeatureExists">Checks if the feature exists before setting the state</param>
            <param name="setAtApplicationLevelAlso">If true and currently at collection level, set the feature state at application also</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.UpdateFeatureFlagAsync(Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Change the state of an individual feature flag for a name
            </summary>
            <param name="state">State that should be set</param>
            <param name="name">The name of the feature to change</param>
            <param name="userEmail"></param>
            <param name="checkFeatureExists">Checks if the feature exists before setting the state</param>
            <param name="setAtApplicationLevelAlso"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerOptions">
            <summary>
            Options a container can have.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerOptions.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType">
            <summary>
            Type of a container item.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.Any">
            <summary>
            Any item type.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.Folder">
            <summary>
            Item is a folder which can have child items.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.File">
            <summary>
            Item is a file which is stored in the file service.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus">
            <summary>
            Status of a container item.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus.Created">
            <summary>
            Item is created.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus.PendingUpload">
            <summary>
            Item is a file pending for upload.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.FileContainer">
            <summary>
            Represents a container that encapsulates a hierarchical file system.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ScopeIdentifier">
            <summary>
            Project Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ArtifactUri">
            <summary>
            Uri of the artifact associated with the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.SecurityToken">
            <summary>
            Security token of the artifact associated with the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Size">
            <summary>
            Total size of the files in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Options">
            <summary>
            Options the container can have.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.SigningKeyId">
            <summary>
            Identifier of the optional encryption key.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.CreatedBy">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.DateCreated">
            <summary>
            Creation date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ItemLocation">
            <summary>
            Location of the item resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ContentLocation">
            <summary>
            Download Url for the content of this item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.LocatorPath">
            <summary>
            ItemStore Locator for this container.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem">
            <summary>
            Represents an item in a container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ContainerId">
            <summary>
            Container Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ScopeIdentifier">
            <summary>
            Project Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.Path">
            <summary>
            Unique path that identifies the item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ItemType">
            <summary>
            Type of the item: Folder, File or String.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.Status">
            <summary>
            Status of the item: Created or Pending Upload.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileLength">
            <summary>
            Length of the file. Zero if not of a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileHash">
            <summary>
            Hash value of the file. Null if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileEncoding">
            <summary>
            Encoding of the file. Zero if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileType">
            <summary>
            Type of the file. Zero if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.DateCreated">
            <summary>
            Creation date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.DateLastModified">
            <summary>
            Last modified date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.CreatedBy">
            <summary>
            Creator.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.LastModifiedBy">
            <summary>
            Modifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ItemLocation">
            <summary>
            Location of the item resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ContentLocation">
            <summary>
            Download Url for the content of this item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileId">
            <summary>
            Id of the file content.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ArtifactId">
            <summary>
            Id for Blobstore reference
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerItemBlobReference">
            <summary>
            Represents an reference to a file in Blobstore
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.BlobCompressionType">
            <summary>
            Compression type for file stored in Blobstore
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainersAsync(System.Collections.Generic.List{System.Uri},System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries for file containers
            </summary>
            <param name="artifactUris">List of artifact uris associated with containers. If empty or null will return all containers.</param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainerItemsAsync(System.Int64,System.Guid,System.String,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Queries for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="scopeIdentifier">Id of the scope to query</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState">User state</param>
            <param name="includeDownloadTickets">Whether to include download ticket(s) for the container item(s) in the result</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainerItemsAsync(System.Int64,System.Guid,System.Boolean,System.String,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Queries for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="scopeIdentifier">Id of the scope to query</param>
            <param name="isShallow">Whether to just return immediate children items under the itemPath</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState">User state</param>
            <param name="includeDownloadTickets">Whether to include download ticket(s) for the container item(s) in the result</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainerItemsAsync(System.Int64,System.Guid,System.Boolean,System.Boolean,System.String,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Queries for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="scopeIdentifier">Id of the scope to query</param>
            <param name="isShallow">Whether to just return immediate children items under the itemPath</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState">User state</param>
            <param name="includeDownloadTickets">Whether to include download ticket(s) for the container item(s) in the result</param>
            <param name="includeBlobMetadata">Whether to include blob metadata for the container item(s) in the result</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.CreateItemForArtifactUpload(System.Int64,System.String,System.Guid,System.String,System.Int64,System.Threading.CancellationToken,System.Object)">
            <summary>
            Creates a file for an upload to blobstore
            </summary>
            <param name="artifactId">Root node of the artifact.</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns>Http response message.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.UploadFileAsync(System.Int64,System.String,System.IO.Stream,System.Guid,System.Threading.CancellationToken,System.Int32,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Uploads a file in chunks to the specified uri.
            </summary>
            <param name="fileStream">Stream to upload.</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns>Http response message.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DownloadFileAsync(System.Int64,System.String,System.Threading.CancellationToken,System.Guid,System.Object)">
            <summary>
            Download a file from the specified container.
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns>A stream of the file content.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DownloadItemAsZipAsync(System.Int64,System.String,System.Threading.CancellationToken,System.Guid,System.Object)">
            <summary>
            Download a file or folder as a zip file.
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns>A stream of the zip file.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DeleteContainerItem(System.Int64,System.String,System.Guid,System.Threading.CancellationToken,System.Object)">
            <summary>
            Delete a container item
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for file container errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputDataType">
            <summary>
            Enumerates data types that are supported as subscription input values.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.None">
            <summary>
            No data type is specified.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.String">
            <summary>
            Represents a textual value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Number">
            <summary>
            Represents a numeric value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Boolean">
            <summary>
            Represents a value of true or false.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Guid">
            <summary>
            Represents a Guid.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Uri">
            <summary>
            Represents a URI.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputDescriptor">
            <summary>
            Describes an input for subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Id">
            <summary>
            Identifier for the subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Name">
            <summary>
            Localized name which can be shown as a label for the subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Description">
            <summary>
            Description of what this input is used for
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Type">
            <summary>
            Underlying data type for the input value. When this value is specified,
            InputMode, Validation and Values are optional.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.SupportedScopes">
            <summary>
            List of scopes supported.  Null indicates all scopes are supported.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Properties">
            <summary>
            Custom properties for the input which can be used by the service provider
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.InputMode">
            <summary>
            Mode in which the value of this input should be entered
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.IsConfidential">
            <summary>
            Gets whether this input is confidential, such as for a password or application key
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.UseInDefaultDescription">
            <summary>
            Gets whether this input is included in the default generated action description.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.GroupName">
            <summary>
            The group localized name to which this input belongs and can be shown as a header
            for the container that will include all the inputs in the group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.ValueHint">
            <summary>
            A hint for input value. It can be used in the UI as the input placeholder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Validation">
            <summary>
            Information to use to validate this input's value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Values">
            <summary>
            Information about possible values for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.DependencyInputIds">
            <summary>
            The ids of all inputs that the value of this input is dependent on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.HasDynamicValueInformation">
            <summary>
            If true, the value information for this input is dynamic and
            should be fetched when the value of dependency inputs change.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputFilter">
            <summary>
            Defines a filter for subscription inputs. The filter matches a set of inputs
            if any (one or more) of the groups evaluates to true.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilter.Conditions">
            <summary>
            Groups of input filter expressions. This filter matches a set of inputs
            if any (one or more) of the groups evaluates to true.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition">
            <summary>
            An expression which can be applied to filter a list of subscription inputs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.InputId">
            <summary>
            The Id of the input to filter on
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.Operator">
            <summary>
            The operator applied between the expected and actual input value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.InputValue">
            <summary>
            The "expected" input value to compare with the actual input value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.CaseSensitive">
            <summary>
            Whether or not to do a case sensitive match
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputMode">
            <summary>
            Mode in which a subscription input should be entered (in a UI)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.None">
            <summary>
            This input should not be shown in the UI
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.TextBox">
            <summary>
            An input text box should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.PasswordBox">
            <summary>
            An password input box should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.Combo">
            <summary>
            A select/combo control should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.RadioButtons">
            <summary>
            Radio buttons should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.CheckBox">
            <summary>
            Checkbox should be shown(for true/false values)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.TextArea">
            <summary>
            A multi-line text area should be shown
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValidation">
            <summary>
            Describes what values are valid for a subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.DataType">
            <summary>
            Gets or sets the data type to validate.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.IsRequired">
            <summary>
            Gets or sets if this is a required field.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.Pattern">
            <summary>
            Gets or sets the pattern to validate.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.PatternMismatchErrorMessage">
            <summary>
            Gets or sets the error on pattern mismatch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.MinValue">
            <summary>
            Gets or sets the minimum value for this descriptor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.MaxValue">
            <summary>
            Gets or sets the minimum value for this descriptor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.MinLength">
            <summary>
            Gets or sets the minimum length of this descriptor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValidation.MaxLength">
            <summary>
            Gets or sets the maximum length of this descriptor.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValues">
            <summary>
            Information about the possible/allowed values for a given subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.InputId">
            <summary>
            The id of the input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.DefaultValue">
            <summary>
            The default value to use for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.PossibleValues">
            <summary>
            Possible values that this input can take
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsLimitedToPossibleValues">
            <summary>
            Should the value be restricted to one of the values in the PossibleValues (True)
            or are the values in PossibleValues just a suggestion (False)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsDisabled">
            <summary>
            Should this input be disabled
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsReadOnly">
            <summary>
            Should this input be made read-only
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.Error">
            <summary>
            Errors encountered while computing dynamic values.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValue">
            <summary>
            Information about a single value for an input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.Value">
            <summary>
            The value to store for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.DisplayValue">
            <summary>
            The text to show for the display of this value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.Data">
            <summary>
            Any other data about this input
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValuesError">
            <summary>
            Error information related to a subscription input value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesError.Message">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesQuery.Resource">
            <summary>
            Subscription containing information about the publisher/consumer and the current input values
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesQuery.InputValues">
            <summary>
            The input values to return on input, and the result from the consumer on output.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient.CreateConnectionAsync(Microsoft.VisualStudio.Services.GitHubConnector.ConnectionCreationContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="connectionCreationContext"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient.GetConnectionInfoAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="id"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient.RemoveConnectionAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="id"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient.GetOrCreateInstallationTokenAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="id"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient.CreateUserOAuthValidationUrlAsync(Microsoft.VisualStudio.Services.GitHubConnector.OAuthUrlCreationContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="oAuthUrlCreationContext"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphCachePolicies.CacheSize">
            <summary>
            Size of the cache
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphDescriptorResult">
            <summary>
            Subject descriptor of a Graph entity
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphDescriptorResult.Links">
            <summary>
            This field contains zero or more interesting links about the graph descriptor. These links may be invoked to obtain additional
            relationships or more detailed information about this graph descriptor.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphGroup">
            <summary>
            Graph group entity
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroup.Description">
            <summary>
            A short phrase to help human readers disambiguate groups with similar names
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContext">
            <summary>
            Do not attempt to use this type to create a new group. This
            type does not contain sufficient fields to create a new group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContext.StorageKey">
            <summary>
            Optional: If provided, we will use this identifier for the storage key of the created group
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupOriginIdCreationContext">
            <summary>
            Use this type to create a new group using the OriginID as a reference to an existing group from an external
            AD or AAD backed provider. This is the subset of GraphGroup fields required for creation of
            a group for the AD and AAD use case.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupOriginIdCreationContext.OriginId">
            <summary>
            This should be the object id or sid of the group from the source AD or AAD provider.
            Example: d47d025a-ce2f-4a79-8618-e8862ade30dd
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupMailAddressCreationContext">
            <summary>
            Use this type to create a new group using the mail address as a reference to an existing group from an external
            AD or AAD backed provider. This is the subset of GraphGroup fields required for creation of
            a group for the AAD and AD use case.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupMailAddressCreationContext.MailAddress">
            <summary>
            This should be the mail address or the group in the source AD or AAD provider.
            Example: jamal@contoso.com
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext">
            <summary>
            Use this type to create a new Vsts group that is not backed by an external provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.DisplayName">
            <summary>
            Used by VSTS groups; if set this will be the group DisplayName, otherwise ignored
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.Description">
            <summary>
            Used by VSTS groups; if set this will be the group description, otherwise ignored
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.Descriptor">
            <summary>
            Internal use only. An optional sid to use for group creation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.CrossProject">
            <summary>
            For internal use only in back compat scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.RestrictedVisibility">
            <summary>
            For internal use only in back compat scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext.SpecialGroupType">
            <summary>
            For internal use only in back compat scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMember.Domain">
            <summary>
            This represents the name of the container of origin for a graph member. 
            (For MSA this is "Windows Live ID", for AD the name of the domain, for AAD the
            tenantID of the directory, for VSTS groups the ScopeId, etc)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMember.PrincipalName">
            <summary>
            This is the PrincipalName of this graph member from the source provider. The source 
            provider may change this field over time and it is not guaranteed to be immutable
            for the life of the graph member by VSTS.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMember.MailAddress">
            <summary>
            The email address of record for a given graph member. This may be different 
            than the principal name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphMembership">
            <summary>
            Relationship between a container and a member
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembership.ContainerDescriptor">
            <summary>
            Descriptor of the container which the subject is a member of
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembership.MemberDescriptor">
            <summary>
            Descriptor of the subject which has membership in the container
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembership.Links">
            <summary>
            This field contains zero or more interesting links about the graph membership. These
            links may be invoked to obtain additional relationships or more detailed information 
            about this graph membership.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipState">
            <summary>
            Status of a Graph membership (active/inactive)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipState.Active">
            <summary>
            When true, the membership is active
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipState.Links">
            <summary>
            This field contains zero or more interesting links about the graph membership state. 
            These links may be invoked to obtain additional relationships or more detailed 
            information about this graph membership state.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal.SubjectDescriptor">
            <summary>
            The traversed subject descriptor
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal.IsComplete">
            <summary>
            When true, the subject is traversed completely
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal.IncompletenessReason">
            <summary>
            Reason why the subject could not be traversed completely
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal.TraversedSubjects">
            <summary>
            Subject descriptors of the traversed members
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal.TraversedSubjectIds">
            <summary>
            Subject descriptor ids of the traversed members
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo">
            <summary>
            Who is the provider for this user and what is the identifier and 
            domain that is used to uniquely identify the user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo.Domain">
            <summary>
            This represents the name of the container of origin for a graph member.
            (For MSA this is "Windows Live ID", for AAD the tenantID of the directory.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo.Origin">
            <summary>
            The type of source provider for the origin identifier (ex: "aad", "msa")
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo.OriginId">
            <summary>
            The unique identifier from the system of origin. 
            (For MSA this is the PUID in hex notation, for AAD this is the object id.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo.Descriptor">
            The descriptor is the primary way to reference the graph subject while the system is running.
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo.DescriptorString">
            <summary>
            The descriptor is the primary way to reference the graph subject while the system is running. This field
            will uniquely identify the same graph subject across both Accounts and Organizations.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphScope">
            <summary>
            Container where a graph entity is defined (organization, project, team)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.AdministratorDescriptor">
            <summary>
            The subject descriptor that references the administrators group for this scope. Only
            members of this group can change the contents of this scope or assign other users
            permissions to access this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.AdministratorString">
            <summary>
            The subject descriptor that references the administrators group for this scope. Only
            members of this group can change the contents of this scope or assign other users
            permissions to access this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.IsGlobal">
            <summary>
            When true, this scope is also a securing host for one or more scopes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.ParentDescriptor">
            <summary>
            The subject descriptor of the parent scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.ParentDescriptorString">
            <summary>
            The subject descriptor for the closest account or organization in the 
            ancestor tree of this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.SecuringHostDescriptor">
            <summary>
            The subject descriptor for the containing organization in the ancestor tree 
            of this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.SecuringHostDescriptorString">
            <summary>
            The subject descriptor for the containing organization in the ancestor tree 
            of this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScope.ScopeType">
            <summary>
            The type of this scope. Typically ServiceHost or TeamProject.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext">
            <summary>
            This type is the subset of fields that can be provided by the user to create
            a Vsts scope. Scope creation is currently limited to internal back-compat scenarios.
            End users that attempt to create a scope with this API will fail.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.Name">
            <summary>
            The scope must be provided with a unique name within the parent scope. This means 
            the created scope can have a parent or child with the same name, but no siblings 
            with the same name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.ScopeType">
            <summary>
            The type of scope being created. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.StorageKey">
            <summary>
            An optional ID that uniquely represents the scope within it's parent scope. If
            this parameter is not provided, Vsts will generate on automatically.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.CreatorId">
            <summary>
            Set this optional field if this scope is created on behalf of a user other than the
            user making the request. This should be the Id of the user that is not the requester.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.AdminGroupName">
            <summary>
            All scopes have an Administrator Group that controls access to the contents of the 
            scope. Set this field to use a non-default group name for that administrators group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext.AdminGroupDescription">
            <summary>
            Set this field to override the default description of this scope's admin group.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContext">
            <summary>
            Do not attempt to use this type to create a new service principal. Use
            one of the subclasses instead. This type does not contain 
            sufficient fields to create a new service principal.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContext.StorageKey">
            <summary>
            Optional: If provided, we will use this identifier for the storage key of the created service principal
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdCreationContext">
            <summary>
            Use this type to create a new service principal using the OriginID as a reference to an existing service principal from an external
            AAD backed provider. This is the subset of GraphServicePrincipal fields required for creation of
            a GraphServicePrincipal for the AAD use case when looking up the service principal by its unique ID in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdCreationContext.OriginId">
            <summary>
            This should be the object id of the service principal from the AAD provider.
            Example: d47d025a-ce2f-4a79-8618-e8862ade30dd
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContext">
            <summary>
            Do not attempt to use this type to update service principal. Use
            one of the subclasses instead. This type does not contain 
            sufficient fields to create a new service principal.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContext.StorageKey">
            <summary>
            Storage key should not be specified in case of updating service principal
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdUpdateContext">
            <summary>
            Use this type to update an existing service principal using the OriginID as a reference to an existing service principal from an external
            AAD backed provider. This is the subset of GraphServicePrincipal fields required for creation of
            a GraphServicePrincipal for AAD use case when looking up the service principal by its unique ID in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdUpdateContext.OriginId">
            <summary>
            This should be the object id or sid of the service principal from the source AAD provider.
            Example: d47d025a-ce2f-4a79-8618-e8862ade30dd
            Azure Devops will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphStorageKeyResult">
            <summary>
            Storage key of a Graph entity
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphStorageKeyResult.Links">
            <summary>
            This field contains zero or more interesting links about the graph storage key. 
            These links may be invoked to obtain additional relationships or more detailed 
            information about this graph storage key.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject">
            <summary>
            Top-level graph entity
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject.SubjectKind">
            <summary>
            This field identifies the type of the graph subject (ex: Group, Scope, User).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject.Origin">
            <summary>
            The type of source provider for the origin identifier (ex:AD, AAD, MSA)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject.OriginId">
            <summary>
            The unique identifier from the system of origin. Typically a sid, object id or Guid. Linking
            and unlinking operations can cause this value to change for a user because the user is not
            backed by a different provider and has a different unique id in the new provider. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject.LegacyDescriptor">
            <summary>
            [Internal Use Only] The legacy descriptor is here in case you need to access old version IMS using identity descriptor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubject.LegacyDescriptorString">
            <summary>
            [Internal Use Only] The legacy descriptor is here in case you need to access old version IMS using identity descriptor.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase.Descriptor" -->
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase.DescriptorString">
            <summary>
            The descriptor is the primary way to reference the graph subject while the system is running. This field
            will uniquely identify the same graph subject across both Accounts and Organizations.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase.DisplayName">
            <summary>
            This is the non-unique display name of the graph subject. To change this field, you must alter its value in the
            source provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase.Links">
            <summary>
            This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional
            relationships or more detailed information about this graph subject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase.Url">
            <summary>
            This url is the full route to the source resource of this graph subject.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup">
            <summary>
            Batching of subjects to lookup using the Graph API
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery">
            <summary>
            Subject to search using the Graph API
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery.Query">
            <summary>
            Search term to search for Azure Devops users or/and groups
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery.SubjectKind">
            <summary>
            "User" or "Group" can be specified, both or either
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery.ScopeDescriptor">
            <summary>
            Optional parameter. Specify a non-default scope (collection, project) to search for users or groups within the scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.AadGraphMember.MetaType">
            <summary>
            The meta type of the user in the origin, such as "member", "guest", etc.
            See <see cref="T:Microsoft.VisualStudio.Services.Graph.Constants.UserMetaType"/> for the set of possible values.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.AadGraphMember.DirectoryAlias">
            <summary>
            The short, generally unique name for the user in the backing directory.
            For AAD users, this corresponds to the mail nickname, which is often but not necessarily similar
            to the part of the user's mail address before the @ sign. 
            For GitHub users, this corresponds to the GitHub user handle.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.AadGraphMember.IsDeletedInOrigin">
            <summary>
            When true, the group has been deleted in the identity provider
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContext">
            <summary>
            Do not attempt to use this type to create a new user. Use
            one of the subclasses instead. This type does not contain 
            sufficient fields to create a new user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContext.StorageKey">
            <summary>
            Optional: If provided, we will use this identifier for the storage key of the created user
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdCreationContext">
            <summary>
            Use this type to create a new user using the OriginID as a reference to an existing user from an external
            AD or AAD backed provider. This is the subset of GraphUser fields required for creation of
            a GraphUser for the AD and AAD use case when looking up the user by its unique ID in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdCreationContext.OriginId">
            <summary>
            This should be the object id or sid of the user from the source AD or AAD provider.
            Example: d47d025a-ce2f-4a79-8618-e8862ade30dd
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdCreationContext.Origin">
            <summary>
            This should be the name of the origin provider.
            Example: github.com
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameCreationContext">
            <summary>
            Use this type to create a new user using the principal name as a reference to an existing user from an external
            AD or AAD backed provider. This is the subset of GraphUser fields required for creation of
            a GraphUser for the AD and AAD use case when looking up the user by its principal name in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameCreationContext.PrincipalName">
            <summary>
            This should be the principal name or upn of the user in the source AD or AAD provider.
            Example: jamal@contoso.com
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserMailAddressCreationContext">
            <summary>
            Use this type to create a new user using the mail address as a reference to an existing user from an external
            AD or AAD backed provider. This is the subset of GraphUser fields required for creation of
            a GraphUser for the AD and AAD use case when looking up the user by its mail address in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserMailAddressCreationContext.MailAddress">
            <summary>
            This should be the mail address of the user in the source AD or AAD provider.
            Example: Jamal.Hartnett@contoso.com
            Team Services will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContext">
            <summary>
            Do not attempt to use this type to update user. Use
            one of the subclasses instead. This type does not contain 
            sufficient fields to create a new user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContext.StorageKey">
            <summary>
            Storage key should not be specified in case of updating user
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdUpdateContext">
            <summary>
            Use this type to update an existing user using the OriginID as a reference to an existing user from an external
            AD or AAD backed provider. This is the subset of GraphUser fields required for creation of
            a GraphUser for the AD and AAD use case when looking up the user by its unique ID in the backing provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdUpdateContext.OriginId">
            <summary>
            This should be the object id or sid of the user from the source AD or AAD provider.
            Example: d47d025a-ce2f-4a79-8618-e8862ade30dd
            Azure Devops will communicate with the source provider to fill all other fields on creation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameUpdateContext">
            <summary>
            Use this type for transfering identity rights, for instance after performing a Tenant switch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameUpdateContext.PrincipalName">
            <summary>
            This should be Principal Name (UPN) to which we want to transfer rights.
            Example: destination@email.com
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphGroups.ContinuationToken">
            <summary>
            This will be non-null if there is another page of data. There will never be more than
            one continuation token returned by a request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphGroups.GraphGroups">
            <summary>
            The enumerable list of groups found within a page.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphMembers.ContinuationToken">
            <summary>
            This will be non-null if there is another page of data. There will never be more than
            one continuation token returned by a request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphMembers.GraphMembers">
            <summary>
            The enumerable list of members found within a page.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphServicePrincipals.ContinuationToken">
            <summary>
            This will be non-null if there is another page of data. There will never be more than
            one continuation token returned by a request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphServicePrincipals.GraphServicePrincipals">
            <summary>
            The enumerable list of service principals found within a page.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphUsers.ContinuationToken">
            <summary>
            This will be non-null if there is another page of data. There will never be more than
            one continuation token returned by a request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.Client.PagedGraphUsers.GraphUsers">
            <summary>
            The enumerable set of users found within a page.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.DeleteAvatarAsync(System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="subjectDescriptor"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetAvatarAsync(System.String,System.Nullable{Microsoft.VisualStudio.Services.Profile.AvatarSize},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="subjectDescriptor"></param>
             <param name="size"></param>
             <param name="format"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.SetAvatarAsync(Microsoft.VisualStudio.Services.Profile.Avatar,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="avatar"></param>
             <param name="subjectDescriptor"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetCachePoliciesAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetDescriptorAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Resolve a storage key to a descriptor
            </summary>
            <param name="storageKey">Storage key of the subject (user, group, scope, etc.) to resolve</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetFederatedProviderDataAsync(Microsoft.VisualStudio.Services.Common.SubjectDescriptor,System.String,System.Nullable{System.Int64},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Acquires the full set of federated provider authentication data available for the given graph subject and provider name.
            </summary>
            <param name="subjectDescriptor">the descriptor of the graph subject that we should acquire data for</param>
            <param name="providerName">the name of the provider to acquire data for, e.g. "github.com"</param>
            <param name="versionHint">a version hint that can be used for optimistic cache concurrency and to support retries on access token failures; note that this is a hint only and does not guarantee a particular version on the response</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.CreateGroupAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContext,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Common.SubjectDescriptor},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new Azure DevOps group or materialize an existing AAD group.
            </summary>
            <param name="creationContext">The subset of the full graph group used to uniquely find the graph subject in an external provider.</param>
            <param name="scopeDescriptor">A descriptor referencing the scope (collection, project) in which the group should be created. If omitted, will be created in the scope of the enclosing account or organization. Valid only for VSTS groups.</param>
            <param name="groupDescriptors">A comma separated list of descriptors referencing groups you want the graph group to join</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.DeleteGroupAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes an Azure DevOps group from all of its parent groups.
            </summary>
            <param name="groupDescriptor">The descriptor of the group to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetGroupAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a group by its descriptor.
            </summary>
            <param name="groupDescriptor">The descriptor of the desired graph group.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ListGroupsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a list of all groups in the current scope (usually organization or account).
            </summary>
            <param name="scopeDescriptor">Specify a non-default scope (collection, project) to search for groups.</param>
            <param name="subjectTypes">A comma separated list of user subject subtypes to reduce the retrieved results, e.g. Microsoft.IdentityModel.Claims.ClaimsIdentity</param>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.UpdateGroupAsync(System.String,Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update the properties of an Azure DevOps group.
            </summary>
            <param name="groupDescriptor">The descriptor of the group to modify.</param>
            <param name="patchDocument">The JSON+Patch document containing the fields to alter.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.TranslateAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Identity Translation - Translate endpoint is supposed to be used by geneva action.
            </summary>
            <param name="masterId"></param>
            <param name="localId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.LookupMembersAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="memberLookup"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ListMembersAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of all members in a given scope.
            </summary>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="subjectTypes">A comma separated list of user subject subtypes to reduce the retrieved results, e.g. ‘msa’, ‘aad’, ‘svc’ (service identity), ‘imp’ (imported identity), etc.</param>
            <param name="subjectKinds">A comma sepearted list of user subject subjectkinds to reduce the retrieved results, e.g. ‘user’, ‘servicePrincipal’</param>
            <param name="metaTypes"></param>
            <param name="scopeDescriptor">Specify a non-default scope (collection, project) to search for users.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetMemberByDescriptorAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] This endpoint returns a result for any member that has ever been valid in the system, even if the member has since been deleted or has had all their memberships deleted. The current validity of the member is indicated through its disabled property, which is omitted when false.
            </summary>
            <param name="memberDescriptor">The descriptor of the desired member.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.AddMembershipAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new membership between a container and subject.
            </summary>
            <param name="subjectDescriptor">A descriptor to a group or user that can be the child subject in the relationship.</param>
            <param name="containerDescriptor">A descriptor to a group that can be the container in the relationship.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.CheckMembershipExistenceAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Check to see if a membership relationship between a container and subject exists.
            </summary>
            <param name="subjectDescriptor">The group or user that is a child subject of the relationship.</param>
            <param name="containerDescriptor">The group that is the container in the relationship.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetMembershipAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a membership relationship between a container and subject.
            </summary>
            <param name="subjectDescriptor">A descriptor to the child subject in the relationship.</param>
            <param name="containerDescriptor">A descriptor to the container in the relationship.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.RemoveMembershipAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes a membership between a container and subject.
            </summary>
            <param name="subjectDescriptor">A descriptor to a group or user that is the child subject in the relationship.</param>
            <param name="containerDescriptor">A descriptor to a group that is the container in the relationship.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ListMembershipsAsync(System.String,System.Nullable{Microsoft.VisualStudio.Services.Graph.GraphTraversalDirection},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the memberships where this descriptor is a member in the relationship.
            </summary>
            <param name="subjectDescriptor">Fetch all direct memberships of this descriptor.</param>
            <param name="direction">Defaults to Up.</param>
            <param name="depth">The maximum number of edges to traverse up or down the membership tree. Currently the only supported value is '1'.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetMembershipStateAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Check whether a subject is active or inactive.
            </summary>
            <param name="subjectDescriptor">Descriptor of the subject (user, group, scope, etc.) to check state of</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.LookupMembershipTraversalsAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup,System.Nullable{Microsoft.VisualStudio.Services.Graph.GraphTraversalDirection},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Traverse memberships of the given subject descriptors.
            </summary>
            <param name="membershipTraversalLookup">Fetch the descendants/ancestors of the list of descriptors depending on direction.</param>
            <param name="direction">The default value is Unknown.</param>
            <param name="depth">The default value is '1'.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.TraverseMembershipsAsync(System.String,System.Nullable{Microsoft.VisualStudio.Services.Graph.GraphTraversalDirection},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Traverse memberships of the given subject descriptor.
            </summary>
            <param name="subjectDescriptor">Fetch the descendants/ancestors of this descriptor depending on direction.</param>
            <param name="direction">The default value is Unknown.</param>
            <param name="depth">The default value is '1'.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetProviderInfoAsync(System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userDescriptor"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.RequestAccessAsync(Newtonsoft.Json.Linq.JToken,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="jsondocument"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ResolveAsync(Microsoft.VisualStudio.Services.Graph.Client.IdentityMappings,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Batch-map a list of users to new users.
            </summary>
            <param name="mappings">A list of mappings.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.CreateScopeAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="creationContext"></param>
            <param name="scopeDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.DeleteScopeAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="scopeDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetScopeAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a scope identified by its descriptor
            </summary>
            <param name="scopeDescriptor">A descriptor that uniquely identifies a scope.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.UpdateScopeAsync(System.String,Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="scopeDescriptor"></param>
            <param name="patchDocument"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.CreateServicePrincipalAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContext,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Common.SubjectDescriptor},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Materialize an existing AAD service principal into the ADO account.
            </summary>
            <param name="creationContext">The subset of the full graph service principal used to uniquely find the graph subject in an external provider.</param>
            <param name="groupDescriptors">A comma separated list of descriptors of groups you want the graph service principal to join</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.DeleteServicePrincipalAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Disables a service principal.
            </summary>
            <param name="servicePrincipalDescriptor">The descriptor of the service principal to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetServicePrincipalAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a service principal by its descriptor.
            </summary>
            <param name="servicePrincipalDescriptor">The descriptor of the desired service principal.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ListServicePrincipalsAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of all service principals in a given scope.
            </summary>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="scopeDescriptor">Specify a non-default scope (collection, project) to search for service principals.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.UpdateServicePrincipalAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContext,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Map an existing service principal to a different service principal.
            </summary>
            <param name="updateContext">The subset of the full graph service principal used to uniquely find the graph subject in an external provider.</param>
            <param name="servicePrincipalDescriptor">The descriptor of the service principal to update</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetStorageKeyAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Resolve a descriptor to a storage key.
            </summary>
            <param name="subjectDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.LookupSubjectsAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Resolve descriptors to users, groups or scopes (Subjects) in a batch.
            </summary>
            <param name="subjectLookup">A list of descriptors that specifies a subset of subjects to retrieve. Each descriptor uniquely identifies the subject across all instance scopes, but only at a single point in time.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.QuerySubjectsAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Search for Azure Devops users, or/and groups. Results will be returned in a batch with no more than 100 graph subjects.
            </summary>
            <param name="subjectQuery">The query that we'll be using to search includes the following: Query: the search term. The search will be prefix matching only. SubjectKind: "User" or "Group" can be specified, both or either ScopeDescriptor: Non-default scope can be specified, i.e. project scope descriptor</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetSubjectAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subjectDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.CreateUserAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContext,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Common.SubjectDescriptor},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Materialize an existing AAD or MSA user into the ADO account.
            </summary>
            <param name="creationContext">The subset of the full graph user used to uniquely find the graph subject in an external provider.</param>
            <param name="groupDescriptors">A comma separated list of descriptors of groups you want the graph user to join</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.DeleteUserAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Disables a user.
            </summary>
            <param name="userDescriptor">The descriptor of the user to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.GetUserAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a user by its descriptor.
            </summary>
            <param name="userDescriptor">The descriptor of the desired user.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.ListUsersAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of all users in a given scope.
            </summary>
            <param name="subjectTypes">A comma separated list of user subject subtypes to reduce the retrieved results, e.g. msa’, ‘aad’, ‘svc’ (service identity), ‘imp’ (imported identity), etc.</param>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="scopeDescriptor">Specify a non-default scope (collection, project) to search for users.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient.UpdateUserAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContext,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Map an existing user to a different user.
            </summary>
            <param name="updateContext">The subset of the full graph user used to uniquely find the graph subject in an external provider.</param>
            <param name="userDescriptor">The descriptor of the user to update</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Graph.Client.GraphCompatHttpClientBase.ListUsersAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of all users in a given scope.
            </summary>
            <param name="subjectTypes">A comma separated list of user subject subtypes to reduce the retrieved results, e.g. msa’, ‘aad’, ‘svc’ (service identity), ‘imp’ (imported identity), etc.</param>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData">
            <summary>
            Represents a set of data used to communicate with a federated provider on behalf of a particular user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData.SubjectDescriptor">
            <summary>
            The descriptor of the graph subject to which this federated provider data corresponds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData.SubjectDescriptorString">
            <summary>
            The descriptor of the graph subject to which this federated provider data corresponds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData.ProviderName">
            <summary>
            The name of the federated provider, e.g. "github.com".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData.AccessToken">
            <summary>
            The access token that can be used to communicated with the federated provider
            on behalf on the target identity, if we were able to successfully acquire one,
            otherwise <code>null</code>, if we were not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData.Version">
            <summary>
            The version number of this federated provider data, which corresponds to when it was last updated.
            Can be used to prevent returning stale provider data from the cache when the caller is aware of a newer version,
            such as to prevent local cache poisoning from a remote cache or store.
            This is the app layer equivalent of the data layer sequence ID.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.TooManyRequestedItemsException.RequestedCount">
            <summary>
            Gets the count of the requested items.
            Note: the value can be null based on whether the message disclose the limit.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Graph.TooManyRequestedItemsException.MaxLimit">
            <summary>
            Gets max limit for the requested items.
            Note: the value can be null based on whether the message disclose the limit.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.GroupLicensingRule.ExtensionRule">
            <summary>
            Represents an Extension Rule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.ExtensionRule.ExtensionId">
            <summary>
            Extension Id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.ExtensionRule.Status">
            <summary>
            Status of the group rule (applied, missing licenses, etc)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule">
            <summary>
            Represents a GroupLicensingRule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule.SubjectDescriptor">
            <summary>
            SubjectDescriptor for the rule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule.LicenseRule">
            <summary>
            License Rule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule.ExtensionRules">
            <summary>
            Extension Rules
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule.Status">
            <summary>
            The overall status of the group rule, considering the license status and all the extension statuses
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus.ApplyPending">
            <summary>
            Rule is created or updated, but apply is pending
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus.Applied">
            <summary>
            Rule is applied
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus.Incompatible">
            <summary>
            The group rule was incompatible
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus.UnableToApply">
            <summary>
            Rule failed to apply unexpectedly and should be retried
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupRuleStatusExtensions.HighestSeverity(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus})">
            <summary>
            Returns the error with the highest severity
            </summary>
            <param name="statuses"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate">
            <summary>
            Represents an GroupLicensingRuleUpdate Model
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate.SubjectDescriptor">
            <summary>
            SubjectDescriptor for the rule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate.License">
            <summary>
            New License
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate.ExtensionsToAdd">
            <summary>
            Extensions to Add
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate.ExtensionsToRemove">
            <summary>
            Extensions to Remove
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule">
            <summary>
            Represents a License Rule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.license">
            <summary>
            License
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.Status">
            <summary>
            Status of the group rule (applied, missing licenses, etc)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.License">
            <summary>
            Gets or sets the <see cref="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.License"/> for the LicenseRule
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.LastExecuted">
            <summary>
            The last time the rule was executed (regardless of whether any changes were made)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule.LastUpdated">
            <summary>
            Lasted updated timestamp of the licensing rule
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.AddGroupLicensingRuleAsync(Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule,System.Nullable{Microsoft.VisualStudio.Services.GroupLicensingRule.RuleOption},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a new group Licensing rule asynchronously
            </summary>
            <param name="licensingRule">The Licensing Rule</param>
            <param name="ruleOption">Rule Option</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.DeleteGroupLicenseRuleAsync(System.String,System.Nullable{Microsoft.VisualStudio.Services.GroupLicensingRule.RuleOption},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a group Licensing rule
            </summary>
            <param name="subjectDescriptor">subjectDescriptor</param>
            <param name="ruleOption">Rule Option</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.GetGroupLicensingRuleAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the group Licensing rule for the group with given SubjectDescriptor
            </summary>
            <param name="subjectDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.GetGroupLicensingRulesAsync(System.Int32,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.UpdateGroupLicensingRuleAsync(Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate,System.Nullable{Microsoft.VisualStudio.Services.GroupLicensingRule.RuleOption},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a group Licensing rule
            </summary>
            <param name="licensingRuleUpdate">The update model for the Licensing Rule</param>
            <param name="ruleOption">Rule Option</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.ApplyGroupLicensingRulesToAllUsersAsync(System.Nullable{Microsoft.VisualStudio.Services.GroupLicensingRule.RuleOption},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Applies group rules to the specified user
            </summary>
            <param name="ruleOption"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.GetApplicationStatusAsync(System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets application status for the specific rule
            </summary>
            <param name="operationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.RetrieveFileAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.LookupGroupLicensingRulesAsync(Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Group License Rules for the given batch of group Ids
            </summary>
            <param name="groupRuleLookup"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.ApplyGroupLicensingRulesToUserAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Applies group rules to the specified user
            </summary>
            <param name="userId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient.RemoveDirectAssignmentAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes direct assignments from, and re-applies group rules to, the specified users
            </summary>
            <param name="userId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.NameAvailability.Name">
            <summary>
            Name requested.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.NameAvailability.IsAvailable">
            <summary>
            True if the name is available; False otherwise.
            See the unavailability reason for an explanation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.NameAvailability.UnavailabilityReason">
            <summary>
            The reason why IsAvailable is False or Null
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.Region.Name">
            <summary>
            Name identifier for the region.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.Region.DisplayName">
            <summary>
            Display name for the region.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.Region.NameInAzure">
            <summary>
            Short name used in Microsoft Azure. Ex: southcentralus, westcentralus, southindia, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.HostAcquisition.Region.IsDefault">
            <summary>
            Whether the region is default or not
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.HostAcquisition.Client.HostAcquisitionHttpClient.CreateCollectionAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a new collection of the given name in the given region
            </summary>
            <param name="properties"></param>
            <param name="collectionName"></param>
            <param name="preferredRegion"></param>
            <param name="ownerDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.HostAcquisition.Client.HostAcquisitionHttpClient.GetNameAvailabilityAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="name"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.HostAcquisition.Client.HostAcquisitionHttpClient.GetRegionsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ChangedIdentities">
            <summary>
            Container class for changed identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentities.Identities">
            <summary>
            Changed Identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentities.SequenceContext">
            <summary>
            Last Identity SequenceId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentities.MoreData">
            <summary>
            More data available, set to true if pagesize is specified.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext">
            <summary>
            Context class for changed identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.IdentitySequenceId">
            <summary>
            Last Identity SequenceId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.GroupSequenceId">
            <summary>
            Last Group SequenceId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.OrganizationIdentitySequenceId">
            <summary>
            Last Group OrganizationIdentitySequenceId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupMembership">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityBase">
            <summary>
            Base Identity class to allow "trimmed" identity class in the GetConnectionData API
            Makes sure that on-the-wire representations of the derived classes are compatible with each other
            (e.g. Server responds with PublicIdentity object while client deserializes it as Identity object)
            Derived classes should not have additional [DataMember] properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.Id">
            <summary>
            Identity Identifier. Also called Storage Key, or VSID
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.SubjectDescriptor">
            <summary>
            Subject descriptor of a Graph entity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.ProviderDisplayName">
            <summary>
            The display name for the identity as specified by the source identity provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.CustomDisplayName">
            <summary>
            The custom display name for the identity (if any). Setting this property to an empty string will clear the existing
            custom display name. Setting this property to null will not affect the existing persisted value
            (since null values do not get sent over the wire or to the database)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.DisplayName">
            <summary>
            This is a computed property equal to the CustomDisplayName (if set) or the ProviderDisplayName.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.IsActive">
            <summary>
            True if the identity has a membership in any Azure Devops group in the organization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.IsContainer">
            <summary>
            True if the identity is a group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.MemberIds">
            <summary>
            Id of the members of the identity (groups only).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityBase.LocalScopeId">
            <summary>
            Get the Id of the containing scope
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityBase.GetProperty``1(System.String,``0)">
            <summary>
            Generic Property accessor. Returns default value of T if not found
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityBase.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityBase.SetProperty(System.String,System.Object)">
            <summary>
            Internal function to initialize persisted property.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor">
            <summary>
            An Identity descriptor is a wrapper for the identity type (Windows SID, Passport)
            along with a unique identifier such as the SID or PUID.
            </summary>
            <remarks>
            This is the only legacy type moved into VSS (by necessity, it is used everywhere)
            so it must support both Xml and DataContract serialization
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor">
            <summary>
            Default constructor, for Xml serializer only.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor)">
            <summary>
            Copy Constructor
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.IdentityType">
            <summary>
            Type of descriptor (for example, Windows, Passport, etc.).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.Identifier">
            <summary>
            The unique identifier for this identity, not exceeding 256 chars,
            which will be persisted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.Data">
            <summary>
            Any additional data specific to identity type.
            </summary>
            <remarks>
            Not serialized under either method.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorComparer">
            <summary>
            Class used for comparing IdentityDescriptors
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorComparer.Compare(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,Microsoft.VisualStudio.Services.Identity.IdentityDescriptor)">
            <summary>
            Compares two instances of IdentityDescriptor.
            </summary>
            <param name="x">The first IdentityDescriptor to compare. </param>
            <param name="y">The second IdentityDescriptor to compare. </param>
            <returns>Compares two specified IdentityDescriptor objects and returns an integer that indicates their relative position in the sort order.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorExtensions.IsIdentityType(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            true if the descriptor matches any of the passed types
            </summary>
            <param name="identityDescriptor"></param>
            <param name="identityTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.ReadOnlyIdentityDescriptor.#ctor">
            <summary>
            Default constructor, for Xml serializer only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorConverter">
            <summary>
            Converter to support data contract serialization.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.AccountName">
            <summary>
            NT account name (domain\alias)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.AdministratorsGroup">
            <summary>
            Find project admin group
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Identifier">
            <summary>
            Find the identity using the identifier
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.MailAddress">
            <summary>
            Email address
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.General">
             <summary>
             A general search for an identity. 
             </summary>
             <remarks>
             This is the default search factor for shorter overloads of ReadIdentity, and typically the correct choice for user input.
             
             Use the general search factor to find one or more identities by one of the following properties:
             * Display name
             * account name
             * UniqueName
            
             UniqueName may be easier to type than display name. It can also be used to indicate a single identity when two or more identities share the same display name (e.g. "John Smith")
             </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Alias">
            <summary>
            Alternate login username
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Domain">
            <summary>
            Find identity using Domain/TenantId
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.DirectoryAlias">
            <summary>
            Find identity using DirectoryAlias
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.TeamGroupName">
            <summary>
            Find a team group by its name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.LocalGroupName">
            <summary>
            Find a local group (i.e. VSTS or TFS rather than AAD or AD group) by its name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.None">
            <summary>
            Query will not return any membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.Direct">
            <summary>
            Query will return only direct membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.Expanded">
            <summary>
            Query will return expanded membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.ExpandedUp">
            <summary>
            Query will return expanded up membership data (parents only)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.ExpandedDown">
            <summary>
            Query will return expanded down membership data (children only)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.RestoreProjectOptions.All">
            <summary>
            Brings back all memberships whose members are not owned by the scope
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.RestoreProjectOptions.Visible">
            <summary>
            Brings back some memberships whose members are not owned by the scope.
            The membership will be a subset of All with the additional requirement
            that the members have visibilty into the project collection scope.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentitySelf">
            <summary>
            Identity information.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.Id">
            <summary>
            This is the VSID of the home tenant profile. If the profile is signed into the home tenant or if the profile
            has no tenants then this Id is the same as the Id returned by the profile/profiles/me endpoint. Going forward
            it is recommended that you use the combined values of Origin, OriginId and Domain to uniquely identify a user 
            rather than this Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.DisplayName">
            <summary>
            The display name. For AAD accounts with multiple tenants this is the display name of the profile in the home tenant.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.AccountName">
            <summary>
            The UserPrincipalName (UPN) of the account. This value comes from the source provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.Origin">
            <summary>
            The type of source provider for the origin identifier.
            For MSA accounts this is "msa". For AAD accounts this is "aad".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.OriginId">
            <summary>
            The unique identifier from the system of origin. If there are multiple tenants this is the 
            unique identifier of the account in the home tenant.
            (For MSA this is the PUID in hex notation, for AAD this is the object id.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.Domain">
            <summary>
            This represents the name of the container of origin.
            For AAD accounts this is the tenantID of the home tenant.
            For MSA accounts this is the string "Windows Live ID".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentitySelf.Tenants">
            <summary>
            For AAD accounts this is all of the tenants that this account is a member of.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.SequenceContext.IsUnspecified">
            <summary>
            -1 Is generally used in various random places to denote unspecified.
            It is currently unknown what was the reason for caching such value as the documentation was never created.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.GetMruIdentitiesAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="identityId"></param>
            <param name="containerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.SetMruIdentitiesAsync(System.Collections.Generic.IEnumerable{System.Guid},System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="identityIds"></param>
            <param name="identityId"></param>
            <param name="containerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.UpdateMruIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.Mru.MruIdentitiesUpdateData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="updateData"></param>
            <param name="identityId"></param>
            <param name="containerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.AddMruIdentitiesAndRemoveInactiveAsync(Microsoft.VisualStudio.Services.Identity.Mru.MruIdentitiesUpdateData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] We needed to create a new resource entirely because of the breaking change, all inheirited methods are pointing to the resource location id used in MruIdentitiesController.
            </summary>
            <param name="updateData"></param>
            <param name="identityId"></param>
            <param name="containerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupCreationException">
            <summary>
            The group you are creating already exists, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDomainMismatchException">
            <summary>
            IMS domain is incorrect for operation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddMemberCyclicMembershipException">
            <summary>
            You are trying to add a group that is a parent group of the current group, throw
            by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupScopeCreationException">
            <summary>
            You are trying to create a group scope that already exists
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IncompatibleScopeException">
            <summary>
            Group cannot be created in the requested scope since the requested scope is not within the root scope.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddMemberIdentityAlreadyMemberException">
            <summary>
            Trying to add a member to a group that is already a member of the group, thrown by the data tier.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveSelfFromAdminGroupException">
            <summary>
            You can't remove yourself from the global namespace admins group and lock yourself out of your collection/hosting account.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveGroupMemberNotMemberException">
            <summary>
            Group member you are trying to delete was not a member of the group.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalMemberException">
            <summary>
            Thrown when an AddMemberToGroup call is made to put an identity X into group Y, but the action
            is not legal for some reason related to identity X
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalWindowsIdentityException">
            <summary>
            Cannot add windows identity to hosted deployment
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalInternetIdentityException">
            <summary>
            Cannot add internet identity to on premise deployment
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveNonexistentGroupException">
            <summary>
            Trying to remove a group that doesn't exist, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveSpecialGroupException">
            <summary>
            You can't remove any of the special groups: the global administrators group, the
            service users group, the team foundation valid users group, or a project administration
            group.  Thrown by the data tier.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.FindGroupSidDoesNotExistException">
            <summary>
            Group you were looking up does not exist, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupRenameException">
            <summary>
            Group rename error, new name already in use
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddProjectGroupProjectMismatchException">
            <summary>
            You cannot add a project group to a project group in a different project
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupScopeDoesNotExistException">
            <summary>
            Unable to locate project for the project uri passed in
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.NotApplicationGroupException">
            <summary>
            This exception is thrown when a user tries to add a group that is
            not an application group.  We do not modify the memberships of Windows groups.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ModifyEveryoneGroupException">
            <summary>
            You must specify a group when removing members from a group, thrown by the app tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotFoundException">
            <summary>
            ReadIdentityFromSource returned null and we need an identity to continue the operation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotFoundInCollectionException">
            <summary>
            Identity is not part of current organization
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotFoundInCurrentDirectoryException">
            <summary>
            Identity is not part of calling identity's directory 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotServiceIdentityException">
            <summary>
            The identity is not a service identity
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityAlreadyExistsException">
            <summary>
            The identity already exists
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.NotASecurityGroupException">
            <summary>
            This exception is thrown when a user tries to add a distribution list
            to a group.  We only allow security groups to used.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityProviderUnavailableException">
            <summary>
            Identity provider not available
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.FallbackIdentityOperationNotAllowedException">
            <summary>
            Indicates that a caller action triggered an attempt to read or update identity information at the deployment level
            directly from (or using data from) a sharded host after dual writes had been disabled, meaning that the fallback is not allowed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.CannotFindLegacySpsIdentityStoreException">
            <summary>
            Thrown when we were trying to create a client to talk to the legacy SPS identity store (e.g. SPS SU1),
            but were not able to do so due to an unexpected response.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RestoreGroupScopeValidationException">
            <summary>
            Unable to restore group scope
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityLoopingLoginException">
            <summary>
            Thrown when looping login is detected
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.CacheHttpClient.CacheAsync(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="data"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.CacheHttpClient.DeleteAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cacheKey"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.CacheHttpClient.GetAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cacheKey"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reads all identities
            </summary>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in descriptors
            </summary>
            <param name="descriptors">List of IdentityDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},Microsoft.VisualStudio.Services.Identity.RequestHeadersContext,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in descriptors
            </summary>
            <param name="descriptors">List of IdentityDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Common.SocialDescriptor},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in subject descriptors
            </summary>
            <param name="socialDescriptors">List of SocialDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Common.SocialDescriptor},Microsoft.VisualStudio.Services.Identity.RequestHeadersContext,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in descriptors
            </summary>
            <param name="subjectDescriptors">List of SubjectDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Common.SubjectDescriptor},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in subject descriptors
            </summary>
            <param name="subjectDescriptors">List of SubjectDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Common.SubjectDescriptor},Microsoft.VisualStudio.Services.Identity.RequestHeadersContext,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in descriptors
            </summary>
            <param name="subjectDescriptors">List of SubjectDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{System.Guid},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in identifiers
            </summary>
            <param name="identityIds">Guids representing unique identifiers for the identities</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{System.Guid},Microsoft.VisualStudio.Services.Identity.RequestHeadersContext,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in identifiers
            </summary>
            <param name="identityIds">Guids representing unique identifiers for the identities</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter,System.String,Microsoft.VisualStudio.Services.Identity.ReadIdentitiesOptions,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the requested search factor and value
            </summary>
            <param name="searchFilter"></param>
            <param name="filterValue"></param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.GetDescriptorByIdAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="id"></param>
            <param name="isMasterId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ListUsersAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="scopeDescriptor"></param>
            <param name="continuationToken"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for account errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement">
            <summary>
            Represents a license granted to a user in an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.AccountId">
            <summary>
            Gets or sets the id of the account to which the license belongs
            </summary>
            <remarks>Optional since it was not originally included in the REST contract.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.UserId">
            <summary>
            Gets the id of the user to which the license belongs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.User">
            <summary>
            Identity information of the user to which the license belongs
            </summary>
            <remarks>Optional because not all clients use this.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.License">
            <summary>
            Gets or sets the <see cref="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.License"/> for the entitlement
            </summary>        
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.AssignmentSource">
            <summary>
            Assignment Source
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.Origin">
            <summary>
            Licensing origin
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.UserStatus">
            <summary>
            The status of the user in the account
            </summary>
            <remarks>Serialized as "status" for back compat with previous clients.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.AssignmentDate">
            <summary>
            Gets or sets the date the license was assigned
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.LastAccessedDate">
            <summary>
            Gets or sets the date of the user last sign-in to this account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.DateCreated">
            <summary>
            Gets or sets the creation date of the user in this account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.LastUpdated">
            <summary>
            Last updated timestamp of the user in this account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.Rights">
            <summary>
            The computed rights of this user in the account.
            </summary>
            <remarks>Optional it was not originally included in the REST contract.</remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountEntitlementUpdateModel">
            <summary>
            Model for updating an AccountEntitlement for a user, used for the Web API
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlementUpdateModel.License">
            <summary>
            Gets or sets the license for the entitlement
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountLicense">
            <summary>
            Represents an Account license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.EarlyAdopter">
            <summary>
            An Early Adopter License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Stakeholder">
            <summary>
            A Stakeholder License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Express">
            <summary>
            An Express License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Professional">
            <summary>
            A Professional License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Advanced">
            <summary>
            An Advanced License
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.#ctor(Microsoft.VisualStudio.Services.Licensing.AccountLicenseType)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.AccountLicense"/> class
            </summary>
            <param name="license">The type of license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicense.License">
            <summary>
            Gets the license type for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.CompareTo(Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Compare(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared.</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.op_GreaterThan(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.op_LessThan(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.AccountLicenseType)">
            <summary>
            Gets a <see cref="P:Microsoft.VisualStudio.Services.Licensing.AccountLicense.License"/> instance for the provided license type
            </summary>
            <param name="license">The type of license</param>
            <returns>A license for the provided license type</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><em>license</em> was not in the list of allowed values</exception>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicenseUsage.ProvisionedCount">
            <summary>
            Amount that has been purchased
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicenseUsage.UsedCount">
            <summary>
            Amount currently being used.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicenseUsage.DisabledCount">
            <summary>
            Amount that is disabled (Usually from licenses that were provisioned, 
            but became invalid due to loss of subscription in a new billing cycle)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicenseUsage.PendingProvisionedCount">
            <summary>
            Amount that will be purchased in the next billing cycle
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.None">
            <summary>
            No service rights. The user cannot access the account
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Express">
            <summary>
            Default or minimum service level
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Advanced">
            <summary>
            Premium service level - either by purchasing on the Azure portal or by purchasing the appropriate MSDN subscription
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.AdvancedPlus">
            <summary>
            Only available to a specific set of MSDN Subscribers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Stakeholder">
            <summary>
            Stakeholder service level
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment">
            <summary>
            Model for assigning an extension to users, used for the Web API
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment.ExtensionGalleryId">
            <summary>
            Gets or sets the extension ID to assign.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment.UserIds">
            <summary>
            Gets or sets the user IDs to assign the extension to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment.LicensingSource">
            <summary>
            Gets or sets the licensing source.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment.IsAutoAssignment">
            <summary>
            Set to true if this a auto assignment scenario.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.ExtensionSource">
            <summary>
            Model for assigning an extension to users, used for the Web API
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionSource.ExtensionGalleryId">
            <summary>
            extension Identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionSource.LicensingSource">
            <summary>
            The licensing source of the extension. Account, Msdn, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.ExtensionSource.AssignmentSource">
            <summary>
            Assignment Source
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IClientRight">
            <summary>
            Container for client licensing rights
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IServiceRight">
            <summary>
            Container for service licensing rights
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IUsageRight">
            <summary>
            Container for licensing rights
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Attributes">
            <summary>
            Rights data
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.ExpirationDate">
            <summary>
            Rights expiration
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Name">
            <summary>
            Name, uniquely identifying a usage right
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.License">
            <summary>
            The base class for a specific license source and license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.None">
            <summary>
            Represents a non-existent license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.Auto">
            <summary>
            Represents a license that is auto assigned at user sign-in (e.g. from msdn licenses)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.#ctor(Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the License type
            </summary>
            <param name="source">The source of the license</param>
            <param name="licenseEnumType">The type for the license enum</param>
            <param name="license">The value for the license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.License.Source">
            <summary>
            Gets the source of the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetLicenseAsInt32">
            <summary>
            Gets the internal value for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Determines whether the specified <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> is equal to the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Parse(System.String)">
            <summary>
            Parses the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <returns>The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></returns>
            <exception cref="T:System.FormatException">The <em>text</em> was in the wrong format</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Parse(System.String,System.Boolean)">
            <summary>
            Parses the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="ignoreCase">A value indicating whether to ignore the case of the text</param>
            <returns>The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></returns>
            <exception cref="T:System.FormatException">The <em>text</em> was in the wrong format</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.TryParse(System.String,Microsoft.VisualStudio.Services.Licensing.License@)">
            <summary>
            Tries to parse the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="license">The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></param>
            <returns>True if the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> could be parsed; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.TryParse(System.String,System.Boolean,Microsoft.VisualStudio.Services.Licensing.License@)">
            <summary>
            Tries to parse the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="ignoreCase">A value indicating whether to ignore the case of the text</param>
            <param name="license">The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></param>
            <returns>True if the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> could be parsed; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are equivalent
            </summary>
            <param name="left">The first value</param>
            <param name="right">The second value</param>
            <returns>True if both values are equivalent; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.IsNullOrNone(Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the license is null or <see cref="F:Microsoft.VisualStudio.Services.Licensing.License.None"/>
            </summary>
            <param name="license">The license</param>
            <returns>true if the license is either null or <see cref="F:Microsoft.VisualStudio.Services.Licensing.License.None"/>; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetLicense(Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Int32)">
            <summary>
            Gets the license for the provided source and license type
            </summary>
            <param name="source">The source</param>
            <param name="license">The license type</param>
            <returns>The license</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_Equality(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are equivalent
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>True if both values are equivalent; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_Inequality(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are not equivalent
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>True if values are not equivalent; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_GreaterThan(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_GreaterThanOrEqual(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_LessThan(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_LessThanOrEqual(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.License.NoLicense">
            <summary>
            A concrete <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> that represents no license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.NoLicense.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.NoLicense"/> class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.NoLicense.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.Msdn">
            <summary>
            Represents an Auto license where the source provider is MSDN
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense"/> class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.LicensingSource)">
            <summary>
            Gets a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense"/> instance for the provided licensing source
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter">
            <summary>
            Converts between a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> and a JSON-serialized license string
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object</param>
            <returns>true if this instance can convert the specified object type; otherwise, false.</returns>        
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The Newtonsoft.Json.JsonWriter to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter">
            <summary>
            Performs type conversion for a License
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Returns whether the given value object is valid for this type and for the specified context.</summary>
            <returns>true if the specified value is valid for this object; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="value">The <see cref="T:System.Object" /> to test for validity. </param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.EntitlementCode">
            <summary>
            Entilement id assigned to Entitlement in Benefits Database.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.EntitlementName">
            <summary>
            Entitlement Name e.g. Downloads, Chat.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.EntitlementType">
            <summary>
            Type of Entitlement e.g. Downloads, Chat.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.IsEntitlementAvailable">
            <summary>
            Entitlement availability
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.IsActivated">
            <summary>
            Entitlement activation status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionExpirationDate">
            <summary>
            Subscription Expiration Date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionId">
            <summary>
            Subscription id which identifies the subscription itself. This is the Benefit Detail Guid from BMS.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionLevelCode">
            <summary>
            Identifier of the subscription or benefit level.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionLevelName">
            <summary>
            Name of subscription level.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionStatus">
            <summary>
            Subscription Status Code (ACT, PND, INA ...).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.SubscriptionChannel">
            <summary>
            Write MSDN Channel into CRCT (Retail,MPN,VL,BizSpark,DreamSpark,MCT,FTE,Technet,WebsiteSpark,Other)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement.ToString">
            <summary>
            Overloading ToString for objects of this class 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.MsdnLicense">
            <summary>
            Represents an Msdn license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Eligible">
            <summary>
            The account user is MSDN Eligible
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Professional">
            <summary>
            The account user has an MSDN Professional license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Platforms">
            <summary>
            The account user has an MSDN Platforms license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.TestProfessional">
            <summary>
            The account user has an MSDN TestProfessional license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Premium">
            <summary>
            The account user has an MSDN Premium license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Ultimate">
            <summary>
            The account user has an MSDN Ultimate license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Enterprise">
            <summary>
            The account user has an MSDN Enterprise license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.#ctor(Microsoft.VisualStudio.Services.Licensing.MsdnLicenseType)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.MsdnLicense"/> class
            </summary>
            <param name="license">The type of license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.License">
            <summary>
            Gets the license type for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.CompareTo(Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Compare(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared.</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.op_GreaterThan(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.op_LessThan(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.MsdnLicenseType)">
            <summary>
            Gets a <see cref="P:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.License"/> instance for the provided license type
            </summary>
            <param name="license">The type of license</param>
            <returns>A license for the provided license type</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><em>license</em> was not in the list of allowed values</exception>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.PagedAccountEntitlements">
            <summary>
            Represents a page of account entitlements, with a continuation token to use to fetch the next page of results
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.AssignExtensionToUsersAsync(System.String,System.Collections.Generic.IList{System.Guid},System.Boolean,System.Object,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.GetExtensionsAssignedToUserAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns extensions that are currently assigned to the user in the account
            </summary>
            <param name="userId">The user's identity id.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.BulkGetExtensionsAssignedToUsersAsync(System.Collections.Generic.IList{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns extensions that are currently assigned to the users in the account
            </summary>
            <param name="userId">The user's identity id.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.GetExtensionsAssignedToUsersBatchAsync(System.Collections.Generic.IList{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            This method has become deprecated
            </summary>
            <param name="userIds"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.GetExtensionStatusForUsersAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns a dictionary of userIds to lists of extensionIds cooresponding
            extensions that are assigned to said users in the current account
            </summary>
            <param name="extensionId">The extension to check the status of the users for.</param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.UnassignExtensionFromUsersAsync(System.String,System.Collections.Generic.IList{System.Guid},Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Object,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.AssignExtensionToAllEligibleUsersAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Assigns the access to the given extension for all eligible users in the account
            that do not already have access to the extension though bundle or account assignment
            </summary>
            <param name="extensionId">The extension id to assign the access to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient.GetEligibleUsersForExtensionAsync(System.String,Microsoft.VisualStudio.Services.Licensing.ExtensionFilterOptions,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns users that are currently eligible to assign the extension to.
            the list is filtered based on the value of ExtensionFilterOptions
            </summary>
            <param name="requestContext">The application level request context.</param>
            <param name="extensionId">The extension to check the eligibility of the users for.</param>
            <param name="options">The options to filter the list.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.Client.IAccountExtensionLicensingHttpClient">
            <summary>
            Temporary interface to support the transition to the new AccountLicensing resource area
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient">
            <summary>
            Temporary duplicate of the account extension licensing HTTP client
            </summary>
            <remarks>
            Ensure that only AccountLicensingResourceIds are used here, not their LicensingResourceIds counterparts
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.AssignExtensionToUsersAsync(System.String,System.Collections.Generic.IList{System.Guid},System.Boolean,System.Object,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.GetExtensionsAssignedToUserAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns extensions that are currently assigned to the user in the account
            </summary>
            <param name="userId">The user's identity id.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.BulkGetExtensionsAssignedToUsersAsync(System.Collections.Generic.IList{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns extensions that are currently assigned to the users in the account
            </summary>
            <param name="userId">The user's identity id.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.GetExtensionsAssignedToUsersBatchAsync(System.Collections.Generic.IList{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            This method has become deprecated
            </summary>
            <param name="userIds"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.GetExtensionStatusForUsersAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns a dictionary of userIds to lists of extensionIds cooresponding
            extensions that are assigned to said users in the current account
            </summary>
            <param name="extensionId">The extension to check the status of the users for.</param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.UnassignExtensionFromUsersAsync(System.String,System.Collections.Generic.IList{System.Guid},Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Object,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.AssignExtensionToAllEligibleUsersAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Assigns the access to the given extension for all eligible users in the account
            that do not already have access to the extension though bundle or account assignment
            </summary>
            <param name="extensionId">The extension id to assign the access to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient.GetEligibleUsersForExtensionAsync(System.String,Microsoft.VisualStudio.Services.Licensing.ExtensionFilterOptions,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns users that are currently eligible to assign the extension to.
            the list is filtered based on the value of ExtensionFilterOptions
            </summary>
            <param name="requestContext">The application level request context.</param>
            <param name="extensionId">The extension to check the eligibility of the users for.</param>
            <param name="options">The options to filter the list.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase">
            <summary>
            This class contains deprecated overloads to maintain binary compatibility
            </summary>
            <remarks>
            See: https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/2729/Rest-Client-Generation#Toolsets.5CAPICompatCheck.5CAPICompatCheck.targets.28x.2Cy.29:_error
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase.CreateContentFor``1(``0)">
            <summary>
            Creates an <see cref="T:System.Net.Http.ObjectContent`1"/> for the specified value using the current <see cref="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Formatter"/>
            </summary>
            <typeparam name="T">The type for the value</typeparam>
            <param name="value">The value</param>
            <returns>An <see cref="T:System.Net.Http.ObjectContent`1"/> for the provided value</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.Client.IAccountLicensingHttpClient">
            <summary>
            Temporary interface to support the transition to the new AccountLicensing resource area
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient">
            <summary>
            A fork of the LicensingHttpClient, supporting collection-level licensing requests only, using the "AccountLicensing" resource area,
            a subset of the "Licensing" area, which used to support deployment and collection level calls.
            </summary>
            <remarks>
            Ensure that only AccountLicensingResourceIds are used here, not their LicensingResourceIds counterparts
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient.CreateContentFor``1(``0)">
            <summary>
            Creates an <see cref="T:System.Net.Http.ObjectContent`1"/> for the specified value using the current <see cref="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Formatter"/>
            </summary>
            <typeparam name="T">The type for the value</typeparam>
            <param name="value">The value</param>
            <returns>An <see cref="T:System.Net.Http.ObjectContent`1"/> for the provided value</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.LicensingResourceIds">
            <summary>
            Client (IDE) Licensing
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.AccessMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.Moniker">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.AccessPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.ServiceOwner">
            <summary>
            The service which owns this access mapping e.g. TFS, ELS, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.VirtualDirectory">
            <summary>
            Part of the access mapping which applies context after the access point
            of the server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.AccessMapping.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ConnectionData">
            <summary>
            Data transfer class that holds information needed to set up a 
            connection with a VSS server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.AuthenticatedUser">
            <summary>
            The Id of the authenticated user who made this request. More information about the user can be
            obtained by passing this Id to the Identity service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.AuthorizedUser">
            <summary>
            The Id of the authorized user who made this request. More information about the user can be
            obtained by passing this Id to the Identity service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.InstanceId">
            <summary>
            The instance id for this host.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.DeploymentId">
            <summary>
            The id for the server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.DeploymentType">
            <summary>
            The type for the server Hosted/OnPremises.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.LastUserAccess">
            <summary>
            The last user access for this instance.  Null if not requested specifically.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.LocationServiceData">
            <summary>
            Data that the location service holds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.WebApplicationRelativeDirectory">
            <summary>
            The virtual directory of the host we are talking to.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ConnectionData.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.LocationServiceData">
            <summary>
            Data transfer class used to transfer data about the location
            service data over the web service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ServiceOwner">
            <summary>
            The identifier of the deployment which is hosting this location data
            (e.g. SPS, TFS, ELS, Napa, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.AccessMappings">
            <summary>
            Data about the access mappings contained by this location service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ClientCacheFresh">
            <summary>
            Data that the location service holds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ClientCacheTimeToLive">
            <summary>
            The time to live on the location service cache.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.DefaultAccessMappingMoniker">
            <summary>
            The default access mapping moniker for the server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.LastChangeId">
            <summary>
            The obsolete id for the last change that
            took place on the server (use LastChangeId64).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.LastChangeId64">
            <summary>
            The non-truncated 64-bit id for the last change that
            took place on the server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ServiceDefinitions">
            <summary>
            Data about the service definitions contained by this location service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.LocationServiceData.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.RelativeToSetting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ServiceInterfaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.ApplicationIdentifier">
            <summary>
            If a Location Service has an entry for an application location service, that
            location service definition will have an identifier of this value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.RootIdentifier">
            <summary>
            Pointer to the root location service instance
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.SelfReferenceIdentifier">
            <summary>
            All Location Services have a reference to their own service definition.  That
            service definition has an identifier of this value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.LocationMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationMapping.AccessMappingMoniker">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationMapping.Location">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.LocationMapping.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ServiceDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ServiceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Identifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.RelativeToSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.RelativePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ServiceOwner">
            <summary>
            The service which owns this definition e.g. TFS, ELS, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.LocationMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.GetProperty``1(System.String,``0)">
            <summary>
            Generic Property accessor. Returns default value of T if not found
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.SetProperty(System.String,System.Object)">
            <summary>
            Internal function to initialize persisted property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.HasModifiedProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ResetModifiedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ResourceVersion">
            <summary>
            The current resource version supported by this resource location. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MinVersion">
            <summary>
            Minimum api version that this resource supports. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MinVersionString">
            <summary>
            Minimum api version that this resource supports. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MaxVersion">
            <summary>
            Maximum api version that this resource supports (current server version for this resource). Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MaxVersionString">
            <summary>
            Maximum api version that this resource supports (current server version for this resource). Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ReleasedVersion">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ReleasedVersionString">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.GetLocationMapping(Microsoft.VisualStudio.Services.Location.AccessMapping)">
            <summary>
                Returns the LocationMapping for the AccessMapping provided or null
                if this ServiceDefinition does not have a LocationMapping for the provided
                AccessMapping. This function will always return null if it is called
                on a non-relative ServiceDefinition.
            </summary>
            <param name="accessMapping">
                The AccessMapping to find the LocationMapping for.
            </param>
            <returns>
                The LocationMapping for the AccessMapping provided or null if this 
                ServiceDefinition does not have a LocationMapping for the provided
                AccessMapping. This function will always return null if it is called
                on a non-relative ServiceDefinition.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.AddLocationMapping(Microsoft.VisualStudio.Services.Location.AccessMapping,System.String)">
            <summary>
            Adds a location mapping for the provided access mapping and location
            to the service definition.  Note that if a mapping already exists for
            the provided access mapping, it will be overwritten.
            </summary>
            <param name="accessMapping">The access mapping this location mapping is for.
            This access mapping must already be registered in the LocationService.  To create
            a new access mapping, see LocationService.ConfigureAccessMapping</param>
            <param name="location">This value must be null if the RelativeToSetting
            for this ServiceDefinition is something other than FullyQualified.  If
            this ServiceDefinition has a RelativeToSetting of FullyQualified, this
            value must not be null and should be the location where this service resides
            for this access mapping.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for location errors
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.NameResolution.NameResolutionEntry.Force">
            <summary>
            When set to true, we will insert the name resolution record
            even if a conflicting record exists in another namespace.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Notification.RecipientMetadata">
            <summary>
            Notification-related metadata for a specific user
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Notifications.EventActor">
            <summary>
            Defines an "actor" for an event.  
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.EventActor.Role">
            <summary>
            Required: The event specific name of a role.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.EventActor.Id">
            <summary>
            Required: This is the identity of the user for the specified role.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Notifications.EventScope">
            <summary>
            Defines a scope for an event.  
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.EventScope.Type">
            <summary>
            Required: The event specific type of a scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.EventScope.Id">
            <summary>
            Required: This is the identity of the scope for the type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.EventScope.Name">
            <summary>
            Optional: The display name of the scope
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent">
            <summary>
            This is the type used for firing notifications intended for the subsystem in the Notifications SDK.
            For components that can't take a dependency on the Notifications SDK directly, they can use  
            ITeamFoundationEventService.PublishNotification and the Notifications SDK ISubscriber implementation
            will get it.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.EventType">
            <summary>
            Required: The name of the event.  This event must be registered in the context it is being fired.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.Data">
            <summary>
            Required: The event payload.  If Data is a string, it must be in Json or XML format.  Otherwise it must have a 
            serialization format attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.Actors">
            <summary>
            Optional: A list of actors which are additional identities with corresponding roles that are relevant to 
            the event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.Scopes">
            <summary>
            Optional: A list of scopes which are relevant to the event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.ArtifactUris">
            <summary>
            Optional: A list of artifacts referenced or impacted by this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.ProcessDelay">
            <summary>
            How long to wait before processing this event.  The default is to process immediately.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.ExpiresIn">
            <summary>
            How long before the event expires and will be cleaned up.  The default is to use the system default.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.SourceEventCreatedTime">
            <summary>
            This is the time the original source event for this VssNotificationEvent was created.  For example, for 
            something like a build completion notification SourceEventCreatedTime should be the time the build finished
            not the time this event was raised.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.ItemId">
            <summary>
            The id of the item, artifact, extension, project, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.HasActors">
            <summary>
            Quick check to see if there are any Actors to avoid creating the list during processing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.HasScopes">
            <summary>
            Quick check to see if there are any Scopes to avoid creating the list during processing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent.HasArtifactUris">
            <summary>
            Quick check to see if there are any ArtifactUris to avoid creating the list during processing.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.Client.OAuthHttpClient.HandleResponseAsync(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            There are 3 error response kinds:
              1. An authorization error with no redirect URL.
              2. An authorization error with redirect URL.
              3. A token request error.
              
            If the status code is not 302, we will throw an exception with the response body's content
            read as a string, which contains the specific error code.
            
            http://tools.ietf.org/html/rfc6749#section-4.1.2
            http://tools.ietf.org/html/rfc6749#section-5.2
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider">
            <summary>
            Represents an object which participates in setting parameters for an OAuth token request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets applicable parameters on the provided parameters collection for a token request in which the provider
            is a participant.
            </summary>
            <param name="parameters">The current set of parameters</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken">
            <summary>
            Provides encapsulation for opaque access tokens in OAuth token exchanges.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken.#ctor(System.String)">
            <summary>
            Initializes a new <c>VssOAuthAccessToken</c> instance with the specified value.
            </summary>
            <param name="value">The value of the access token, encoded as a string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new <c>VssOAuthAccessToken</c> instance with the specified value and expiration time.
            </summary>
            <param name="value">The value of the access token, encoded as a string</param>
            <param name="validTo">The date and time when this token is no longer valid</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken.#ctor(Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebToken)">
            <summary>
            Initializes a new <c>VssOAuthAccessToken</c> instance with the specified JWT.
            </summary>
            <param name="value">The value of the access token, encoded as a JsonWebToken</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken.ValidTo">
            <summary>
            Gets the date and time at which this token expires.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken.Value">
            <summary>
            Gets the value of the current token.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential">
            <summary>
            Provides authentication for OAuth 2.0 access tokens issued without credentials.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential.#ctor(System.String)">
            <summary>
            Initializes a new <c>VssOAuthAccessTokenCredential</c> instance with the specified access token encoded as
            a string.
            </summary>
            <param name="accessToken">The access token value encoded as a string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential.#ctor(Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebToken)">
            <summary>
            Initializes a new <c>VssOAuthAccessTokenCredential</c> instance with the specified access token encoded as
            a JWT.
            </summary>
            <param name="accessToken">The access token value encoded as a JWT</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken)">
            <summary>
            Initializes a new <c>VssOAuthAccessTokenCredential</c> instance with the specified access token.
            </summary>
            <param name="accessToken">The access token</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential.CredentialType">
            <summary>
            Gets the type of the current credentials.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential.OnCreateTokenProvider(System.Uri,Microsoft.VisualStudio.Services.Common.IHttpResponse)">
            <summary>
            Returns a no-op token provider. This credential does not provide token acquisition functionality.
            </summary>
            <param name="serverUrl">The server URL from which the challenge originated</param>
            <param name="response">The authentication challenge response message</param>
            <returns>A no-op token provider for supplying the access token</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential">
            <summary>
            Provides client credentials for proof of identity in OAuth 2.0 token exchanges.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential.CredentialType">
            <summary>
            Gets the type of credentials for this instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential.Dispose">
            <summary>
            Disposes of managed resources referenced by the credentials.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            When overridden in a derived class, the corresponding token request parameters should be set for the 
            credential type represented by the instance.
            </summary>
            <param name="parameters">The parameters to post to an authorization server</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialsGrant">
            <summary>
            Represents the client credentials grant for OAuth 2.0 token exchanges.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialsGrant.#ctor">
            <summary>
            Initializes a new <c>VssOAuthClientCredentials</c> grant.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialType">
            <summary>
            Lists the supported client credential types
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialType.Password">
            <summary>
            Client Password for OAuth 2.0 Client Authentication
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialType.JwtBearer">
            <summary>
            JWT Bearer Token Profile for OAuth 2.0 Client Authentication
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCodeGrant.Code">
            <summary>
            Gets the authorization code provided by the authorization server.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants">
            <summary>
            Provides constants used in token exchanges for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Assertion">
            <summary>
            Assertion parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.AuthorizationCodeGrantType">
            <summary>
            Authorization Code Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.ClientCredentialsGrantType">
            <summary>
            Client Credentials Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.ClientId">
            <summary>
            Client ID parameter for client authentication.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.ClientSecret">
            <summary>
            Client secret parameter for client authentication.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.ClientAssertion">
            <summary>
            Client assertion parameter for client authentication.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.ClientAssertionType">
            <summary>
            Client assertion type parameter for client authentication.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Code">
            <summary>
            Code parameter for authorization code token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.GrantType">
            <summary>
            Grant type parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.JwtBearerAuthorizationGrantType">
            <summary>
            JWT Bearer Token Grant Type Profile for OAuth 2.0
            </summary>
            <remarks>
            See http://tools.ietf.org/html/rfc7523
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.JwtBearerClientAssertionType">
            <summary>
            JWT Bearer Token Profile for OAuth 2.0 Client Authentication
            </summary>
            <remarks>
            See http://tools.ietf.org/html/rfc7523
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.RefreshToken">
            <summary>
            Refresh token parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.RefreshTokenGrantType">
            <summary>
            Refresh Token Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Realm">
            <summary>
            Realm parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Service">
            <summary>
            Service parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Scope">
            <summary>
            Scope parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.AccessToken">
            <summary>
            Access token parameter for token requests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.AccessTokenGrantType">
            <summary>
            Access Token Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants.Tenant">
            <summary>
            Tenant parameter for token requests.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential">
            <summary>
            Provides authentication with a secure token service using the OAuth 2.0 protocol.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.#ctor(System.Uri,Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant,Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential,Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters,Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken)">
            <summary>
            Initializes a new <c>VssOAuthCredential</c> instance with the specified authorization grant and client 
            credentials.
            </summary>
            <param name="authorizationUrl">The location of the token endpoint for the target authorization server</param>
            <param name="grant">The grant to provide for the token exchange</param>
            <param name="clientCredential">The client credentials to provide for the token exchange</param>
            <param name="tokenParameters">An optional set of token parameters which, if present, are sent in the request body of the token request</param>
            <param name="accessToken">An optional access token which, if present, is used prior to requesting new tokens</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.CredentialType">
            <summary>
            Gets the type of issued token credential.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.AuthorizationUrl">
            <summary>
            Gets the authorization endpoint for this credential.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.Grant">
            <summary>
            Gets the grant for this credential.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.ClientCredential">
            <summary>
            Gets the client credentials for this credential.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.TokenParameters">
            <summary>
            Gets the set of additional token parameters configured for the credential.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential.IsAuthenticationChallenge(Microsoft.VisualStudio.Services.Common.IHttpResponse)">
            <summary>
            Determines whether or not the response reperesents an authentication challenge for the current credential.
            </summary>
            <param name="webResponse">The response to analyze</param>
            <returns>True if the web response indicates an authorization challenge; otherwise, false</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes">
            <summary>
            Provides the possible error codes which can result from a bad token exchange in OAuth 2.0.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.AccessDenied">
            <summary>
            The resource owner or authorization server denied the request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.InvalidClient">
            <summary>
            Client authentication failed (e.g. unknown client, no client authentication included, or unsupported
            authentication method).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.InvalidGrant">
            <summary>
            The provided authorization grant is invalid, expired, revoked, or does not match the redirection URI used 
            in the authorization request, or was issued to another client.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.InvalidRequest">
            <summary>
            The request is missing a required parameter.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.InvalidScope">
            <summary>
            The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the resource owner.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.ServerError">
            <summary>
            The authorization server encountered an unexpected condition that prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.TemporarilyUnavailable">
            <summary>
            The authorization server is currently unable to handle the request due to temporary orverloading or 
            maintenance of the server.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.UnauthorizedClient">
            <summary>
            The authenticated client is not authorized to use this authorization grant type.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.UnsupportedGrantType">
            <summary>
            The authorization grant type is not supported by the authorization server.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes.UnsupportedResponseType">
            <summary>
            The authorization server does not support obtaining access tokens using this method.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthException">
            <summary>
            Provides a base class for all OAuth exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthException.#ctor(System.String)">
            <summary>
            Initializes a new <c>VssOAuthException</c> instance with the specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <c>VssOAuthException</c> instance with the specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">An object that describes the error that caused the current exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <c>VssOAuthException</c> instance with serialized data.
            </summary>
            <param name="info">The <c>SerializationInfo</c> that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <c>StreamingContext</c> that contains contextual information about the source or destination</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException">
            <summary>
            Thrown when an exception is encountered processing an OAuth 2.0 token request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException.#ctor(System.String)">
            <summary>
            Initializes a new <c>VssOAuthTokenRequestException</c> instance with the specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <c>VssOAuthTokenRequestException</c> instance with the specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">An object that describes the error that caused the current exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <c>VssOAuthException</c> instance with serialized data.
            </summary>
            <param name="info">The <c>SerializationInfo</c> that holds the serialized object data about the exception being thrown</param>
            <param name="context">The <c>StreamingContext</c> that contains contextual information about the source or destination</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException.Error">
            <summary>
            Gets or sets the OAuth 2.0 error code. See <see cref="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes"/> for potential values.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant">
            <summary>
            Represents an authorization grant in an OAuth 2.0 token exchange.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType)">
            <summary>
            Initializes a new <c>VssOAuthGrant</c> instance with the specified grant type.
            </summary>
            <param name="grantType">The type of authorization grant</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant.GrantType">
            <summary>
            Gets the type of authorization grant.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant.ClientCredentials">
            <summary>
            Gets the client credentials authorization grant.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            When overridden in a derived class, the corresponding token request parameters should be set for the 
            grant type represented by the instance.
            </summary>
            <param name="parameters">The parameters to post to an authorization server</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType">
            <summary>
            Lists the supported authorization grant types
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType.AuthorizationCode">
            <summary>
            Authorization Code Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType.ClientCredentials">
            <summary>
            Client Credentials Grant for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType.JwtBearer">
            <summary>
            JWT Bearer Token Grant Type Profile for OAuth 2.0
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType.RefreshToken">
            <summary>
            Refresh Token Grant for OAuth 2.0
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion">
            <summary>
            Represents a bearer token assertion for either JWT Bearer Token Profile for OAuth 2.0 Client Authentication 
            or JWT Bearer Token Grant Type Profile for OAuth 2.0.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.#ctor(Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebToken)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerAssertion</c> with the specified token as the assertion value.
            </summary>
            <param name="bearerToken">The <c>JsonWebToken</c> instance representing the assertion</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerAssertion</c> with the specified issuer, subject, audience,
            and signing credentials for generating a bearer token.
            </summary>
            <param name="issuer">The iss claim for the bearer token</param>
            <param name="subject">The sub claim for the bearer token</param>
            <param name="audience">The aud claim for the bearer token</param>
            <param name="signingCredentials">The credentials used to sign the bearer token</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.Security.Claims.Claim},Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerAssertion</c> with the specified issuer, subject, audience,
            and signing credentials for generating a bearer token.
            </summary>
            <param name="issuer">The iss claim for the bearer token</param>
            <param name="subject">The sub claim for the bearer token</param>
            <param name="audience">The aud claim for the bearer token</param>
            <param name="additionalClaims">An optional list of additional claims to provide with the bearer token</param>
            <param name="signingCredentials">The credentials used to sign the bearer token</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.Issuer">
            <summary>
            Gets the issuer (iss claim) for the credentials.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.Subject">
            <summary>
            Gets the subject (sub claim) for the credentials.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.Audience">
            <summary>
            Gets the audience (aud claim) for the credentials.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.AdditionalClaims">
            <summary>
            Gets a list of additional claims provided with the credentials.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion.GetBearerToken">
            <summary>
            Gets a <c>JsonWebToken</c> instance based on the values provided to the assertion.
            </summary>
            <returns>A signed <c>JsonWebToken</c> instance for presentation as a bearer token</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerClientCredential">
            <summary>
            Implements the JWT Bearer Token Profile for OAuth 2.0 Client Authentication.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerClientCredential.#ctor(System.String,System.String,Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerClientCredential</c> with the specified client identifier and audience. The
            credential will be used for the JWT Bearer Token Profile for Client Authentication as a client assertion.
            </summary>
            <param name="clientId">The client identifier issued by the authorization server</param>
            <param name="audience">The target audience for the bearer assertion. This is usually the authorization URL</param>
            <param name="signingCredentials">The signing credentials for proof of client identity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerClientCredential.#ctor(System.String,Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerClientCredential</c> with the specified JWT bearer assertion.
            </summary>
            <param name="clientId">The client identifier issued by the authorization server</param>
            <param name="assertion">The client assertion for proof of identity</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerClientCredential.Assertion">
            <summary>
            Gets the jwt-bearer assertion for issuing tokens.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerGrant">
            <summary>
            Implements the JWT Bearer Token Grant Type Profile for OAuth 2.0.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerGrant.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials)">
            <summary>
            Intializes a new <c>VssOAuthJwtBearerGrant</c> instance with the specified issuer, subject,
            audience, and signing credentials.
            </summary>
            <param name="issuer">The issuer of the grant. This is typically the client identifier</param>
            <param name="subject">The subject of the grant. This is an identifier for the target user of the access token</param>
            <param name="audience">The audience of the grant. This is typically the authorization URL</param>
            <param name="signingCredentials">The signing credentials for proof of client identity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerGrant.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion)">
            <summary>
            Initializes a new <c>VssOAuthJwtBearerGrant</c> instance with the specified assertion.
            </summary>
            <param name="assertion">The jwt-bearer assertion for the authorization grant</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthPasswordClientCredential">
            <summary>
            Implements the Client Password Profile for OAuth 2.0 Client Authentication.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthPasswordClientCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <c>VssOAuthPasswordClientCredential</c> with the specified client identifier and secret.
            </summary>
            <param name="clientId">The client identifier issued by the authorization server</param>
            <param name="clientSecret">The client secret/password issued by the authorization server</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthPasswordClientCredential.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Initializes a new <c>VssOAuthPasswordClientCredential</c> with the specified client identifier and secret.
            </summary>
            <param name="clientId">The client identifier issued by the authorization server</param>
            <param name="clientSecret">The client secret/password issued by the authorization server</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthRefreshTokenGrant">
            <summary>
            Represents an OAuth 2.0 grant for refreshing access tokens.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthRefreshTokenGrant.#ctor(System.String)">
            <summary>
            Initializes a new <c>VssOAuthRefreshTokenGrant</c> instance with the specified token value.
            </summary>
            <param name="refreshToken">The refresh token provided by the authorization server</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthRefreshTokenGrant.RefreshToken">
            <summary>
            Gets the token used for acquiring a new access token from the authorization server.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient">
            <summary>
            Provides a method for exchanging tokens with a secure token service which supports OAuth 2.0.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient.#ctor(System.Uri)">
            <summary>
            Initializes a new <c>VssOAuthTokenHttpClient</c> using the specified authorization URL as the token 
            exchange endpoint. Requests for tokens will be posted to the provided URL.
            </summary>
            <param name="authorizationUrl">The endpoint used to acquire new tokens from the secure token service</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient.AuthorizationUrl">
            <summary>
            Gets the authorization URL for the secure token service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient.GetTokenAsync(Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Performs a token exchange using the specified token request.
            </summary>
            <param name="request">The token request</param>
            <param name="cancellationToken">A token for signalling cancellation</param>
            <returns>A <c>Task&lt;VssOAuthTokenResponse&gt;</c> which may be used to track progress of the token request</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient.GetTokenAsync(Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant,Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential,Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters,System.Threading.CancellationToken)">
            <summary>
            Performs a token exchange using the specified authorization grant and client credentials.
            </summary>
            <param name="grant">The authorization grant for the token request</param>
            <param name="credential">The credentials to present to the secure token service as proof of identity</param>
            <param name="tokenParameters">An collection of additional parameters to provide for the token request</param>
            <param name="cancellationToken">A token for signalling cancellation</param>
            <returns>A <c>Task&lt;VssOAuthTokenResponse&gt;</c> which may be used to track progress of the token request</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters">
            <summary>
            Provides additional parameters for OAuth 2.0 token requests. Existing values may be removed by setting the
            property to null. Properties with no value should use an empty string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters.#ctor">
            <summary>
            Initializes a new <c>VssOAuthTokenParameters</c> instance with no additional parameters.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters.RedirectUri">
            <summary>
            Gets or sets the redirect_uri parameter, specifying the redirection endpoint for the user-agent after
            the authorization server completes interaction with the resource owner.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters.Resource">
            <summary>
            Gets or sets the resource parameter, indicating the target resource for the token request.
            </summary>
            <remarks>
            At the time of writing, the specification for this parameter may be found at the link below.
            https://datatracker.ietf.org/doc/draft-campbell-oauth-resource-indicators/?include_text=1
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters.Scope">
            <summary>
            Gets or sets the scope parameter, indicating the scope of the access request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters.ToString">
            <summary>
            Gets a string representation of the additional parameters as a JSON string.
            </summary>
            <returns>A string representation of the parameters which are set</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider">
            <summary>
            Provides functionality to acquire access tokens for OAuth 2.0.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential,System.Uri)">
            <summary>
            Initializes a new <c>VssOAuthTokenProvider</c> instance for the specified credential.
            </summary>
            <param name="credential">The <c>VssOAuthCredential</c> instance which owns the token provider</param>
            <param name="serverUrl">The resource server which issued the authentication challenge</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.#ctor(Microsoft.VisualStudio.Services.Common.IssuedTokenCredential,System.Uri,System.Uri,Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant,Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential,Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters)">
            <summary>
            Initializes a new <c>VssOAuthTokenProvider</c> instance for the specified credential.
            </summary>
            <param name="credential">The <c>VssOAuthCredential</c> instance which owns the token provider</param>
            <param name="serverUrl">The resource server which issued the authentication challenge</param>
            <param name="authorizationUrl">The authorization server token endpoint</param>
            <param name="grant">The authorization grant to use for token requests</param>
            <param name="clientCrential">The client credentials to use for token requests</param>
            <param name="tokenParameters">Additional parameters to include with token requests </param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.Grant">
            <summary>
            Gets the authorization grant for the token provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.ClientCredential">
            <summary>
            Gets the client credentials for the token provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.TokenParameters">
            <summary>
            Gets the additional parameters configured for the token provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.GetTokenIsInteractive">
            <summary>
            Gets a value indicating whether or not this token provider requires interactivity.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider.OnGetTokenAsync(Microsoft.VisualStudio.Services.Common.IssuedToken,System.Threading.CancellationToken)" -->
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest">
            <summary>
            Encapsulates the data used in an OAuth 2.0 token request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant,Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential)">
            <summary>
            Initializes a new <c>VssOAuthTokenRequest</c> instance with the specified grant and client credential.
            </summary>
            <param name="grant">The authorization grant to use for the token request</param>
            <param name="clientCredential">The client credential to use for the token request</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest.#ctor(Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant,Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential,Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters)">
            <summary>
            Initializes a new <c>VssOAuthTokenRequest</c> instance with the specified grant and client credential. 
            Additional parameters specified by the token parameters will be provided in the token request.
            </summary>
            <param name="grant">The authorization grant to use for the token request</param>
            <param name="clientCredential">The client credential to use for the token request</param>
            <param name="tokenParameters">An optional set of additional parameters for the token request</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest.Grant">
            <summary>
            Gets the authorization grant for this token request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest.ClientCredential">
            <summary>
            Gets the client credential for this token request. Depending on the grant ype used, this value may be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest.Parameters">
            <summary>
            Gets the optional set of additional parameters for this token request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse">
            <summary>
            Provides the properties for the response of a token exchange in OAuth 2.0
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.#ctor">
            <summary>
            Initializes a new <c>VssOAuthTokenResponse</c> instance with empty values.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.AccessToken">
            <summary>
            Gets or sets the access token for the response.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.Error">
            <summary>
            Gets or sets the error for the response.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.ErrorDescription">
            <summary>
            Gets or sets the error description for the response.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.ExpiresIn">
            <summary>
            Gets or sets a value indicating the remaining duration, in seconds, of the access token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.RefreshToken">
            <summary>
            Gets or sets the refresh token for the response, if applicable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.Scope">
            <summary>
            Gets or sets the scope or scopes of access for the provided access token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse.TokenType">
            <summary>
            Gets or sets the type of token for the response.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuthWhitelist.WebApi.OAuthWhitelistHttpClient.GetOAuthWhitelistEntriesAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.Operation">
            <summary>
            Contains information about the progress or result of an async operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.Operation.#ctor(Microsoft.VisualStudio.Services.Operations.OperationReference)">
            <summary>
            Initializes the Operation with the values from the OperationReference.
            </summary>
            <param name="operationReference">Reference upon which to base this Operation.</param>
            <remarks>Will initialize the Links and add the "self" reference.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.Links">
            <summary>
            Links to other related objects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.ResultMessage">
            <summary>
            Result message for an operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.DetailedMessage">
            <summary>
            Detailed messaged about the status of an operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.ResultUrl">
            <summary>
            URL to the operation result.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.Completed">
            <summary>
            Operation completed with success or failure
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationReference">
            <summary>
            Reference for an async operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.OperationReference.#ctor">
            <summary>
            Default constructor used for serialization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Id">
            <summary>
            Unique identifier for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Status">
            <summary>
            The current status of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Url">
            <summary>
            URL to get the full operation object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.PluginId">
            <summary>
            Unique identifier for the plugin.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationResultReference.ResultUrl">
            <summary>
            URL to the operation result.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationStatus">
            <summary>
            The status of an operation.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.NotSet">
            <summary>
            The operation does not have a status set.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Queued">
            <summary>
            The operation has been queued.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.InProgress">
            <summary>
            The operation is in progress.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Cancelled">
            <summary>
            The operation was cancelled by the user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Succeeded">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Failed">
            <summary>
            The operation completed with a failure.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationPluginWithSameIdException">
            <summary>
            This exception is thrown when multiple plugin have the same Id.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationNotFoundException">
            <summary>
            This exception is thrown when we can't find an operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationPluginNotFoundException">
            <summary>
            This exception is thrown when we can't find a plugin.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationPluginNoPermission">
            <summary>
            This exception is thrown when permissions are missing to get the operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationUpdateFailedException">
            <summary>
            This exception is thrown when we fail to update an operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.OperationsHttpClientBase.GetOperationAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets an operation from the operationId using the given pluginId.
            </summary>
            <param name="operationId">The ID for the operation.</param>
            <param name="pluginId">The ID for the plugin.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationsHttpClient">
            <summary>
            HttpClient for operations.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.OperationsHttpClient.GetOperation(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get an operation by Id, this is here for back compat reason since the generated client rightfully append Async to the method name.
            </summary>
            <param name="id">The id of the operation.</param>
            <param name="userState"></param>
            <returns>The operation.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Collection.Id">
            <summary>
            Identifier for a collection under an organization
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Collection.Name">
            <summary>
            The unqiue name of collection under an organziation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Collection.TenantId">
            <summary>
            The tenant id of the AAD tenant backing the enterprise to which the collection belongs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Collection.Properties">
            <summary>
            Extended properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Logo.Image">
            <summary>
            The image for the logo represented as a byte array
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Organization.Id">
            <summary>
            Identifier for an Organization
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Organization.Properties">
            <summary>
            Extended properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.Name">
            <summary>
            Name identifier for the region.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.DisplayName">
            <summary>
            Display name for the region.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.NameInAzure">
            <summary>
            Short name used in Microsoft Azure. Ex: southcentralus, westcentralus, southindia, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.IsDefault">
            <summary>
            Whether the region is default or not
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.ServiceInstanceId">
            <summary>
            The identifier of the service instance that supports host creations in this region
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.AvailableHostsCount">
            <summary>
            The number of hosts that are readily available for host creation in this region on this service instance
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Organization.Client.Region.RegionStatus">
            <summary>
            The region status
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.DeleteCollectionAvatarAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete project collection avatar
            </summary>
            <param name="collectionId">Id of the project collection</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateCollectionAvatarAsync(System.Guid,System.Byte[],System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update project collection avatar
            </summary>
            <param name="collectionId">Id of the project collection</param>
            <param name="imageData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateCollectionPropertiesAsync(System.Guid,Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="patchDocument"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.CreateCollectionAsync(Microsoft.VisualStudio.Services.Organization.Client.Collection,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="resource"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.DeleteCollectionAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="gracePeriodToRestoreInHours"></param>
            <param name="violatedTerms"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.ForceUpdateCollectionOwnerAsync(System.String,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="forceUpdateReason"></param>
            <param name="collectionId"></param>
            <param name="newOwner"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetCollectionAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="propertyNames"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetCollectionsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetCollectionsAsync(Microsoft.VisualStudio.Services.Organization.CollectionSearchKind,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="searchKind"></param>
            <param name="searchValue"></param>
            <param name="includeDeletedCollections"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.IsEligibleForTakeOverAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.RestoreCollectionAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateCollectionAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="patchDocument"></param>
            <param name="collectionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateOrganizationLogoAsync(System.Guid,Microsoft.VisualStudio.Services.Organization.Client.Logo,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="organizationId"></param>
            <param name="logo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.ExportOrganizationMigrationBlobAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="organizationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.ImportOrganizationMigrationBlobAsync(Microsoft.VisualStudio.Services.Organization.Client.OrganizationMigrationBlob,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="migrationBlob"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateOrganizationPropertiesAsync(System.Guid,Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="organizationId"></param>
            <param name="patchDocument"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.CreateOrganizationAsync(Microsoft.VisualStudio.Services.Organization.Client.Organization,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="resource"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetOldestOrganizationByTenantAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="tenantId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetOrganizationAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="organizationId"></param>
            <param name="propertyNames"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetOrganizationsAsync(Microsoft.VisualStudio.Services.Organization.OrganizationSearchKind,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="searchKind"></param>
            <param name="searchValue"></param>
            <param name="isActivated"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.UpdateOrganizationAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="patchDocument"></param>
            <param name="organizationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient.GetRegionsAsync(System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="includeRegionsWithNoAvailableHosts"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient.GetPolicyAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyName"></param>
            <param name="defaultValue"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient.UpdatePolicyAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="patchDocument"></param>
            <param name="policyName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient.GetPoliciesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyNames"></param>
            <param name="defaultValues"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient.GetPolicyInformationAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient.GetPolicyInformationsAsync(System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyNames"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Organization.Client.OrganizationCompatHttpClientBase">
            <summary>
            This class contains deprecated overloads to maintain binary compatibility
            </summary>
            <remarks>
            See: https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/2729/Rest-Client-Generation#Toolsets.5CAPICompatCheck.5CAPICompatCheck.targets.28x.2Cy.29:_error
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Organization.Client.OrganizationCompatHttpClientBase.DeleteCollectionAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="collectionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Partitioning.PartitionContainerStatus.Online">
            <summary>
            Online means available to acquire new partitions (assuming capacity exists)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Partitioning.PartitionContainerStatus.Offline">
            <summary>
            Offline means unable to acquire new partitions even if there is capacity
            (but partitions can be manually assigned using CreatePartition)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributeDescriptor">
            <summary>
            Identifies an attribute with a name and a container.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.AttributeDescriptor.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.AttributeDescriptor.AttributeName">
            <summary>
            The name of the attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.AttributeDescriptor.ContainerName">
            <summary>
            The container the attribute resides in.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributeDescriptorComparer">
            <summary>
            Class used for comparing AttributeDescriptors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributesContainer">
            <summary>
            Stores a set of named profile attributes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.AttributesContainer.ContainerName">
            <summary>
            The name of the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.AttributesContainer.Attributes">
            <summary>
            The attributes stored by the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.AttributesContainer.Revision">
            <summary>
            The maximum revision number of any attribute within the container.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.AttributesQueryContext.#ctor(Microsoft.VisualStudio.Services.Profile.AttributesScope,System.DateTimeOffset,System.String)">
            <remarks>
            Deprecated constructor. The operation to 'get attributes since a certain point in time' is now deprecated.
            </remarks>>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributesScope">
            <summary>
            Used to specify the scope of a set of attributes.
            </summary>
            <remarks>
            A profile attribute is either a core attribute or an attribute beloging to some application container.
            A core attribute belongs to scope AttributesScope.Core.
            An attribute stored under some application container belongs to scope AttributesScope.Application.
            An attribute always belongs to scope AttributesScope.Core | AttributesScope.Application.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AvatarSize">
            <summary>
            Small = 34 x 34 pixels; Medium = 44 x 44 pixels; Large = 220 x 220 pixels
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.CoreProfileAttribute">
            <summary>
            A profile attribute which always has a value for each profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.CreateProfileContext.ProfileState">
            <summary>
            The current state of the profile.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.CreateProfileContext.TryGetCIData``1(System.String,``0@)">
            <summary>
            Try get CIData item
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.Profile">
            <summary>
            A user profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.ApplicationContainer">
            <summary>
            The attributes of this profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.CoreAttributes">
            <summary>
            The core attributes of this profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.CoreRevision">
            <summary>
            The maximum revision number of any attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.TimeStamp">
            <summary>
            The time at which this profile was last changed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.Id">
            <summary>
            The unique identifier of the profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.Revision">
            <summary>
            The maximum revision number of any attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.Profile.ProfileState">
            <summary>
            The current state of the profile.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfileState">
            <summary>
            The state of a profile.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Profile.ProfileState.Custom">
            <summary>
            The profile is in use.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Profile.ProfileState.CustomReadOnly">
            <summary>
            The profile is in use, but can only be read.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Profile.ProfileState.ReadOnly">
            <summary>
            The profile may only be read.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfileAttribute">
            <summary>
            A named object associated with a profile.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileAttributeBase`1.Descriptor">
            <summary>
            The descriptor of the attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileAttributeBase`1.Value">
            <summary>
            The value of the attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileAttributeBase`1.TimeStamp">
            <summary>
            The time the attribute was last changed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileAttributeBase`1.Revision">
            <summary>
            The revision number of the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfilePageType">
            <summary>
            Types of Profile pages
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfileRegion">
            <summary>
            Country/region information
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileRegion.Name">
            <summary>
            Localized country/region name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileRegion.Code">
            <summary>
            The two-letter code defined in ISO 3166 for the country/region.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfileRegions">
            <summary>
            Container of country/region information
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Profile.ProfileRegions.Regions">
            <summary>
            List of country/regions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileRegions.NoticeContactConsentRequirementRegions">
            <summary>
            List of country/region code with contact consent requirement type of notice
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Profile.ProfileRegions.OptOutContactConsentRequirementRegions">
            <summary>
            List of country/region code with contact consent requirement type of opt-out
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Profile.Model.RemoteProfile.EmailAddress">
            <summary>
            Primary contact email from MSA/AAD
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetAttributeAsync(Microsoft.VisualStudio.Services.Profile.ProfileAttribute,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates (conditionally) the value of a profile attribute if it already exists.
            </summary>
            <remarks>If attribute does not exist then a new attribute is added.
            If the timestamp in the parameter <paramref name="newAttribute"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the attribute is only updated if the paramter <paramref name="newAttribute"/> has a newer timestamp than the attribute stored in the server.
            </remarks> 
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException">If the attribute in the server has a newer timestamp.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAttributeAsync(Microsoft.VisualStudio.Services.Profile.AttributeDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns an attribute with descriptor = <paramref name="descriptor"/>.
            </summary>
            <param name="descriptor">Descriptor of the attribute</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.DeleteAttributeAsync(Microsoft.VisualStudio.Services.Profile.ProfileAttribute,System.Object,System.Threading.CancellationToken)">
            <summary>
            Deletes (conditionally) a profile attribute.
            </summary>
            <remarks>
            If the timestamp in the parameter <paramref name="attributeToDelete"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the attribute is only deleted if the paramter <paramref name="attributeToDelete"/> has a timestamp which is not older than the
            timestamp of the attribute in the server.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.ProfileAttributeNotFoundException">If named attribute does not exist on the server.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetProfileAsync(Microsoft.VisualStudio.Services.Profile.ProfileQueryContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.UpdateProfileAsync(Microsoft.VisualStudio.Services.Profile.Profile,System.Object,System.Threading.CancellationToken)">
            <summary>
            Partially updates the content of a profile by comparing changes with the contents of a given profile in parameter <paramref name="profile"/>.
            </summary>
            <remarks>
            A profile property is not updated if the property is set to null in parameter <paramref name="profile"/>.
            A profile attribute is not updated if the attribute is missing from the list of attributes in <paramref name="profile"/>.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfProfileExists">If the revision in the parameter <paramref name="profile"/> does not match to the current revision</exception>
            <param name="id">The Guid of the Identity with which the Profile is associated. There exists a 1 to 1 mapping between an Identity and a Profile</param>
            <param name="profile">Container object that contains the changes to be applied to the profile</param>
            <returns>The revision of the updated profile</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAvatarAsync(Microsoft.VisualStudio.Services.Profile.AvatarSize,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the avatar in the profile of the authenticated identity.
            </summary>
            <param name="size">Parameter to specify the desired size for the avatar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAvatarAsync(System.Guid,Microsoft.VisualStudio.Services.Profile.AvatarSize,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the avatar in the profile of the authenticated identity given in parameter <paramref name="id"/>.
            </summary>
            <param name="size">Parameter to specify the desired size for the avatar.</param>
            <param name="id"> Parameter to specify the ID corresponding to the profile avatar requested</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAvatarAsync(Microsoft.VisualStudio.Services.Profile.Avatar,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the avatar in the profile of the authenticated identity.
            </summary>
            <param name="currentCopy">Parameter to specify the current copy of the avatar. 
            If the server does not have a newer version of the avatar then avatar objects are not sent over the wire.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetAvatarAsync(Microsoft.VisualStudio.Services.Profile.Avatar,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the avatar conditionally.
            </summary>
            <remarks>
            If the timestamp in the parameter <paramref name="newAvatar"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the avatar is only updated if the paramter <paramref name="newAvatar"/> has a newer timestamp than the avatar stored in the server.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException">If the avatar in the server has a newer timestamp.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetDisplayNameAsync(System.Object)">
            <summary>
            Returns the display name of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetDisplayNameAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the display name of the profile of the authenticated identity.
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAttributesAsync(Microsoft.VisualStudio.Services.Profile.AttributesQueryContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the attributes stored under the profile of the authenticated identity.
            </summary>
            <remarks>
            If an attribute has been deleted since the point in time specified in <paramref name="attributesQueryContext"/>, then the attribute is returned
            with it's value set to null.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetServiceSettingAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns requested service setting
            </summary>
            <param name="settingName"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetProfileLocationsAsync(Microsoft.VisualStudio.Services.Profile.ProfilePageType,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the location to a profile page.
            </summary>
            <param name="profilePageType"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.CreateProfileAsync(Microsoft.VisualStudio.Services.Profile.CreateProfileContext,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create profile
            </summary>
            <param name="createProfileContext">Context for profile creation</param>
            <param name="autoCreate">Create profile automatically</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase.CreateProfileAsync(Microsoft.VisualStudio.Services.Profile.CreateProfileContext,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create profile
            </summary>
            <param name="createProfileContext">Context for profile creation</param>
            <param name="autoCreate">Create profile automatically</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase.GetRegionsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.ProfileExtensions.ApplyAttributesChanges(Microsoft.VisualStudio.Services.Profile.Profile,System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Profile.ProfileAttribute},System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Profile.CoreProfileAttribute})">
            <summary>
            Updates the profile by applying the changes in the parameter <paramref name="changedApplicationAttributes"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessControlEntry">
            <summary>
            Class for encapsulating the allowed and denied permissions for a given IdentityDescriptor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessControlEntry.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.Int32,System.Int32,Microsoft.VisualStudio.Services.Security.AceExtendedInformation)">
            <summary>
            Creates an AccessControlEntry based on the supplied information.
            </summary>
            <param name="descriptor"> The descriptor for the user this AccessControlEntry applies to.</param>
            <param name="allow">The allowed permissions for this descriptor.</param>
            <param name="deny">The denied permissions for this descriptor.</param>
            <param name="extendedInfo">The extended info object to associate with this AccessControlEntry.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Descriptor">
            <summary>
            The descriptor for the user this AccessControlEntry applies to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Allow">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Deny">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.ExtendedInfo">
            <summary>
            This value, when set, reports the inherited and effective information for 
            the associated descriptor. This value is only set on AccessControlEntries returned
            by the QueryAccessControlList(s) call when its includeExtendedInfo parameter is set to true.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessControlList">
            <summary>
            The AccessControlList class is meant to associate a set of AccessControlEntries with 
            a security token and its inheritance settings.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessControlList.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,Microsoft.VisualStudio.Services.Security.AccessControlEntry},System.Boolean)">
            <summary>
            Builds an instance of an AccessControlList.
            </summary>
            <param name="token">The token that this AccessControlList is for.</param>
            <param name="inherit">True if this AccessControlList should inherit permissions from its parents.</param>
            <param name="acesDictionary">The list of AccessControlEntries that apply to this AccessControlList.</param>
            <param name="includeExtendedInfo">True if this ACL will hold AccessControlEntries that have their extended information included.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.InheritPermissions">
            <summary>
            True if the given token inherits permissions from parents.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.Token">
            <summary>
            The token that this AccessControlList is for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.AcesDictionary">
            <summary>
            Storage of permissions keyed on the identity the permission is for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.IncludeExtendedInfo">
            <summary>
            True if this ACL holds ACEs that have extended information.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AceExtendedInformation">
            <summary>
            Holds the inherited and effective permission information for a given AccessControlEntry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new AceExtendedInformation object with the specified information.
            </summary>
            <param name="inheritedAllow">The allow bits received from inheritance.</param>
            <param name="inheritedDeny">The deny bits received from inheritance.</param>
            <param name="effectiveAllow">The effective allow bits.</param>
            <param name="effectiveDeny">The effective deny bits.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.InheritedAllow">
            <summary>
            These are the permissions that are inherited for this
            identity on this token.  If the token does not inherit 
            permissions this will be 0.  Note that any permissions that
            have been explicitly set on this token for this identity, or 
            any groups that this identity is a part of, are not included here.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.InheritedDeny">
            <summary>
            These are the permissions that are inherited for this
            identity on this token.  If the token does not inherit 
            permissions this will be 0.  Note that any permissions that
            have been explicitly set on this token for this identity, or 
            any groups that this identity is a part of, are not included here.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.EffectiveAllow">
            <summary>
            This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the
            permissions used when determining if a given user has permission
            to perform an action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.EffectiveDeny">
            <summary>
            This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the
            permissions used when determining if a given user has permission
            to perform an action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.ActionDefinition.#ctor(System.Guid,System.Int32,System.String,System.String)">
            <summary>
            Creates an ActionDefinition for a SecurityNamespaceDescription.  This overload
            should only be used for reading from the database.
            </summary>
            <param name="namespaceId">The namespace that this action belongs to.</param>
            <param name="bit">The bit that this action maps to.</param>
            <param name="name">The non-localized name for this action.</param>
            <param name="displayName">The localized display name for this action.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.Bit">
            <summary>
            The bit mask integer for this action. Must be a power of 2.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.Name">
            <summary>
            The non-localized name for this action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.DisplayName">
            <summary>
            The localized display name for this action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.NamespaceId">
            <summary>
            The namespace that this action belongs to.  This will only be used for reading from the database.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.PermissionEvaluationBatch">
            <summary>
            Represents a set of evaluated permissions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluationBatch.Evaluations">
            <summary>
            Array of permission evaluations to evaluate.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluationBatch.AlwaysAllowAdministrators">
            <summary>
            True if members of the Administrators group should always pass the security check.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.PermissionEvaluation">
            <summary>
            Represents an evaluated permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluation.SecurityNamespaceId">
            <summary>
            Security namespace identifier for this evaluated permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluation.Token">
            <summary>
            Security namespace-specific token for this evaluated permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluation.Permissions">
            <summary>
            Permission bit for this evaluated permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.PermissionEvaluation.Value">
            <summary>
            Permission evaluation value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry">
            <summary>
            Represents a raw access control entry from a remote backing store.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an AccessControlEntryDetails based on the supplied information.
            </summary>
            <param name="token">The token of the access control list in which this access control entry belongs</param>
            <param name="subject">The identity (or subject) of the access control entry.</param>        
            <param name="allow">The allowed permissions for this descriptor.</param>
            <param name="deny">The denied permissions for this descriptor.</param>
            <param name="isDeleted">True if the ACE has been deleted; false if it is extant.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Token">
            <summary>
            The token of the access control list in which this access control entry belongs.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Subject">
            <summary>
            The identity for which the access control entry is allowing / denying permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Allow">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Deny">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.IsDeleted">
            <summary>
            True if the ACE has been deleted; used when reading an incremental update from the backing store.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessControlListsCollection">
            <summary>
            A list of AccessControlList. An AccessControlList is meant to associate a set of AccessControlEntries with 
            a security token and its inheritance settings.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData">
            <summary>
            Encapsulates the result of a QuerySecurityData call to the backing store.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.#ctor(System.Guid,System.Int64,System.Int64[],System.Guid,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a SecurityNamespaceData based on the supplied information.
            </summary>
            <param name="aclStoreId">The ACL store ID</param>
            <param name="oldSequenceId">The old sequence ID</param>
            <param name="newSequenceId">The new sequence ID</param>
            <param name="identityDomain"></param>
            <param name="accessControlEntries">The access control entries for this snapshot or delta</param>
            <param name="noInheritTokens">The list of tokens which have inheritance disabled</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.IsDelta">
            <summary>
            True if this instance represents a delta; false if it is a full snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.AclStoreId">
            <summary>
            Indicates the ACL store whose data is persisted in this SecurityNamespaceData object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.OldSequenceId">
            <summary>
            If this is a full snapshot of the security namespace data, this value is -1. Otherwise, this
            instance represents the delta from OldSequenceId to NewSequenceId.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.NewSequenceId">
            <summary>
            The sequence ID for this snapshot of or incremental update to the security namespace data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.IdentityDomain">
            <summary>
            The identity domain for the service host on which this security namespace resides.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.AccessControlEntries">
            <summary>
            The access control entries in this snapshot of the security namespace data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.NoInheritTokens">
            <summary>
            The list of tokens in the security namespace which have inheritance disabled.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.PluralSequenceIdJsonConverter">
            <summary>
            The JSON converter for plural sequence IDs that allows for backwards compatibility
            with other services that encode a scalar value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDataCollection">
            <summary>
            Represents a set of SecurityNamespaceData objects.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription">
            <summary>
            Class for describing the details of a TeamFoundationSecurityNamespace.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.#ctor(System.Guid,System.String,System.String,System.String,System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{Microsoft.VisualStudio.Services.Security.ActionDefinition},System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a SecurityNamespaceDescription which can be used to create a 
            SecurityNamespace
            </summary>
            <param name="namespaceId">
                The id that uniquely identifies the SecurityNamespace.
            </param>
            <param name="name">
                The non-localized name for the SecurityNamespace that will be used for things
                like the command-line.
            </param>
            <param name="displayName">
                The localized display name for the SecurityNamespace.
            </param>
            <param name="dataspaceCategory">
                This is the dataspace category that describes where the security information
                for this SecurityNamespace should be stored.
            </param>
            <param name="separatorValue">
                If the security tokens this namespace will be operating on need to be split 
                on certain characters to determine its elements that character should be 
                specified here. If not, this value must be the null character.
            </param>
            <param name="elementLength">
                If the security tokens this namespace will be operating on need to be split 
                on certain character lengths to determine its elements, that length should be
                specified here. If not, this value must be -1.</param>
            <param name="structure">
                The structure that this SecurityNamespace will use to organize its tokens.
                If this namespace is hierarchical, either the separatorValue or the 
                elementLength parameter must have a non-default value.
            </param>
            <param name="writePermission">
                The permission bits needed by a user in order to modify security data in this
                SecurityNamespace.
            </param>
            <param name="readPermission">
                The permission bits needed by a user in order to read security data in this
                SecurityNamespace.
            </param>
            <param name="actions">
                The list of actions that this SecurityNamespace is responsible for securing.
            </param>
            <param name="extensionType">
                The full type of the class that implements ISecurityNamespaceExtension that
                will act as a security namespace extension for this security namespace. Null
                or String.Empty if this security namespace will not have a security namespace
                extension.
            </param>
            <param name="isRemotable">
                If true, the security namespace is remotable, allowing another service to proxy
                the namespace.
            </param>
            <param name="useTokenTranslator">
                If true, the security service will expect an ISecurityDataspaceTokenTranslator plugin to
                exist for this namespace
            </param>
            <param name="systemBitMask">
                The bits reserved by system store 
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.NamespaceId">
            <summary>
            The unique identifier for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.Name">
            <summary>
            This non-localized for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.DisplayName">
            <summary>
            This localized name for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.SeparatorValue">
            <summary>
            If the security tokens this namespace will be operating on need to be split 
            on certain characters to determine its elements that character should be 
            specified here. If not, this value will be the null character.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ElementLength">
            <summary>
            If the security tokens this namespace will be operating on need to be split 
            on certain character lengths to determine its elements, that length should be
            specified here. If not, this value will be -1.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.WritePermission">
            <summary>
            The permission bits needed by a user in order to modify security data on the
            Security Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ReadPermission">
            <summary>
            The permission bits needed by a user in order to read security data on the
            Security Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.DataspaceCategory">
            <summary>
            This is the dataspace category that describes where the security information
            for this SecurityNamespace should be stored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.Actions">
            <summary>
            The list of actions that this Security Namespace is responsible for securing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.StructureValue">
            <summary>
            Used to send information about the structure of the security namespace over the web service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ExtensionType">
            <summary>
            This is the type of the extension that should be loaded from the plugins
            directory for extending this security namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.IsRemotable">
            <summary>
            If true, the security namespace is remotable, allowing another service to proxy
            the namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.UseTokenTranslator">
            <summary>
            If true, the security service will expect an ISecurityDataspaceTokenTranslator plugin to
            exist for this namespace
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.SystemBitMask">
            <summary>
            The bits reserved by system store
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.TokenRename">
            <summary>
            Represents a request to rename a token in a security namespace.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.TokenRename.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new rename request for a token in a security namespace.
            </summary>
            <param name="oldToken">The current name of the token</param>
            <param name="newToken">The desired new name of the token</param>
            <param name="copy">True if the existing token should be preserved; false if it should be deleted</param>
            <param name="recurse">True if the scope of the operation should be extended to all child tokens of oldToken; false otherwise</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.OldToken">
            <summary>
            The current name of the token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.NewToken">
            <summary>
            The desired new name of the token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.Copy">
            <summary>
            True if the existing token should be preserved; false if it should be deleted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.Recurse">
            <summary>
            True if the scope of the operation should be extended to all child tokens of OldToken; false otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.WellKnownAclStores">
            <summary>
            Contains identifiers for well-known ACL (access control list) stores
            in the security service.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Security.WellKnownAclStores.User">
            <summary>
            The user store is the ACL (access control list) store which is
            user-visible and user-editable, and which is used to evaluate effective permissions
            for most identities.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Security.WellKnownAclStores.System">
            <summary>
            The system store is the ACL (access control list) store which is
            not user-visible or user-editable, and is used to evaluate effective permissions on
            special types of identities such as licenses.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessCheckException">
            <summary>
            An exception which is thrown when a permission check fails in the security service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessCheckException.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.String,System.String,System.Int32,System.Guid,System.String)">
            <summary>
            Constructs an AccessCheckException.
            </summary>
            <param name="descriptor">The identity descriptor which was checked.</param>
            <param name="identityDisplayName">The display name of the identity which was checked.</param>
            <param name="token">The token which was checked.</param>
            <param name="requestedPermissions">The requested permissions, which were not satisifed by the check.</param>
            <param name="namespaceId">The security namespace which was checked.</param>
            <param name="message">A descriptive message for the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessCheckException.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.String,System.Int32,System.Guid,System.String)">
            <summary>
            Constructs an AccessCheckException.
            </summary>
            <param name="descriptor">The identity descriptor which was checked.</param>
            <param name="token">The token which was checked.</param>
            <param name="requestedPermissions">The requested permissions, which were not satisifed by the check.</param>
            <param name="namespaceId">The security namespace which was checked.</param>
            <param name="message">A descriptive message for the exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessCheckException.Descriptor">
            <summary>
            The identity descriptor which was checked.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessCheckException.IdentityDisplayName">
            <summary>
            The display name of the identity which was checked.
            This property may be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessCheckException.Token">
            <summary>
            The token which was checked.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessCheckException.RequestedPermissions">
            <summary>
            The permissions which were demanded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessCheckException.NamespaceId">
            <summary>
            The identifier of the security namespace which was checked.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.HasPermissionAsync(System.Guid,System.String,System.Int32,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="requestedPermissions"></param>
            <param name="alwaysAllowAdministrators"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.HasPermissionsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Boolean,System.Char,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="tokens"></param>
            <param name="requestedPermissions"></param>
            <param name="alwaysAllowAdministrators"></param>
            <param name="wireDelimiter">The delimiter to use when encoding the list of tokens on the wire as a single string</param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemovePermissionAsync(System.Guid,System.String,Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptor"></param>
            <param name="permissions"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetAccessControlEntriesAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.AccessControlEntry},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="accessControlEntries"></param>
            <param name="merge"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemoveAccessControlEntriesAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptors"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.QueryAccessControlListsAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},System.Boolean,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptors"></param>
            <param name="includeExtendedInfo"></param>
            <param name="recurse"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetAccessControlListsAsync(System.Guid,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.AccessControlList},System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="accessControlLists"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemoveAccessControlListsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="tokens"></param>
            <param name="recurse"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.QuerySecurityNamespacesAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetInheritFlagAsync(System.Guid,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="inherit"></param>
            <param name="userState"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Servicing.Client.ServiceLevelHttpClient">
            <summary>
            Http client for the /_apis/servicelevel REST endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Settings.SettingsUserScope">
            <summary>
            Whether a setting applies to a single user or to all users
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Settings.SettingsUserScope.GlobalUser">
            <summary>
            Settings for current user which span organizations
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Settings.SettingsUserScope.User">
            <summary>
            Scope for a setting which applies to the current request's user
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Settings.SettingsUserScope.AllUsers">
            <summary>
            Scope for a setting which applies to all users
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.SettingsUserScope.SpecificUser(System.Guid)">
            <summary>
            Gets a scope for settings that apply to a specific user
            </summary>
            <param name="userId">Id of the user</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.SettingsUserScope.Parse(System.String)">
            <summary>
            Parse a SettingsUserScope from its string identifier
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.GetEntriesAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all setting entries for the given user/all-users scope
            </summary>
            <param name="userScope">User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.</param>
            <param name="key">Optional key under which to filter all the entries</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.RemoveEntriesAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Remove the entry or entries under the specified path
            </summary>
            <param name="userScope">User-Scope at which to remove the value. Should be "me" for the current user or "host" for all users.</param>
            <param name="key">Root key of the entry or entries to remove</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.SetEntriesAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Set the specified setting entry values for the given user/all-users scope
            </summary>
            <param name="entries">The entries to set</param>
            <param name="userScope">User-Scope at which to set the values. Should be "me" for the current user or "host" for all users.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.GetEntriesForScopeAsync(System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all setting entries for the given named scope
            </summary>
            <param name="userScope">User-Scope at which to get the value. Should be "me" for the current user or "host" for all users.</param>
            <param name="scopeName">Scope at which to get the setting for (e.g. "project" or "team")</param>
            <param name="scopeValue">Value of the scope (e.g. the project or team id)</param>
            <param name="key">Optional key under which to filter all the entries</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.RemoveEntriesForScopeAsync(System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Remove the entry or entries under the specified path
            </summary>
            <param name="userScope">User-Scope at which to remove the value. Should be "me" for the current user or "host" for all users.</param>
            <param name="scopeName">Scope at which to get the setting for (e.g. "project" or "team")</param>
            <param name="scopeValue">Value of the scope (e.g. the project or team id)</param>
            <param name="key">Root key of the entry or entries to remove</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient.SetEntriesForScopeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Set the specified entries for the given named scope
            </summary>
            <param name="entries">The entries to set</param>
            <param name="userScope">User-Scope at which to set the values. Should be "me" for the current user or "host" for all users.</param>
            <param name="scopeName">Scope at which to set the settings on (e.g. "project" or "team")</param>
            <param name="scopeValue">Value of the scope (e.g. the project or team id)</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.EnterpriseCatalog.Client.EnterpriseCatalogHttpClient.GetCollectionsByTenantIdAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Generates a CSV file of collection information for each collection that is backed by the tenant  NOTE: The media type in the ClientResponseType header and the media type returned are different. This is an artifact of the framework that we must specify the ClientResponseType header to be stream and the media type type to be Application Octet in order to generate a client with genclient. The actual media type we return in the response "text/event-stream" guarantees a good file download experience
            </summary>
            <param name="tenantId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient.GetPolicyAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient.SetPolicyAsync(Microsoft.VisualStudio.Services.TenantPolicy.Client.Policy,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policy"></param>
            <param name="policyName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient.GetPolicyForTenantAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyName"></param>
            <param name="tenantId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient.GetPolicyInfoAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="policyName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminPagedSessionTokens">
            <summary>
            A paginated list of session tokens.
            Session tokens correspond to OAuth credentials such as personal access tokens (PATs)
            and other OAuth authorizations.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminPagedSessionTokens.SessionTokens">
            <summary>
            The list of all session tokens in the current page.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminPagedSessionTokens.ContinuationToken">
            <summary>
            The continuation token that can be used to retrieve the next page of session tokens,
            or <code>null</code> if there is no next page.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocation">
            <summary>
            A request to revoke a particular delegated authorization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocation.AuthorizationId">
            <summary>
            The authorization ID of the OAuth authorization to revoke.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocationRule">
            <summary>
            A rule which is applied to disable any incoming delegated authorization
            which matches the given properties.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocationRule.Scopes">
            <summary>
            A string containing a space-delimited list of OAuth scopes.
            A token matching any one of the scopes will be rejected.
            For a list of all OAuth scopes supported by Azure DevOps, see:
            https://docs.microsoft.com/en-us/azure/devops/integrate/get-started/authentication/oauth?view=azure-devops#scopes
            This is a mandatory parameter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocationRule.CreatedBefore">
            <summary>
            A datetime cutoff. Tokens created before this time will be rejected.
            This is an optional parameter. If omitted, defaults to the time at which the rule was created. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient.ListPersonalAccessTokensAsync(Microsoft.VisualStudio.Services.Common.SubjectDescriptor,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Lists of all the session token details of the personal access tokens (PATs) for a particular user.
            </summary>
            <param name="subjectDescriptor">The descriptor of the target user.</param>
            <param name="pageSize">The maximum number of results to return on each page.</param>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="isPublic">Set to false for PAT tokens and true for SSH tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient.CreateRevocationRuleAsync(Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocationRule,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates a revocation rule to prevent the further usage of any OAuth authorizations that were created before the current point in time and which match the conditions in the rule.
            </summary>
            <param name="revocationRule">The revocation rule to create. The rule must specify a space-separated list of scopes, after which preexisting OAuth authorizations that match that any of the scopes will be rejected. For a list of all OAuth scopes supported by VSTS, see: https://docs.microsoft.com/en-us/vsts/integrate/get-started/authentication/oauth?view=vsts#scopes The rule may also specify the time before which to revoke tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient.RevokeAuthorizationsAsync(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocation},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Revokes the listed OAuth authorizations.
            </summary>
            <param name="revocations">The list of objects containing the authorization IDs of the OAuth authorizations, such as session tokens retrieved by listed a users PATs, that should be revoked.</param>
            <param name="isPublic">Set to false for PAT tokens and true for SSH tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient.GetPersonalAccessTokenAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Returns an information about a PAT and authentication requires an S2S service principal.
            </summary>
            <param name="accessTokenKey">A session token access hash</param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient.RevokePersonalAccessTokenAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Revokes a PAT and authentication requires an S2S service principal.
            </summary>
            <param name="accessTokenKey">A session token access hash</param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.TokenAdministrationRevocation" -->
        <member name="P:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.TokenAdministrationRevocation.AuthorizationIds">
            <summary>
            A list of authorization ID of the OAuth authorization to revoke.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.TokenAdministrationRevocation.Audience">
            <summary>
            A list of audience (target accounts) to limit the revocations to
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient.GetPersonalAccessTokenAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="accessTokenKey"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient.ListIdentitiesWithGlobalAccessTokensAsync(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocation},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Revokes the listed OAuth authorizations.
            </summary>
            <param name="revocations">The list of identities containing the authorization IDs of the OAuth authorizations, such as session tokens retrieved by listed a users PATs, that should be checked for global access tokens.</param>
            <param name="isPublic">Set to false for PAT tokens and true for SSH tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient.ListPersonalAccessTokensAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.VisualStudio.Services.Common.SubjectDescriptor,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Lists of all the session token details of the personal access tokens (PATs) for a particular user.
            </summary>
            <param name="audience"></param>
            <param name="subjectDescriptor">The descriptor of the target user.</param>
            <param name="pageSize">The maximum number of results to return on each page.</param>
            <param name="continuationToken">An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.</param>
            <param name="isPublic">Set to false for PAT tokens and true for SSH tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient.RevokeAuthorizationsAsync(Microsoft.VisualStudio.Services.Tokens.TokenAdmin.TokenAdministrationRevocation,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Revokes the listed OAuth authorizations.
            </summary>
            <param name="revocations">The list of objects containing the authorization IDs of the OAuth authorizations, such as session tokens retrieved by listed a users PATs, that should be revoked.</param>
            <param name="hostId">Host Id to display on the notification page to manage tokens.</param>
            <param name="isPublic">Set to false for PAT tokens and true for SSH tokens.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient.RevokePersonalAccessTokenAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="accessTokenKey"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.AuthorizeAsync(System.Guid,Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="authorizationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.AuthorizeAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="authorizationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetAuthorizationsAsync(System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.InitiateAuthorizationAsync(System.Guid,Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userId"></param>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.InitiateAuthorizationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType,System.Guid,System.Uri,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="responseType"></param>
             <param name="clientId"></param>
             <param name="redirectUri"></param>
             <param name="scopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.RevokeAuthorizationAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="authorizationId"></param>
             <param name="userId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.AuthorizeHostAsync(System.Guid,System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="clientId"></param>
            <param name="hostId"></param>
            <param name="newId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetHostAuthorizationsAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="hostId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.RevokeHostAuthorizationAsync(System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="clientId"></param>
            <param name="hostId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.CreateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.CreateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.DeleteRegistrationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetRegistrationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetRegistrationAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetRegistrationsAsync(System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.UpdateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.UpdateRegistrationAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration,System.Boolean,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registration"></param>
             <param name="includeSecret"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.GetSecretAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient.RotateSecretAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="registrationId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.ExchangeAccessTokenKeyAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="accessTokenKey"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.IssueAppSessionTokenAsync(Microsoft.VisualStudio.Services.Common.SubjectDescriptor,System.Guid,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="subjectDescriptor"></param>
            <param name="clientId"></param>
            <param name="authorizationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.ExchangeAppTokenAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.AppTokenSecretPair,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="appInfo"></param>
            <param name="accessId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.CreateSessionTokenAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken,System.Guid,System.Guid,System.Guid,System.Nullable{Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="sessionToken"></param>
            <param name="hostId"></param>
            <param name="orgHostId"></param>
            <param name="deploymentHostId"></param>
            <param name="tokenType"></param>
            <param name="isPublic"></param>
            <param name="isRequestedByTfsPatWebUI"></param>
            <param name="isImpersonating"></param>
            <param name="secretToken"></param>
            <param name="requestedById"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.GetSessionTokenAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="authorizationId"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.GetSessionTokensAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="isPublic"></param>
            <param name="includePublicData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.GetSessionTokensPageAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions,Microsoft.VisualStudio.Services.DelegatedAuthorization.CreatedByOptions,Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions,System.Boolean,System.Int32,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="displayFilterOption"></param>
            <param name="createdByOption"></param>
            <param name="sortByOption"></param>
            <param name="isSortAscending"></param>
            <param name="startRowNumber"></param>
            <param name="pageSize"></param>
            <param name="pageRequestTimeStamp"></param>
            <param name="isPublic"></param>
            <param name="includePublicData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.RemovePublicKeyAsync(Microsoft.VisualStudio.Services.DelegatedAuthorization.SshPublicKey,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publicData"></param>
            <param name="remove"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.RevokeAllSessionTokensOfUserAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.RevokeSessionTokenAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="authorizationId"></param>
            <param name="isPublic"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient.UpdateSessionTokenAsync(System.Guid,Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken,System.Nullable{Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="authorizationId"></param>
            <param name="sessionToken"></param>
            <param name="tokenType"></param>
            <param name="isPublic"></param>
            <param name="isRequestedByTfsPatWebUI"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenOauth2HttpClient.IssueApplicationTokenAsync(System.String,System.Guid,System.Guid,System.Nullable{System.Guid},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="clientSecret"></param>
             <param name="registrationId"></param>
             <param name="hostId"></param>
             <param name="tenantId"></param>
             <param name="requestedScopes"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenOauth2HttpClient.IssueTokenAsync(Microsoft.VisualStudio.Services.Tokens.GrantTokenSecretPair,Microsoft.VisualStudio.Services.DelegatedAuthorization.GrantType,System.Guid,System.Guid,System.Uri,System.Uri,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="tokenSecretPair"></param>
             <param name="grantType"></param>
             <param name="hostId"></param>
             <param name="orgHostId"></param>
             <param name="audience"></param>
             <param name="redirectUri"></param>
             <param name="accessId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Tokens.WebApi.TokenExpirationHttpClient.GetSessionTokensAsync(System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            This is a legacy controller that should have been cleanedup after notigfication service has been implemented in token service.  SPS does not call it, tokens service is reponsible for execution of a job
            </summary>
            <param name="setToExpireOn"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKey">
            <summary>
            Represents a SigningKey object containing Key Id, pre-registered namespace of key and secretKeyData.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKey.SigningKeyNamespace">
             <summary>
            Registered key namespace
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKey.KeyData">
            <summary>
            Signingkey secret from store
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyMetadata">
            <summary>
            Represents a container that store metadata about signing key
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyMetadata.ValidFrom">
            <summary>
            Creation DatetimeOffset of the Key
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyMetadata.SigningValidTo">
            <summary>
            DatetimeOffset indicating expiry of key for signing purposes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyMetadata.ValidationValidTo">
            <summary>
            DatetimeOffset indicating expiry of key for validation purposes.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace">
            <summary>
            Represents a keynamespace publishing rules associated with creation and usage of signingkeys generated in the namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.Name">
            <summary>
            Unique namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.SigningKeyBatchSize">
            <summary>
            Min pool size of SigningKeys in namespace active for signing and validation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.SigningLifetimeInDays">
            <summary>
            Signing lifetime of keys in days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.ValidationLifetimeInDays">
            <summary>
            Validation lifetime of keys in days.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.SigningKeyIds">
            <summary>
            List of SigningKeyIds valid for signing
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace.ValidationKeys">
            <summary>
            Dictionary of SigningKeyIds and associated key metadata valid for validation.
            SigningKeyIds will be a subset of ValidationKeys.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient.GetSyncUserAccountMappingsStatusAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient.QueueSyncUserAccountMappingsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient.ActivateUserAccountMappingAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userId"></param>
            <param name="accountId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient.ActivateUserAccountMappingAsync(System.Guid,System.Guid,Microsoft.VisualStudio.Services.UserMapping.UserType,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userId"></param>
            <param name="accountId"></param>
            <param name="userType"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient.QueryAccountIdsAsync(System.String,Microsoft.VisualStudio.Services.UserMapping.UserType,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userId"></param>
            <param name="userType"></param>
            <param name="useEqualsCheckForUserTypeMatch"></param>
            <param name="includeDeletedAccounts"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.ActivateUserAccountMappingAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="accountId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.ActivateUserAccountMappingAsync(System.String,System.Guid,Microsoft.VisualStudio.Services.UserAccountMapping.UserRole,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="accountId"></param>
            <param name="userRole"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.DeactivateUserAccountMappingAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="accountId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.HasMappingsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.QueryAccountIdsAsync(System.String,Microsoft.VisualStudio.Services.UserAccountMapping.UserRole,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userRole"></param>
            <param name="useEqualsCheckForUserRoleMatch"></param>
            <param name="includeDeletedAccounts"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase.SetUserAccountLicenseInfoAsync(System.String,System.Guid,Microsoft.VisualStudio.Services.UserAccountMapping.VisualStudioLevel,Microsoft.VisualStudio.Services.UserAccountMapping.VisualStudioLevel,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="accountId"></param>
            <param name="maxVsLevelFromAccountLicense"></param>
            <param name="maxVsLevelFromAccountExtensions"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase.GetCertificateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase.GetClientRightsAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="rightName"></param>
            <param name="productVersion"></param>
            <param name="edition"></param>
            <param name="relType"></param>
            <param name="includeCertificate"></param>
            <param name="canary"></param>
            <param name="machineId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase.GetEntitlementsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase.GetVisualStudioTrialExpirationAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="machineId"></param>
            <param name="majorVersion"></param>
            <param name="productFamilyId"></param>
            <param name="productEditionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase.SetVisualStudioTrialInfoAsync(System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="majorVersion"></param>
            <param name="productFamilyId"></param>
            <param name="productEditionId"></param>
            <param name="expirationDate"></param>
            <param name="createdDate"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClient.GetMsdnEntitlementsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.AccessedHostsParameters">
            <summary>
            Request to update a user's accessed hosts.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.AccessedHost">
            <summary>
            Host accessed by a user.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.Avatar">
            <summary>
            The user's picture.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.Avatar.Image">
            <summary>
            The raw avatar image data, in either jpg or png format.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.Avatar.LastModified">
            <summary>
            The date/time at which the avatar was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.Avatar.Size">
            <summary>
            The size of the avatar, e.g. small, medium, or large.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.Avatar.IsAutoGenerated">
            <summary>
            True if the avatar is dynamically generated, false if user-provided.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.AvatarSize">
            <summary>
            The avatar size, as scaled to one of several predefined settings.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Users.AvatarSize.Small">
            <summary>
            34 x 34 pixels
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Users.AvatarSize.Medium">
            <summary>
            44 x 44 pixels
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Users.AvatarSize.Large">
            <summary>
            220 x 220 pixels
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.CreateUserParameters">
            <summary>
            Used at the time of initial user creation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.Descriptor">
            <summary>
            The user's unique identifier, and the primary means by which the user is referenced.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.DisplayName">
            <summary>
            The user's name, as displayed throughout the product.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.Mail">
            <summary>
            The user's preferred email address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.Country">
            <summary>
            The user's country of residence or association.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.Region">
            <summary>
            The region in which the user resides or is associated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.CreateUserParameters.PendingProfileCreation">
            <summary>
            Identifier to mark whether user's profile is pending
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.MailConfirmationParameters.ChallengeCode">
            <summary>
            The unique code that proves ownership of the email address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.MailConfirmationParameters.MailAddress">
            <summary>
            The email address to be confirmed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters">
            <summary>
            Used for updating a user's attributes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters.Name">
            <summary>
            The unique group-prefixed name of the attribute, e.g. "TFS.TimeZone".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters.Value">
            <summary>
            The value of the attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters.LastModified">
            <summary>
            The date/time at which the attribute was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters.Revision">
            <summary>
            The attribute's revision, for change tracking.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.UpdateUserParameters">
            <summary>
            Used for updating a user's data.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.#ctor">
            <summary>
            Creates a new instance of an UpdateUserParameters object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Descriptor">
            <summary>
            The user's unique identifier, and the primary means by which the user is referenced.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Properties">
            <summary>
            The collection of properties to set.  See "User" for valid fields.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.DisplayName">
            <summary>
            The user's name, as displayed throughout the product.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Mail">
            <summary>
            The user's preferred email address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.UnconfirmedMail">
            <summary>
            The user's preferred email address which has not yet been confirmed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Country">
            <summary>
            The user's country of residence or association.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Region">
            <summary>
            The region in which the user resides or is associated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Bio">
            <summary>
            A short blurb of "about me"-style text.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Blog">
            <summary>
            A link to an external blog.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Company">
            <summary>
            The company at which the user is employed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.LastModified">
            <summary>
            The date/time at which the user data was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UpdateUserParameters.Revision">
            <summary>
            The user data revision, for change tracking.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Descriptor">
            <summary>
            The user's unique identifier, and the primary means by which the user is referenced.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.UserName">
            <summary>
            The unique name of the user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.DisplayName">
            <summary>
            The user's name, as displayed throughout the product.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Mail">
            <summary>
            The user's preferred email address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.UnconfirmedMail">
            <summary>
            The user's preferred email address which has not yet been confirmed.
            Do not use this as an email destination, instead prefer the
            confirmed email address <see cref="P:Microsoft.VisualStudio.Services.Users.User.Mail"/>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Bio">
            <summary>
            A short blurb of "about me"-style text.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Blog">
            <summary>
            A link to an external blog.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Company">
            <summary>
            The company at which the user is employed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Country">
            <summary>
            The user's country of residence or association.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.DateCreated">
            <summary>
            The date the user was created in the system
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Links">
            <summary>
            A set of readonly links for obtaining more info about the user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.LastModified">
            <summary>
            The date/time at which the user data was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.Revision">
            <summary>
            The attribute's revision, for change tracking.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.User.State">
            <summary>
            The status of the user
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.User.UserState">
            <summary>
            Enumeration for the user status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttribute.Name">
            <summary>
            The unique group-prefixed name of the attribute, e.g. "TFS.TimeZone".
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttribute.Value">
            <summary>
            The value of the attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttribute.LastModified">
            <summary>
            The date/time at which the attribute was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttribute.Revision">
            <summary>
            The attribute's revision, for change tracking.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttributes.Attributes">
            <summary>
            Collection of attributes
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Users.UserAttributes.ContinuationToken">
            <summary>
            Opaque string to get the next chunk of results
            Server would return non-null string here if there is more data
            Client will need then to pass it to the server to get more results
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Users.UserResourceIds">
            <summary>
            Constants specific to the User Service
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.DeleteAttributeAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes an attribute for the given user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="attributeName">The name of the attribute to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetAttributeAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves an attribute for a given user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="attributeName">The name of the attribute to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.QueryAttributesAsync(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves attributes for a given user. May return subset of attributes providing continuation token to retrieve the next batch
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="continuationToken">The token telling server to return the next chunk of attributes from where it stopped last time. This must either be null or be a value returned from the previous call to this API</param>
            <param name="queryPattern">The wildcardable pattern for the attribute names to be retrieved, e.g. queryPattern=visualstudio.14.*</param>
            <param name="modifiedAfter">The optional date/time of the minimum modification date for attributes to be retrieved, e.g. modifiedafter=2017-04-12T15:00:00.000Z</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.SetAttributesAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates multiple attributes for a given user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="attributeParametersList">The list of attribute data to update.  Existing values will be overwritten.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.DeleteAvatarAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes a user's avatar.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetAvatarAsync(System.String,System.Nullable{Microsoft.VisualStudio.Services.Users.AvatarSize},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves the user's avatar.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="size">The size to retrieve, e.g. small, medium (default), or large.</param>
            <param name="format">The format for the response. Can be null. Accepted values: "png", "json"</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.SetAvatarAsync(System.String,Microsoft.VisualStudio.Services.Users.Avatar,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates an avatar to be associated with a given user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="avatar">The avatar to set. The Image property must contain the binary representation of the image, in either jpg or png format.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.CreateAvatarPreviewAsync(System.String,Microsoft.VisualStudio.Services.Users.Avatar,System.Nullable{Microsoft.VisualStudio.Services.Users.AvatarSize},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="avatar"></param>
            <param name="size"></param>
            <param name="displayName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetDescriptorAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.ConfirmMailAsync(System.String,Microsoft.VisualStudio.Services.Users.MailConfirmationParameters,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Confirms preferred email for a given user.
            </summary>
            <param name="descriptor">The descriptor identifying the user for the operation.</param>
            <param name="confirmationParameters"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetMostRecentlyAccessedHostsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Returns a user's most recently accessed hosts.
            </summary>
            <param name="descriptor">A user descriptor</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.UpdateMostRecentlyAccessedHostsAsync(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Users.AccessedHostsParameters},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates users' most recently accessed hosts.
            </summary>
            <param name="parametersList">A list of update parameters</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetStorageKeyAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetUserDefaultsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves the default data for the authenticated user.
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.CreateUserAsync(Microsoft.VisualStudio.Services.Users.CreateUserParameters,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a new user.
            </summary>
            <param name="userParameters">The parameters to be used for user creation.</param>
            <param name="createLocal"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.DeleteUserAsync(Microsoft.VisualStudio.Services.Common.SubjectDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.GetUserAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves the data for a given user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="createIfNotExists">Whether to auto-provision the authenticated user</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase.UpdateUserAsync(System.String,Microsoft.VisualStudio.Services.Users.UpdateUserParameters,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates an existing user.
            </summary>
            <param name="descriptor">The identity of the user for the operation.</param>
            <param name="userParameters">The parameters to be used for user update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.DeleteSelfAttributeAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes an attribute for the given user.
            </summary>
            <param name="attributeName">Name of the attribute to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.GetSelfAttributeAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves an attribute for a given user.
            </summary>
            <param name="attributeName">The name of the attribute to retrieve.  If not provided, all attributes are returned.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.QuerySelfAttributesAsync(System.String,System.String,System.Nullable{System.DateTimeOffset},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="continuationToken"></param>
            <param name="queryPattern"></param>
            <param name="modifiedAfter"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.SetSelfAttributesAsync(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates multiple attributes for a given user.
            </summary>
            <param name="attributeParametersList">The list of resource representations containing the attribute data to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.GetSelfAsync(System.Object,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves the data for a given user.
            </summary>
            <param name="descriptor">The descriptor identifying the user for the operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.UpdateSelfAsync(Microsoft.VisualStudio.Services.Users.UpdateUserParameters,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates an existing user.
            </summary>
            <param name="userParameters">The object containing the user's data to be updated.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Users.Client.UserHttpClient.GetSelfAvatarAsync(System.Nullable{Microsoft.VisualStudio.Services.Users.AvatarSize},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves the user avatar.
            </summary>
            <param name="descriptor">The descriptor identifying the user for the operation.</param>
            <param name="size"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebPlatform.Level.Off">
            Off: Output no tracing and debugging messages.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebPlatform.Level.Error">
            Error: Output error-handling messages.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebPlatform.Level.Warning">
            Warning: Output warnings and error-handling messages.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebPlatform.Level.Info">
            Info: Output informational messages, warnings, and error-handling messages.
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebPlatform.Level.Verbose">
            Verbose: Output all debugging and tracing messages.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.DeleteBlobCopyRequestAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="requestId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.GetBlobCopyRequestAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="requestId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.GetBlobCopyRequestsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.QueueBlobCopyRequestAsync(Microsoft.VisualStudio.Services.Zeus.BlobCopyRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.UpdateBlobCopyRequestAsync(Microsoft.VisualStudio.Services.Zeus.BlobCopyRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.DeleteDatabaseMigrationAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migrationId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.GetDatabaseMigrationAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migrationId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.GetDatabaseMigrationsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.QueueDatabaseMigrationAsync(Microsoft.VisualStudio.Services.Zeus.DatabaseMigration,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migration"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.UpdateDatabaseMigrationAsync(Microsoft.VisualStudio.Services.Zeus.DatabaseMigration,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migration"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ClientTrace.WebApi.ClientTraceHttpClient.PublishEventsAsync(Microsoft.VisualStudio.Services.WebPlatform.ClientTraceEvent[],System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="events"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.CustomerIntelligence.WebApi.CustomerIntelligenceHttpClient.PublishEventsAsync(Microsoft.VisualStudio.Services.WebPlatform.CustomerIntelligenceEvent[],System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="events"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient.GetContactWithOffersAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets if the user is contactable.
            </summary>
            <param name="descriptor">The subject descriptor for the user to retrieve if that user is contactable.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient.SetContactWithOffersAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="value"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient.GetMarketingPreferencesAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient.SetMarketingPreferencesAsync(Microsoft.VisualStudio.Services.MarketingPreferences.MarketingPreferences,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="preferences"></param>
            <param name="descriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Performance.TimingEntry">
            <summary>
            A single secured timing consisting of a duration and start time
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingEntry.ElapsedTicks">
            <summary>
            Duration of the entry in ticks
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingEntry.StartOffset">
            <summary>
            Offset from Server Request Context start time in microseconds
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingEntry.Properties">
            <summary>
            Properties to distinguish timings within the same group or to provide data to send with telemetry
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Performance.TimingGroup">
            <summary>
            A set of secured performance timings all keyed off of the same string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingGroup.ElapsedTicks">
            <summary>
            Overall duration of all entries in this group in ticks
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingGroup.Count">
            <summary>
            The total number of timing entries associated with this group
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Performance.TimingGroup.Timings">
            <summary>
            A list of timing entries in this group. Only the first few entries in each group are collected.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.SignalR.ISignalRObjectContainer">
            <summary>
            Containers of ISignalRObjects should implement this interface. If you implement this interface, all
            serializable properties must be of type ISignalRObject or IEnumerable of ISignalRObject. This will
            be enforced using a roslyn analyzer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.SignalR.ISignalRObject">
            <summary>
            Complex types sent over SignalR should implement this interface. If you implement this interface, all
            serializable properties must be of type ISignalRObject or a primitive type. This will
            be enforced using a roslyn analyzer.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel">
            <summary>
            License assigned to a user
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.LicensingSource">
            <summary>
            Licensing Source (e.g. Account. MSDN etc.)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.AccountLicenseType">
            <summary>
            Type of Account License (e.g. Express, Stakeholder etc.). To use the AccountLicenseType, LicensingSource should be defined as 'account' in the request body.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.MsdnLicenseType">
            <summary>
            Type of MSDN License (e.g. Visual Studio Professional, Visual Studio Enterprise etc.). To use the MsdnLicenseType, LicensingSource should be defined as 'msdn' in the request body.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.LicenseDisplayName">
            <summary>
            Display name of the License
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.Status">
            <summary>
            User status in the account
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.StatusMessage">
            <summary>
            Status message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel.AssignmentSource">
            <summary>
            Assignment Source of the License (e.g. Group, Unknown etc.
            </summary>
        </member>
    </members>
</doc>
